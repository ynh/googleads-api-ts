// Code generated by protoc-gen-typescript-http. DO NOT EDIT.
/* eslint-disable camelcase */

// Request message for [IncomeRangeViewService.GetIncomeRangeView][google.ads.googleads.v9.services.IncomeRangeViewService.GetIncomeRangeView].
export type GetIncomeRangeViewRequest = {
  // Required. The resource name of the income range view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage income range views.
export interface IncomeRangeViewService {
  // Returns the requested income range view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetIncomeRangeView(request: GetIncomeRangeViewRequest): Promise<googleadsgoogleadsv9resources_IncomeRangeView>;
}

type Request = {
  path: string;
  method: string;
  body: string | null;
};

type RequestHandler = (request: Request) => Promise<unknown>;

export function createIncomeRangeViewServiceClient(
  handler: RequestHandler
): IncomeRangeViewService {
  return {
    GetIncomeRangeView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_IncomeRangeView>;
    },
  };
}
// An income range view.
export type googleadsgoogleadsv9resources_IncomeRangeView = {
  // Output only. The resource name of the income range view.
  // Income range view resource names have the form:
  // `customers/{customer_id}/incomeRangeViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [AdGroupSimulationService.GetAdGroupSimulation][google.ads.googleads.v9.services.AdGroupSimulationService.GetAdGroupSimulation].
export type GetAdGroupSimulationRequest = {
  // Required. The resource name of the ad group simulation to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch ad group simulations.
export interface AdGroupSimulationService {
  // Returns the requested ad group simulation in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupSimulation(request: GetAdGroupSimulationRequest): Promise<googleadsgoogleadsv9resources_AdGroupSimulation>;
}

export function createAdGroupSimulationServiceClient(
  handler: RequestHandler
): AdGroupSimulationService {
  return {
    GetAdGroupSimulation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupSimulation>;
    },
  };
}
// An ad group simulation. Supported combinations of advertising
// channel type, simulation type and simulation modification method is
// detailed below respectively.
// 1. SEARCH - CPC_BID - DEFAULT
// 2. SEARCH - CPC_BID - UNIFORM
// 3. SEARCH - TARGET_CPA - UNIFORM
// 4. SEARCH - TARGET_ROAS - UNIFORM
// 5. DISPLAY - CPC_BID - DEFAULT
// 6. DISPLAY - CPC_BID - UNIFORM
// 7. DISPLAY - TARGET_CPA - UNIFORM
export type googleadsgoogleadsv9resources_AdGroupSimulation = {
  // Output only. The resource name of the ad group simulation.
  // Ad group simulation resource names have the form:
  // `customers/{customer_id}/adGroupSimulations/{ad_group_id}~{type}~{modification_method}~{start_date}~{end_date}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Ad group id of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupId?: number;
  // Output only. The field that the simulation modifies.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_SimulationTypeEnum_SimulationType | undefined;
  // Output only. How the simulation modifies the field.
  //
  // Behaviors: OUTPUT_ONLY
  modificationMethod: googleadsgoogleadsv9enums_SimulationModificationMethodEnum_SimulationModificationMethod | undefined;
  // Output only. First day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  startDate?: string;
  // Output only. Last day on which the simulation is based, in YYYY-MM-DD format
  //
  // Behaviors: OUTPUT_ONLY
  endDate?: string;
  // Output only. Simulation points if the simulation type is CPC_BID.
  //
  // Behaviors: OUTPUT_ONLY
  cpcBidPointList?: googleadsgoogleadsv9common_CpcBidSimulationPointList;
  // Output only. Simulation points if the simulation type is CPV_BID.
  //
  // Behaviors: OUTPUT_ONLY
  cpvBidPointList?: googleadsgoogleadsv9common_CpvBidSimulationPointList;
  // Output only. Simulation points if the simulation type is TARGET_CPA.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpaPointList?: googleadsgoogleadsv9common_TargetCpaSimulationPointList;
  // Output only. Simulation points if the simulation type is TARGET_ROAS.
  //
  // Behaviors: OUTPUT_ONLY
  targetRoasPointList?: googleadsgoogleadsv9common_TargetRoasSimulationPointList;
};

// Enum describing the field a simulation modifies.
export type googleadsgoogleadsv9enums_SimulationTypeEnum_SimulationType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The simulation is for a CPC bid.
  | "CPC_BID"
  // The simulation is for a CPV bid.
  | "CPV_BID"
  // The simulation is for a CPA target.
  | "TARGET_CPA"
  // The simulation is for a bid modifier.
  | "BID_MODIFIER"
  // The simulation is for a ROAS target.
  | "TARGET_ROAS"
  // The simulation is for a percent CPC bid.
  | "PERCENT_CPC_BID"
  // The simulation is for an impression share target.
  | "TARGET_IMPRESSION_SHARE"
  // The simulation is for a budget.
  | "BUDGET";
// Enum describing the method by which a simulation modifies a field.
export type googleadsgoogleadsv9enums_SimulationModificationMethodEnum_SimulationModificationMethod =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The values in a simulation were applied to all children of a given
  // resource uniformly. Overrides on child resources were not respected.
  | "UNIFORM"
  // The values in a simulation were applied to the given resource.
  // Overrides on child resources were respected, and traffic estimates
  // do not include these resources.
  | "DEFAULT"
  // The values in a simulation were all scaled by the same factor.
  // For example, in a simulated TargetCpa campaign, the campaign target and
  // all ad group targets were scaled by a factor of X.
  | "SCALING";
// A container for simulation points for simulations of type CPC_BID.
export type googleadsgoogleadsv9common_CpcBidSimulationPointList = {
  // Projected metrics for a series of CPC bid amounts.
  points: googleadsgoogleadsv9common_CpcBidSimulationPoint[] | undefined;
};

// Projected metrics for a specific CPC bid amount.
export type googleadsgoogleadsv9common_CpcBidSimulationPoint = {
  // Projected required daily budget that the advertiser must set in order to
  // receive the estimated traffic, in micros of advertiser currency.
  requiredBudgetAmountMicros: number | undefined;
  // Projected number of biddable conversions.
  biddableConversions?: number;
  // Projected total value of biddable conversions.
  biddableConversionsValue?: number;
  // Projected number of clicks.
  clicks?: number;
  // Projected cost in micros.
  costMicros?: number;
  // Projected number of impressions.
  impressions?: number;
  // Projected number of top slot impressions.
  // Only search advertising channel type supports this field.
  topSlotImpressions?: number;
  // The simulated CPC bid upon which projected metrics are based.
  cpcBidMicros?: number;
  // The simulated scaling modifier upon which projected metrics are based.
  // All CPC bids relevant to the simulated entity are scaled by this
  // modifier.
  cpcBidScalingModifier?: number;
};

// A container for simulation points for simulations of type CPV_BID.
export type googleadsgoogleadsv9common_CpvBidSimulationPointList = {
  // Projected metrics for a series of CPV bid amounts.
  points: googleadsgoogleadsv9common_CpvBidSimulationPoint[] | undefined;
};

// Projected metrics for a specific CPV bid amount.
export type googleadsgoogleadsv9common_CpvBidSimulationPoint = {
  // The simulated CPV bid upon which projected metrics are based.
  cpvBidMicros?: number;
  // Projected cost in micros.
  costMicros?: number;
  // Projected number of impressions.
  impressions?: number;
  // Projected number of views.
  views?: number;
};

// A container for simulation points for simulations of type TARGET_CPA.
export type googleadsgoogleadsv9common_TargetCpaSimulationPointList = {
  // Projected metrics for a series of target CPA amounts.
  points: googleadsgoogleadsv9common_TargetCpaSimulationPoint[] | undefined;
};

// Projected metrics for a specific target CPA amount.
export type googleadsgoogleadsv9common_TargetCpaSimulationPoint = {
  // Projected required daily budget that the advertiser must set in order to
  // receive the estimated traffic, in micros of advertiser currency.
  requiredBudgetAmountMicros: number | undefined;
  // Projected number of biddable conversions.
  biddableConversions?: number;
  // Projected total value of biddable conversions.
  biddableConversionsValue?: number;
  // Projected number of app installs.
  appInstalls: number | undefined;
  // Projected number of in-app actions.
  inAppActions: number | undefined;
  // Projected number of clicks.
  clicks?: number;
  // Projected cost in micros.
  costMicros?: number;
  // Projected number of impressions.
  impressions?: number;
  // Projected number of top slot impressions.
  // Only search advertising channel type supports this field.
  topSlotImpressions?: number;
  // The simulated target CPA upon which projected metrics are based.
  targetCpaMicros?: number;
  // The simulated scaling modifier upon which projected metrics are based.
  // All CPA targets relevant to the simulated entity are scaled by this
  // modifier.
  targetCpaScalingModifier?: number;
};

// A container for simulation points for simulations of type TARGET_ROAS.
export type googleadsgoogleadsv9common_TargetRoasSimulationPointList = {
  // Projected metrics for a series of target ROAS amounts.
  points: googleadsgoogleadsv9common_TargetRoasSimulationPoint[] | undefined;
};

// Projected metrics for a specific target ROAS amount.
export type googleadsgoogleadsv9common_TargetRoasSimulationPoint = {
  // The simulated target ROAS upon which projected metrics are based.
  targetRoas?: number;
  // Projected required daily budget that the advertiser must set in order to
  // receive the estimated traffic, in micros of advertiser currency.
  requiredBudgetAmountMicros: number | undefined;
  // Projected number of biddable conversions.
  biddableConversions?: number;
  // Projected total value of biddable conversions.
  biddableConversionsValue?: number;
  // Projected number of clicks.
  clicks?: number;
  // Projected cost in micros.
  costMicros?: number;
  // Projected number of impressions.
  impressions?: number;
  // Projected number of top slot impressions.
  // Only Search advertising channel type supports this field.
  topSlotImpressions?: number;
};

// Request message for
// [ShoppingPerformanceViewService.GetShoppingPerformanceView][google.ads.googleads.v9.services.ShoppingPerformanceViewService.GetShoppingPerformanceView].
export type GetShoppingPerformanceViewRequest = {
  // Required. The resource name of the Shopping performance view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Shopping performance views.
export interface ShoppingPerformanceViewService {
  // Returns the requested Shopping performance view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetShoppingPerformanceView(request: GetShoppingPerformanceViewRequest): Promise<googleadsgoogleadsv9resources_ShoppingPerformanceView>;
}

export function createShoppingPerformanceViewServiceClient(
  handler: RequestHandler
): ShoppingPerformanceViewService {
  return {
    GetShoppingPerformanceView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ShoppingPerformanceView>;
    },
  };
}
// Shopping performance view.
// Provides Shopping campaign statistics aggregated at several product dimension
// levels. Product dimension values from Merchant Center such as brand,
// category, custom attributes, product condition and product type will reflect
// the state of each dimension as of the date and time when the corresponding
// event was recorded.
export type googleadsgoogleadsv9resources_ShoppingPerformanceView = {
  // Output only. The resource name of the Shopping performance view.
  // Shopping performance view resource names have the form:
  // `customers/{customer_id}/shoppingPerformanceView`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for
// [ExpandedLandingPageViewService.GetExpandedLandingPageView][google.ads.googleads.v9.services.ExpandedLandingPageViewService.GetExpandedLandingPageView].
export type GetExpandedLandingPageViewRequest = {
  // Required. The resource name of the expanded landing page view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch expanded landing page views.
export interface ExpandedLandingPageViewService {
  // Returns the requested expanded landing page view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetExpandedLandingPageView(request: GetExpandedLandingPageViewRequest): Promise<googleadsgoogleadsv9resources_ExpandedLandingPageView>;
}

export function createExpandedLandingPageViewServiceClient(
  handler: RequestHandler
): ExpandedLandingPageViewService {
  return {
    GetExpandedLandingPageView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ExpandedLandingPageView>;
    },
  };
}
// A landing page view with metrics aggregated at the expanded final URL
// level.
export type googleadsgoogleadsv9resources_ExpandedLandingPageView = {
  // Output only. The resource name of the expanded landing page view.
  // Expanded landing page view resource names have the form:
  // `customers/{customer_id}/expandedLandingPageViews/{expanded_final_url_fingerprint}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The final URL that clicks are directed to.
  //
  // Behaviors: OUTPUT_ONLY
  expandedFinalUrl?: string;
};

// Request message for [CampaignExperimentService.GetCampaignExperiment][google.ads.googleads.v9.services.CampaignExperimentService.GetCampaignExperiment].
export type GetCampaignExperimentRequest = {
  // Required. The resource name of the campaign experiment to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignExperimentService.MutateCampaignExperiments][google.ads.googleads.v9.services.CampaignExperimentService.MutateCampaignExperiments].
export type MutateCampaignExperimentsRequest = {
  // Required. The ID of the customer whose campaign experiments are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign experiments.
  //
  // Behaviors: REQUIRED
  operations: CampaignExperimentOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single update operation on a campaign experiment.
export type CampaignExperimentOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The campaign experiment is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CampaignExperiment;
  // Remove operation: The campaign experiment is expected to have a valid
  // resource name, in this format:
  // `customers/{customer_id}/campaignExperiments/{campaign_experiment_id}`
  remove?: string;
};

// In JSON, a field mask is encoded as a single string where paths are
// separated by a comma. Fields name in each path are converted
// to/from lower-camel naming conventions.
// As an example, consider the following message declarations:
//
//     message Profile {
//       User user = 1;
//       Photo photo = 2;
//     }
//     message User {
//       string display_name = 1;
//       string address = 2;
//     }
//
// In proto a field mask for `Profile` may look as such:
//
//     mask {
//       paths: "user.display_name"
//       paths: "photo"
//     }
//
// In JSON, the same mask is represented as below:
//
//     {
//       mask: "user.displayName,photo"
//     }
type wellKnownFieldMask = string;

// An A/B experiment that compares the performance of the base campaign
// (the control) and a variation of that campaign (the experiment).
export type googleadsgoogleadsv9resources_CampaignExperiment = {
  // Immutable. The resource name of the campaign experiment.
  // Campaign experiment resource names have the form:
  // `customers/{customer_id}/campaignExperiments/{campaign_experiment_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the campaign experiment.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Immutable. The campaign draft with staged changes to the base campaign.
  //
  // Behaviors: IMMUTABLE
  campaignDraft?: string;
  // The name of the campaign experiment.
  // This field is required when creating new campaign experiments
  // and must not conflict with the name of another non-removed
  // campaign experiment or campaign.
  // It must not contain any null (code point 0x0), NL line feed
  // (code point 0xA) or carriage return (code point 0xD) characters.
  name?: string;
  // The description of the experiment.
  description?: string;
  // Immutable. Share of traffic directed to experiment as a percent (must be between 1 and
  // 99 inclusive. Base campaign receives the remainder of the traffic
  // (100 - traffic_split_percent). Required for create.
  //
  // Behaviors: IMMUTABLE
  trafficSplitPercent?: number;
  // Immutable. Determines the behavior of the traffic split.
  //
  // Behaviors: IMMUTABLE
  trafficSplitType: googleadsgoogleadsv9enums_CampaignExperimentTrafficSplitTypeEnum_CampaignExperimentTrafficSplitType | undefined;
  // Output only. The experiment campaign, as opposed to the base campaign.
  //
  // Behaviors: OUTPUT_ONLY
  experimentCampaign?: string;
  // Output only. The status of the campaign experiment. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CampaignExperimentStatusEnum_CampaignExperimentStatus | undefined;
  // Output only. The resource name of the long-running operation that can be used to poll
  // for completion of experiment create or promote. The most recent long
  // running operation is returned.
  //
  // Behaviors: OUTPUT_ONLY
  longRunningOperation?: string;
  // Date when the campaign experiment starts. By default, the experiment starts
  // now or on the campaign's start date, whichever is later. If this field is
  // set, then the experiment starts at the beginning of the specified date in
  // the customer's time zone. Cannot be changed once the experiment starts.
  // Format: YYYY-MM-DD
  // Example: 2019-03-14
  startDate?: string;
  // The last day of the campaign experiment. By default, the experiment ends on
  // the campaign's end date. If this field is set, then the experiment ends at
  // the end of the specified date in the customer's time zone.
  // Format: YYYY-MM-DD
  // Example: 2019-04-18
  endDate?: string;
};

// Enum of strategies for splitting traffic between base and experiment
// campaigns in campaign experiment.
export type googleadsgoogleadsv9enums_CampaignExperimentTrafficSplitTypeEnum_CampaignExperimentTrafficSplitType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Traffic is randomly assigned to the base or experiment arm for each
  // query, independent of previous assignments for the same user.
  | "RANDOM_QUERY"
  // Traffic is split using cookies to keep users in the same arm (base or
  // experiment) of the experiment.
  | "COOKIE";
// Possible statuses of a campaign experiment.
export type googleadsgoogleadsv9enums_CampaignExperimentStatusEnum_CampaignExperimentStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The experiment campaign is being initialized.
  | "INITIALIZING"
  // Initialization of the experiment campaign failed.
  | "INITIALIZATION_FAILED"
  // The experiment campaign is fully initialized. The experiment is currently
  // running, scheduled to run in the future or has ended based on its
  // end date. An experiment with the status INITIALIZING will be updated to
  // ENABLED when it is fully created.
  | "ENABLED"
  // The experiment campaign was graduated to a stand-alone
  // campaign, existing independently of the experiment.
  | "GRADUATED"
  // The experiment is removed.
  | "REMOVED"
  // The experiment's changes are being applied to the original campaign.
  // The long running operation returned by the promote method can be polled
  // to see the status of the promotion.
  | "PROMOTING"
  // Promote of the experiment campaign failed.
  | "PROMOTION_FAILED"
  // The changes of the experiment are promoted to their original campaign.
  | "PROMOTED"
  // The experiment was ended manually. It did not end based on its end date.
  | "ENDED_MANUALLY";
// Possible response content types.
export type googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType =
  // Not specified. Will return the resource name only in the response.
  | "UNSPECIFIED"
  // The mutate response will be the resource name.
  | "RESOURCE_NAME_ONLY"
  // The mutate response will be the resource name and the resource with
  // all mutable fields.
  | "MUTABLE_RESOURCE";
// Response message for campaign experiment mutate.
export type MutateCampaignExperimentsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignExperimentResult[] | undefined;
};

// The `Status` type defines a logical error model that is suitable for
// different programming environments, including REST APIs and RPC APIs. It is
// used by [gRPC](https://github.com/grpc). Each `Status` message contains
// three pieces of data: error code, error message, and error details.
// You can find out more about this error model and how to work with it in the
// [API Design Guide](https://cloud.google.com/apis/design/errors).
export type googlerpc_Status = {
  // The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
  code: number | undefined;
  // A developer-facing error message, which should be in English. Any
  // user-facing error message should be localized and sent in the
  // [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
  message: string | undefined;
  // A list of messages that carry the error details.  There is a common set of
  // message types for APIs to use.
  details: wellKnownAny[] | undefined;
};

// If the Any contains a value that has a special JSON mapping,
// it will be converted as follows:
// {"@type": xxx, "value": yyy}.
// Otherwise, the value will be converted into a JSON object,
// and the "@type" field will be inserted to indicate the actual data type.
interface wellKnownAny {
  "@type": string;
  [key: string]: unknown;
}

// The result for the campaign experiment mutate.
export type MutateCampaignExperimentResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign experiment with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignExperiment: googleadsgoogleadsv9resources_CampaignExperiment | undefined;
};

// Request message for [CampaignExperimentService.CreateCampaignExperiment][google.ads.googleads.v9.services.CampaignExperimentService.CreateCampaignExperiment].
export type CreateCampaignExperimentRequest = {
  // Required. The ID of the customer whose campaign experiment is being created.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The campaign experiment to be created.
  //
  // Behaviors: REQUIRED
  campaignExperiment: googleadsgoogleadsv9resources_CampaignExperiment | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Message used as metadata returned in Long Running Operations for
// CreateCampaignExperimentRequest
export type CreateCampaignExperimentMetadata = {
  // Resource name of campaign experiment created.
  campaignExperiment: string | undefined;
};

// Request message for [CampaignExperimentService.GraduateCampaignExperiment][google.ads.googleads.v9.services.CampaignExperimentService.GraduateCampaignExperiment].
export type GraduateCampaignExperimentRequest = {
  // Required. The resource name of the campaign experiment to graduate.
  //
  // Behaviors: REQUIRED
  campaignExperiment: string | undefined;
  // Required. Resource name of the budget to attach to the campaign graduated from the
  // experiment.
  //
  // Behaviors: REQUIRED
  campaignBudget: string | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for campaign experiment graduate.
export type GraduateCampaignExperimentResponse = {
  // The resource name of the campaign from the graduated experiment.
  // This campaign is the same one as CampaignExperiment.experiment_campaign.
  graduatedCampaign: string | undefined;
};

// Request message for [CampaignExperimentService.PromoteCampaignExperiment][google.ads.googleads.v9.services.CampaignExperimentService.PromoteCampaignExperiment].
export type PromoteCampaignExperimentRequest = {
  // Required. The resource name of the campaign experiment to promote.
  //
  // Behaviors: REQUIRED
  campaignExperiment: string | undefined;
  // If true, the request is validated but no Long Running Operation is created.
  // Only errors are returned.
  validateOnly: boolean | undefined;
};

// Request message for [CampaignExperimentService.EndCampaignExperiment][google.ads.googleads.v9.services.CampaignExperimentService.EndCampaignExperiment].
export type EndCampaignExperimentRequest = {
  // Required. The resource name of the campaign experiment to end.
  //
  // Behaviors: REQUIRED
  campaignExperiment: string | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Request message for
// [CampaignExperimentService.ListCampaignExperimentAsyncErrors][google.ads.googleads.v9.services.CampaignExperimentService.ListCampaignExperimentAsyncErrors].
export type ListCampaignExperimentAsyncErrorsRequest = {
  // Required. The name of the campaign experiment from which to retrieve the async
  // errors.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  pageToken: string | undefined;
  // Number of elements to retrieve in a single page.
  // When a page request is too large, the server may decide to
  // further limit the number of returned resources.
  pageSize: number | undefined;
};

// Response message for
// [CampaignExperimentService.ListCampaignExperimentAsyncErrors][google.ads.googleads.v9.services.CampaignExperimentService.ListCampaignExperimentAsyncErrors].
export type ListCampaignExperimentAsyncErrorsResponse = {
  // Details of the errors when performing the asynchronous operation.
  errors: googlerpc_Status[] | undefined;
  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  nextPageToken: string | undefined;
};

// CampaignExperimentService manages the life cycle of campaign experiments.
// It is used to create new experiments from drafts, modify experiment
// properties, promote changes in an experiment back to its base campaign,
// graduate experiments into new stand-alone campaigns, and to remove an
// experiment.
// An experiment consists of two variants or arms - the base campaign and the
// experiment campaign, directing a fixed share of traffic to each arm.
// A campaign experiment is created from a draft of changes to the base campaign
// and will be a snapshot of changes in the draft at the time of creation.
export interface CampaignExperimentService {
  // Returns the requested campaign experiment in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignExperiment(request: GetCampaignExperimentRequest): Promise<googleadsgoogleadsv9resources_CampaignExperiment>;
  // Creates a campaign experiment based on a campaign draft. The draft campaign
  // will be forked into a real campaign (called the experiment campaign) that
  // will begin serving ads if successfully created.
  // The campaign experiment is created immediately with status INITIALIZING.
  // This method return a long running operation that tracks the forking of the
  // draft campaign. If the forking fails, a list of errors can be retrieved
  // using the ListCampaignExperimentAsyncErrors method. The operation's
  // metadata will be a StringValue containing the resource name of the created
  // campaign experiment.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignExperimentError]()
  // [DatabaseError]()
  // [DateError]()
  // [DateRangeError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  CreateCampaignExperiment(request: CreateCampaignExperimentRequest): Promise<googlelongrunning_Operation>;
  // Updates campaign experiments. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignExperimentError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCampaignExperiments(request: MutateCampaignExperimentsRequest): Promise<MutateCampaignExperimentsResponse>;
  // Graduates a campaign experiment to a full campaign. The base and experiment
  // campaigns will start running independently with their own budgets.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignExperimentError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  GraduateCampaignExperiment(request: GraduateCampaignExperimentRequest): Promise<GraduateCampaignExperimentResponse>;
  // Promotes the changes in a experiment campaign back to the base campaign.
  // The campaign experiment is updated immediately with status PROMOTING.
  // This method return a long running operation that tracks the promoting of
  // the experiment campaign. If the promoting fails, a list of errors can be
  // retrieved using the ListCampaignExperimentAsyncErrors method.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  PromoteCampaignExperiment(request: PromoteCampaignExperimentRequest): Promise<googlelongrunning_Operation>;
  // Immediately ends a campaign experiment, changing the experiment's scheduled
  // end date and without waiting for end of day. End date is updated to be the
  // time of the request.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignExperimentError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  EndCampaignExperiment(request: EndCampaignExperimentRequest): Promise<wellKnownEmpty>;
  // Returns all errors that occurred during CampaignExperiment create or
  // promote (whichever occurred last).
  // Supports standard list paging.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListCampaignExperimentAsyncErrors(request: ListCampaignExperimentAsyncErrorsRequest): Promise<ListCampaignExperimentAsyncErrorsResponse>;
}

export function createCampaignExperimentServiceClient(
  handler: RequestHandler
): CampaignExperimentService {
  return {
    GetCampaignExperiment(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignExperiment>;
    },
    CreateCampaignExperiment(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignExperiments:create`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<googlelongrunning_Operation>;
    },
    MutateCampaignExperiments(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignExperiments:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignExperimentsResponse>;
    },
    GraduateCampaignExperiment(request) {
      if (!request.campaignExperiment) {
        throw new Error("missing required field request.campaign_experiment");
      }
      const path = `v9/${request.campaignExperiment}:graduate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GraduateCampaignExperimentResponse>;
    },
    PromoteCampaignExperiment(request) {
      if (!request.campaignExperiment) {
        throw new Error("missing required field request.campaign_experiment");
      }
      const path = `v9/${request.campaignExperiment}:promote`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<googlelongrunning_Operation>;
    },
    EndCampaignExperiment(request) {
      if (!request.campaignExperiment) {
        throw new Error("missing required field request.campaign_experiment");
      }
      const path = `v9/${request.campaignExperiment}:end`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<wellKnownEmpty>;
    },
    ListCampaignExperimentAsyncErrors(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:listAsyncErrors`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      if (request.pageToken) {
        queryParams.push("pageToken=" + encodeURIComponent(request.pageToken.toString()));
      }
      if (request.pageSize) {
        queryParams.push("pageSize=" + encodeURIComponent(request.pageSize.toString()));
      }
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListCampaignExperimentAsyncErrorsResponse>;
    },
  };
}
// This resource represents a long-running operation that is the result of a
// network API call.
export type googlelongrunning_Operation = {
  // The server-assigned name, which is only unique within the same service that
  // originally returns it. If you use the default HTTP mapping, the
  // `name` should be a resource name ending with `operations/{unique_id}`.
  name: string | undefined;
  // Service-specific metadata associated with the operation.  It typically
  // contains progress information and common metadata such as create time.
  // Some services might not provide such metadata.  Any method that returns a
  // long-running operation should document the metadata type, if any.
  metadata: wellKnownAny | undefined;
  // If the value is `false`, it means the operation is still in progress.
  // If `true`, the operation is completed, and either `error` or `response` is
  // available.
  done: boolean | undefined;
  // The error result of the operation in case of failure or cancellation.
  error?: googlerpc_Status;
  // The normal response of the operation in case of success.  If the original
  // method returns no data on success, such as `Delete`, the response is
  // `google.protobuf.Empty`.  If the original method is standard
  // `Get`/`Create`/`Update`, the response should be the resource.  For other
  // methods, the response should have the type `XxxResponse`, where `Xxx`
  // is the original method name.  For example, if the original method name
  // is `TakeSnapshot()`, the inferred response type is
  // `TakeSnapshotResponse`.
  response?: wellKnownAny;
};

// An empty JSON object
type wellKnownEmpty = Record<never, never>;

// Request message for
// [CustomConversionGoalService.MutateCustomConversionGoals][google.ads.googleads.v9.services.CustomConversionGoalService.MutateCustomConversionGoals].
export type MutateCustomConversionGoalsRequest = {
  // Required. The ID of the customer whose custom conversion goals are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual custom conversion goal.
  //
  // Behaviors: REQUIRED
  operations: CustomConversionGoalOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on a custom conversion goal.
export type CustomConversionGoalOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new custom
  // conversion goal
  create?: googleadsgoogleadsv9resources_CustomConversionGoal;
  // Update operation: The custom conversion goal is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_CustomConversionGoal;
  // Remove operation: A resource name for the removed custom conversion goal
  // is expected, in this format:
  // 'customers/{customer_id}/conversionActions/{ConversionGoal.custom_goal_config.conversion_type_ids}'
  remove?: string;
};

// Custom conversion goal that can make arbitrary conversion actions biddable.
export type googleadsgoogleadsv9resources_CustomConversionGoal = {
  // Immutable. The resource name of the custom conversion goal.
  // Custom conversion goal resource names have the form:
  // `customers/{customer_id}/customConversionGoals/{goal_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ID for this custom conversion goal.
  //
  // Behaviors: IMMUTABLE
  id: number | undefined;
  // The name for this custom conversion goal.
  name: string | undefined;
  // Conversion actions that the custom conversion goal makes biddable.
  conversionActions: string[] | undefined;
  // The status of the custom conversion goal.
  status: googleadsgoogleadsv9enums_CustomConversionGoalStatusEnum_CustomConversionGoalStatus | undefined;
};

// The possible statuses of a custom conversion goal.
export type googleadsgoogleadsv9enums_CustomConversionGoalStatusEnum_CustomConversionGoalStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  | "UNKNOWN"
  // The custom conversion goal is enabled.
  | "ENABLED"
  // The custom conversion goal is removed.
  | "REMOVED";
// Response message for a custom conversion goal mutate.
export type MutateCustomConversionGoalsResponse = {
  // All results for the mutate.
  results: MutateCustomConversionGoalResult[] | undefined;
};

// The result for the custom conversion goal mutate.
export type MutateCustomConversionGoalResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated CustomConversionGoal with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  customConversionGoal: googleadsgoogleadsv9resources_CustomConversionGoal | undefined;
};

// Service to manage custom conversion goal.
export interface CustomConversionGoalService {
  // Creates, updates or removes custom conversion goals. Operation statuses
  // are returned.
  MutateCustomConversionGoals(request: MutateCustomConversionGoalsRequest): Promise<MutateCustomConversionGoalsResponse>;
}

export function createCustomConversionGoalServiceClient(
  handler: RequestHandler
): CustomConversionGoalService {
  return {
    MutateCustomConversionGoals(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customConversionGoals:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomConversionGoalsResponse>;
    },
  };
}
// Request message for [CustomerLabelService.GetCustomerLabel][google.ads.googleads.v9.services.CustomerLabelService.GetCustomerLabel].
export type GetCustomerLabelRequest = {
  // Required. The resource name of the customer-label relationship to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomerLabelService.MutateCustomerLabels][google.ads.googleads.v9.services.CustomerLabelService.MutateCustomerLabels].
export type MutateCustomerLabelsRequest = {
  // Required. ID of the customer whose customer-label relationships are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on customer-label relationships.
  //
  // Behaviors: REQUIRED
  operations: CustomerLabelOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, remove) on a customer-label relationship.
export type CustomerLabelOperation = {
  // Create operation: No resource name is expected for the new customer-label
  // relationship.
  create?: googleadsgoogleadsv9resources_CustomerLabel;
  // Remove operation: A resource name for the customer-label relationship
  // being removed, in this format:
  // `customers/{customer_id}/customerLabels/{label_id}`
  remove?: string;
};

// Represents a relationship between a customer and a label. This customer may
// not have access to all the labels attached to it. Additional CustomerLabels
// may be returned by increasing permissions with login-customer-id.
export type googleadsgoogleadsv9resources_CustomerLabel = {
  // Immutable. Name of the resource.
  // Customer label resource names have the form:
  // `customers/{customer_id}/customerLabels/{label_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The resource name of the customer to which the label is attached.
  // Read only.
  //
  // Behaviors: OUTPUT_ONLY
  customer?: string;
  // Output only. The resource name of the label assigned to the customer.
  // Note: the Customer ID portion of the label resource name is not
  // validated when creating a new CustomerLabel.
  //
  // Behaviors: OUTPUT_ONLY
  label?: string;
};

// Response message for a customer labels mutate.
export type MutateCustomerLabelsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCustomerLabelResult[] | undefined;
};

// The result for a customer label mutate.
export type MutateCustomerLabelResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage labels on customers.
export interface CustomerLabelService {
  // Returns the requested customer-label relationship in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerLabel(request: GetCustomerLabelRequest): Promise<googleadsgoogleadsv9resources_CustomerLabel>;
  // Creates and removes customer-label relationships.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [HeaderError]()
  // [InternalError]()
  // [LabelError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerLabels(request: MutateCustomerLabelsRequest): Promise<MutateCustomerLabelsResponse>;
}

export function createCustomerLabelServiceClient(
  handler: RequestHandler
): CustomerLabelService {
  return {
    GetCustomerLabel(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerLabel>;
    },
    MutateCustomerLabels(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerLabels:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerLabelsResponse>;
    },
  };
}
// Request message for
// [BiddingSeasonalityAdjustmentService.GetBiddingSeasonalityAdjustment][google.ads.googleads.v9.services.BiddingSeasonalityAdjustmentService.GetBiddingSeasonalityAdjustment].
export type GetBiddingSeasonalityAdjustmentRequest = {
  // Required. The resource name of the seasonality adjustment to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [BiddingSeasonalityAdjustmentService.MutateBiddingSeasonalityAdjustments][google.ads.googleads.v9.services.BiddingSeasonalityAdjustmentService.MutateBiddingSeasonalityAdjustments].
export type MutateBiddingSeasonalityAdjustmentsRequest = {
  // Required. ID of the customer whose seasonality adjustments are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual seasonality adjustments.
  //
  // Behaviors: REQUIRED
  operations: BiddingSeasonalityAdjustmentOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove, update) on a seasonality adjustment.
export type BiddingSeasonalityAdjustmentOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new seasonality
  // adjustment.
  create?: googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment;
  // Update operation: The seasonality adjustment is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment;
  // Remove operation: A resource name for the removed seasonality adjustment
  // is expected, in this format:
  // `customers/{customer_id}/biddingSeasonalityAdjustments/{seasonality_adjustment_id}`
  remove?: string;
};

// Represents a bidding seasonality adjustment.
// See "About seasonality adjustments" at
// https://support.google.com/google-ads/answer/10369906.
export type googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment = {
  // Immutable. The resource name of the seasonality adjustment.
  // Seasonality adjustment resource names have the form:
  // `customers/{customer_id}/biddingSeasonalityAdjustments/{seasonality_adjustment_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the seasonality adjustment.
  //
  // Behaviors: OUTPUT_ONLY
  seasonalityAdjustmentId: number | undefined;
  // The scope of the seasonality adjustment.
  scope: googleadsgoogleadsv9enums_SeasonalityEventScopeEnum_SeasonalityEventScope | undefined;
  // Output only. The status of the seasonality adjustment.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_SeasonalityEventStatusEnum_SeasonalityEventStatus | undefined;
  // Required. The inclusive start time of the seasonality adjustment in yyyy-MM-dd
  // HH:mm:ss format.
  // A seasonality adjustment is forward looking and should be used for events
  // that start and end in the future.
  //
  // Behaviors: REQUIRED
  startDateTime: string | undefined;
  // Required. The exclusive end time of the seasonality adjustment in yyyy-MM-dd HH:mm:ss
  // format.
  // The length of [start_date_time, end_date_time) interval must be
  // within (0, 14 days].
  //
  // Behaviors: REQUIRED
  endDateTime: string | undefined;
  // The name of the seasonality adjustment. The name can be at most 255
  // characters.
  name: string | undefined;
  // The description of the seasonality adjustment. The description can be at
  // most 2048 characters.
  description: string | undefined;
  // If not specified, all devices will be included in this adjustment.
  // Otherwise, only the specified targeted devices will be included in this
  // adjustment.
  devices: googleadsgoogleadsv9enums_DeviceEnum_Device[] | undefined;
  // Conversion rate modifier estimated based on expected conversion rate
  // changes. When this field is unset or set to 1.0 no adjustment will be
  // applied to traffic. The allowed range is 0.1 to 10.0.
  conversionRateModifier: number | undefined;
  // The seasonality adjustment will apply to the campaigns listed when the
  // scope of this adjustment is CAMPAIGN. The maximum number of campaigns per
  // event is 2000.
  // Note: a seasonality adjustment with both advertising_channel_types and
  // campaign_ids is not supported.
  campaigns: string[] | undefined;
  // The seasonality adjustment will apply to all the campaigns under the listed
  // channels retroactively as well as going forward when the scope of this
  // adjustment is CHANNEL.
  // The supported advertising channel types are DISPLAY, SEARCH and SHOPPING.
  // Note: a seasonality adjustment with both advertising_channel_types and
  // campaign_ids is not supported.
  advertisingChannelTypes: googleadsgoogleadsv9enums_AdvertisingChannelTypeEnum_AdvertisingChannelType[] | undefined;
};

// The possible scopes of a Seasonality Event.
export type googleadsgoogleadsv9enums_SeasonalityEventScopeEnum_SeasonalityEventScope =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The seasonality event is applied to all the customer’s traffic for
  // supported advertising channel types and device types. The CUSTOMER scope
  // cannot be used in mutates.
  | "CUSTOMER"
  // The seasonality event is applied to all specified campaigns.
  | "CAMPAIGN"
  // The seasonality event is applied to all campaigns that belong to
  // specified channel types.
  | "CHANNEL";
// The possible statuses of a Seasonality Event.
export type googleadsgoogleadsv9enums_SeasonalityEventStatusEnum_SeasonalityEventStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The seasonality event is enabled.
  | "ENABLED"
  // The seasonality event is removed.
  | "REMOVED";
// Enumerates Google Ads devices available for targeting.
export type googleadsgoogleadsv9enums_DeviceEnum_Device =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Mobile devices with full browsers.
  | "MOBILE"
  // Tablets with full browsers.
  | "TABLET"
  // Computers.
  | "DESKTOP"
  // Smart TVs and game consoles.
  | "CONNECTED_TV"
  // Other device types.
  | "OTHER";
// Enum describing the various advertising channel types.
export type googleadsgoogleadsv9enums_AdvertisingChannelTypeEnum_AdvertisingChannelType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Search Network. Includes display bundled, and Search+ campaigns.
  | "SEARCH"
  // Google Display Network only.
  | "DISPLAY"
  // Shopping campaigns serve on the shopping property
  // and on google.com search results.
  | "SHOPPING"
  // Hotel Ads campaigns.
  | "HOTEL"
  // Video campaigns.
  | "VIDEO"
  // App Campaigns, and App Campaigns for Engagement, that run
  // across multiple channels.
  | "MULTI_CHANNEL"
  // Local ads campaigns.
  | "LOCAL"
  // Smart campaigns.
  | "SMART"
  // Performance Max campaigns.
  | "PERFORMANCE_MAX";
// Response message for seasonality adjustments mutate.
export type MutateBiddingSeasonalityAdjustmentsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateBiddingSeasonalityAdjustmentsResult[] | undefined;
};

// The result for the seasonality adjustment mutate.
export type MutateBiddingSeasonalityAdjustmentsResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated bidding seasonality adjustment with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  biddingSeasonalityAdjustment: googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment | undefined;
};

// Service to manage bidding seasonality adjustments.
export interface BiddingSeasonalityAdjustmentService {
  // Returns the requested seasonality adjustment in full detail.
  GetBiddingSeasonalityAdjustment(request: GetBiddingSeasonalityAdjustmentRequest): Promise<googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment>;
  // Creates, updates, or removes seasonality adjustments.
  // Operation statuses are returned.
  MutateBiddingSeasonalityAdjustments(request: MutateBiddingSeasonalityAdjustmentsRequest): Promise<MutateBiddingSeasonalityAdjustmentsResponse>;
}

export function createBiddingSeasonalityAdjustmentServiceClient(
  handler: RequestHandler
): BiddingSeasonalityAdjustmentService {
  return {
    GetBiddingSeasonalityAdjustment(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment>;
    },
    MutateBiddingSeasonalityAdjustments(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/biddingSeasonalityAdjustments:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateBiddingSeasonalityAdjustmentsResponse>;
    },
  };
}
// Request message for
// [DomainCategoryService.GetDomainCategory][google.ads.googleads.v9.services.DomainCategoryService.GetDomainCategory].
export type GetDomainCategoryRequest = {
  // Required. Resource name of the domain category to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch domain categories.
export interface DomainCategoryService {
  // Returns the requested domain category.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetDomainCategory(request: GetDomainCategoryRequest): Promise<googleadsgoogleadsv9resources_DomainCategory>;
}

export function createDomainCategoryServiceClient(
  handler: RequestHandler
): DomainCategoryService {
  return {
    GetDomainCategory(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_DomainCategory>;
    },
  };
}
// A category generated automatically by crawling a domain. If a campaign uses
// the DynamicSearchAdsSetting, then domain categories will be generated for
// the domain. The categories can be targeted using WebpageConditionInfo.
// See: https://support.google.com/google-ads/answer/2471185
export type googleadsgoogleadsv9resources_DomainCategory = {
  // Output only. The resource name of the domain category.
  // Domain category resource names have the form:
  // `customers/{customer_id}/domainCategories/{campaign_id}~{category_base64}~{language_code}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The campaign this category is recommended for.
  //
  // Behaviors: OUTPUT_ONLY
  campaign?: string;
  // Output only. Recommended category for the website domain. e.g. if you have a website
  // about electronics, the categories could be "cameras", "televisions", etc.
  //
  // Behaviors: OUTPUT_ONLY
  category?: string;
  // Output only. The language code specifying the language of the website. e.g. "en" for
  // English. The language can be specified in the DynamicSearchAdsSetting
  // required for dynamic search ads. This is the language of the pages from
  // your website that you want Google Ads to find, create ads for,
  // and match searches with.
  //
  // Behaviors: OUTPUT_ONLY
  languageCode?: string;
  // Output only. The domain for the website. The domain can be specified in the
  // DynamicSearchAdsSetting required for dynamic search ads.
  //
  // Behaviors: OUTPUT_ONLY
  domain?: string;
  // Output only. Fraction of pages on your site that this category matches.
  //
  // Behaviors: OUTPUT_ONLY
  coverageFraction?: number;
  // Output only. The position of this category in the set of categories. Lower numbers
  // indicate a better match for the domain. null indicates not recommended.
  //
  // Behaviors: OUTPUT_ONLY
  categoryRank?: number;
  // Output only. Indicates whether this category has sub-categories.
  //
  // Behaviors: OUTPUT_ONLY
  hasChildren?: boolean;
  // Output only. The recommended cost per click for the category.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedCpcBidMicros?: number;
};

// Request message for [ConversionUploadService.UploadClickConversions][google.ads.googleads.v9.services.ConversionUploadService.UploadClickConversions].
export type UploadClickConversionsRequest = {
  // Required. The ID of the customer performing the upload.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The conversions that are being uploaded.
  //
  // Behaviors: REQUIRED
  conversions: ClickConversion[] | undefined;
  // Required. If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // This should always be set to true.
  // See
  // https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
  // for more information about partial failure.
  //
  // Behaviors: REQUIRED
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A click conversion.
export type ClickConversion = {
  // The Google click ID (gclid) associated with this conversion.
  gclid?: string;
  // The click identifier for clicks associated with app conversions and
  // originating from iOS devices starting with iOS14.
  gbraid: string | undefined;
  // The click identifier for clicks associated with web conversions and
  // originating from iOS devices starting with iOS14.
  wbraid: string | undefined;
  // Resource name of the conversion action associated with this conversion.
  // Note: Although this resource name consists of a customer id and a
  // conversion action id, validation will ignore the customer id and use the
  // conversion action id as the sole identifier of the conversion action.
  conversionAction?: string;
  // The date time at which the conversion occurred. Must be after
  // the click time. The timezone must be specified. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. “2019-01-01 12:32:45-08:00”.
  conversionDateTime?: string;
  // The value of the conversion for the advertiser.
  conversionValue?: number;
  // Currency associated with the conversion value. This is the ISO 4217
  // 3-character currency code. For example: USD, EUR.
  currencyCode?: string;
  // The order ID associated with the conversion. An order id can only be used
  // for one conversion per conversion action.
  orderId?: string;
  // Additional data about externally attributed conversions. This field
  // is required for conversions with an externally attributed conversion
  // action, but should not be set otherwise.
  externalAttributionData: ExternalAttributionData | undefined;
  // The custom variables associated with this conversion.
  customVariables: CustomVariable[] | undefined;
  // The cart data associated with this conversion.
  cartData: CartData | undefined;
  // The user identifiers associated with this conversion. Only hashed_email and
  // hashed_phone_number are supported for conversion uploads. The maximum
  // number of user identifiers for each conversion is 5.
  userIdentifiers: googleadsgoogleadsv9common_UserIdentifier[] | undefined;
};

// Contains additional information about externally attributed conversions.
export type ExternalAttributionData = {
  // Represents the fraction of the conversion that is attributed to the
  // Google Ads click.
  externalAttributionCredit?: number;
  // Specifies the attribution model name.
  externalAttributionModel?: string;
};

// A custom variable.
export type CustomVariable = {
  // Resource name of the custom variable associated with this conversion.
  // Note: Although this resource name consists of a customer id and a
  // conversion custom variable id, validation will ignore the customer id and
  // use the conversion custom variable id as the sole identifier of the
  // conversion custom variable.
  conversionCustomVariable: string | undefined;
  // The value string of this custom variable.
  // The value of the custom variable should not contain private customer data,
  // such as email addresses or phone numbers.
  value: string | undefined;
};

// Contains additional information about cart data.
export type CartData = {
  // The Merchant Center ID where the items are uploaded.
  merchantId: number | undefined;
  // The country code associated with the feed where the items are uploaded.
  feedCountryCode: string | undefined;
  // The language code associated with the feed where the items are uploaded.
  feedLanguageCode: string | undefined;
  // Sum of all transaction level discounts, such as free shipping and
  // coupon discounts for the whole cart. The currency code is the same
  // as that in the ClickConversion message.
  localTransactionCost: number | undefined;
  // Data of the items purchased.
  items: CartData_Item[] | undefined;
};

// Contains data of the items purchased.
export type CartData_Item = {
  // The shopping id of the item. Must be equal to the Merchant Center product
  // identifier.
  productId: string | undefined;
  // Number of items sold.
  quantity: number | undefined;
  // Unit price excluding tax, shipping, and any transaction
  // level discounts. The currency code is the same as that in the
  // ClickConversion message.
  unitPrice: number | undefined;
};

// User identifying information.
export type googleadsgoogleadsv9common_UserIdentifier = {
  // Source of the user identifier when the upload is from Store Sales,
  // ConversionUploadService, or ConversionAdjustmentUploadService.
  userIdentifierSource: googleadsgoogleadsv9enums_UserIdentifierSourceEnum_UserIdentifierSource | undefined;
  // Hashed email address using SHA-256 hash function after normalization.
  // Accepted for Customer Match, Store Sales, ConversionUploadService, and
  // ConversionAdjustmentUploadService.
  hashedEmail?: string;
  // Hashed phone number using SHA-256 hash function after normalization
  // (E164 standard). Accepted for Customer Match, Store Sales,
  // ConversionUploadService, and ConversionAdjustmentUploadService.
  hashedPhoneNumber?: string;
  // Mobile device ID (advertising ID/IDFA). Accepted only for Customer Match.
  mobileId?: string;
  // Advertiser-assigned user ID for Customer Match upload, or
  // third-party-assigned user ID for Store Sales. Accepted only for Customer
  // Match and Store Sales.
  thirdPartyUserId?: string;
  // Address information. Accepted only for Customer Match, Store Sales, and
  // ConversionAdjustmentUploadService.
  addressInfo?: googleadsgoogleadsv9common_OfflineUserAddressInfo;
};

// The type of user identifier source for offline Store Sales, click
// conversion, and conversion adjustment uploads.
export type googleadsgoogleadsv9enums_UserIdentifierSourceEnum_UserIdentifierSource =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version
  | "UNKNOWN"
  // Indicates that the user identifier was provided by the first party
  // (advertiser).
  | "FIRST_PARTY"
  // Indicates that the user identifier was provided by the third party
  // (partner).
  | "THIRD_PARTY";
// Address identifier of offline data.
export type googleadsgoogleadsv9common_OfflineUserAddressInfo = {
  // First name of the user, which is hashed as SHA-256 after normalized
  // (Lowercase all characters; Remove any extra spaces before, after, and in
  // between).
  hashedFirstName?: string;
  // Last name of the user, which is hashed as SHA-256 after normalized (lower
  // case only and no punctuation).
  hashedLastName?: string;
  // City of the address. Only accepted for Store Sales and
  // ConversionAdjustmentUploadService.
  city?: string;
  // State code of the address. Only accepted for Store Sales and
  // ConversionAdjustmentUploadService.
  state?: string;
  // 2-letter country code in ISO-3166-1 alpha-2 of the user's address.
  countryCode?: string;
  // Postal code of the user's address.
  postalCode?: string;
  // The street address of the user hashed using SHA-256 hash function after
  // normalization (lower case only). Only accepted for
  // ConversionAdjustmentUploadService.
  hashedStreetAddress?: string;
};

// Response message for [ConversionUploadService.UploadClickConversions][google.ads.googleads.v9.services.ConversionUploadService.UploadClickConversions].
export type UploadClickConversionsResponse = {
  // Errors that pertain to conversion failures in the partial failure mode.
  // Returned when all errors occur inside the conversions. If any errors occur
  // outside the conversions (e.g. auth errors), we return an RPC level error.
  // See
  // https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
  // for more information about partial failure.
  partialFailureError: googlerpc_Status | undefined;
  // Returned for successfully processed conversions. Proto will be empty for
  // rows that received an error. Results are not returned when validate_only is
  // true.
  results: ClickConversionResult[] | undefined;
};

// Identifying information for a successfully processed ClickConversion.
export type ClickConversionResult = {
  // The Google Click ID (gclid) associated with this conversion.
  gclid?: string;
  // The click identifier for clicks associated with app conversions and
  // originating from iOS devices starting with iOS14.
  gbraid: string | undefined;
  // The click identifier for clicks associated with web conversions and
  // originating from iOS devices starting with iOS14.
  wbraid: string | undefined;
  // Resource name of the conversion action associated with this conversion.
  conversionAction?: string;
  // The date time at which the conversion occurred. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. “2019-01-01 12:32:45-08:00”.
  conversionDateTime?: string;
  // The user identifiers associated with this conversion. Only hashed_email and
  // hashed_phone_number are supported for conversion uploads. The maximum
  // number of user identifiers for each conversion is 5.
  userIdentifiers: googleadsgoogleadsv9common_UserIdentifier[] | undefined;
};

// Request message for [ConversionUploadService.UploadCallConversions][google.ads.googleads.v9.services.ConversionUploadService.UploadCallConversions].
export type UploadCallConversionsRequest = {
  // Required. The ID of the customer performing the upload.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The conversions that are being uploaded.
  //
  // Behaviors: REQUIRED
  conversions: CallConversion[] | undefined;
  // Required. If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // This should always be set to true.
  // See
  // https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
  // for more information about partial failure.
  //
  // Behaviors: REQUIRED
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A call conversion.
export type CallConversion = {
  // The caller id from which this call was placed. Caller id is expected to be
  // in E.164 format with preceding '+' sign. e.g. "+16502531234".
  callerId?: string;
  // The date time at which the call occurred. The timezone must be specified.
  // The format is "yyyy-mm-dd hh:mm:ss+|-hh:mm",
  // e.g. "2019-01-01 12:32:45-08:00".
  callStartDateTime?: string;
  // Resource name of the conversion action associated with this conversion.
  // Note: Although this resource name consists of a customer id and a
  // conversion action id, validation will ignore the customer id and use the
  // conversion action id as the sole identifier of the conversion action.
  conversionAction?: string;
  // The date time at which the conversion occurred. Must be after the call
  // time. The timezone must be specified. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  conversionDateTime?: string;
  // The value of the conversion for the advertiser.
  conversionValue?: number;
  // Currency associated with the conversion value. This is the ISO 4217
  // 3-character currency code. For example: USD, EUR.
  currencyCode?: string;
  // The custom variables associated with this conversion.
  customVariables: CustomVariable[] | undefined;
};

// Response message for [ConversionUploadService.UploadCallConversions][google.ads.googleads.v9.services.ConversionUploadService.UploadCallConversions].
export type UploadCallConversionsResponse = {
  // Errors that pertain to conversion failures in the partial failure mode.
  // Returned when all errors occur inside the conversions. If any errors occur
  // outside the conversions (e.g. auth errors), we return an RPC level error.
  // See
  // https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
  // for more information about partial failure.
  partialFailureError: googlerpc_Status | undefined;
  // Returned for successfully processed conversions. Proto will be empty for
  // rows that received an error. Results are not returned when validate_only is
  // true.
  results: CallConversionResult[] | undefined;
};

// Identifying information for a successfully processed CallConversionUpload.
export type CallConversionResult = {
  // The caller id from which this call was placed. Caller id is expected to be
  // in E.164 format with preceding '+' sign.
  callerId?: string;
  // The date time at which the call occurred. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  callStartDateTime?: string;
  // Resource name of the conversion action associated with this conversion.
  conversionAction?: string;
  // The date time at which the conversion occurred. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  conversionDateTime?: string;
};

// Service to upload conversions.
export interface ConversionUploadService {
  // Processes the given click conversions.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ConversionUploadError]()
  // [HeaderError]()
  // [InternalError]()
  // [PartialFailureError]()
  // [QuotaError]()
  // [RequestError]()
  UploadClickConversions(request: UploadClickConversionsRequest): Promise<UploadClickConversionsResponse>;
  // Processes the given call conversions.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [PartialFailureError]()
  // [QuotaError]()
  // [RequestError]()
  UploadCallConversions(request: UploadCallConversionsRequest): Promise<UploadCallConversionsResponse>;
}

export function createConversionUploadServiceClient(
  handler: RequestHandler
): ConversionUploadService {
  return {
    UploadClickConversions(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:uploadClickConversions`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<UploadClickConversionsResponse>;
    },
    UploadCallConversions(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:uploadCallConversions`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<UploadCallConversionsResponse>;
    },
  };
}
// Request message for
// [DynamicSearchAdsSearchTermViewService.GetDynamicSearchAdsSearchTermView][google.ads.googleads.v9.services.DynamicSearchAdsSearchTermViewService.GetDynamicSearchAdsSearchTermView].
export type GetDynamicSearchAdsSearchTermViewRequest = {
  // Required. The resource name of the dynamic search ads search term view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch dynamic search ads views.
export interface DynamicSearchAdsSearchTermViewService {
  // Returns the requested dynamic search ads search term view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetDynamicSearchAdsSearchTermView(request: GetDynamicSearchAdsSearchTermViewRequest): Promise<googleadsgoogleadsv9resources_DynamicSearchAdsSearchTermView>;
}

export function createDynamicSearchAdsSearchTermViewServiceClient(
  handler: RequestHandler
): DynamicSearchAdsSearchTermViewService {
  return {
    GetDynamicSearchAdsSearchTermView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_DynamicSearchAdsSearchTermView>;
    },
  };
}
// A dynamic search ads search term view.
export type googleadsgoogleadsv9resources_DynamicSearchAdsSearchTermView = {
  // Output only. The resource name of the dynamic search ads search term view.
  // Dynamic search ads search term view resource names have the form:
  // `customers/{customer_id}/dynamicSearchAdsSearchTermViews/{ad_group_id}~{search_term_fingerprint}~{headline_fingerprint}~{landing_page_fingerprint}~{page_url_fingerprint}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Search term
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  searchTerm?: string;
  // Output only. The dynamically generated headline of the Dynamic Search Ad.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  headline?: string;
  // Output only. The dynamically selected landing page URL of the impression.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  landingPage?: string;
  // Output only. The URL of page feed item served for the impression.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  pageUrl?: string;
  // Output only. True if query matches a negative keyword.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  hasNegativeKeyword?: boolean;
  // Output only. True if query is added to targeted keywords.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  hasMatchingKeyword?: boolean;
  // Output only. True if query matches a negative url.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  hasNegativeUrl?: boolean;
};

// Request message for [CustomerClientLinkService.GetCustomerClientLink][google.ads.googleads.v9.services.CustomerClientLinkService.GetCustomerClientLink].
export type GetCustomerClientLinkRequest = {
  // Required. The resource name of the customer client link to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomerClientLinkService.MutateCustomerClientLink][google.ads.googleads.v9.services.CustomerClientLinkService.MutateCustomerClientLink].
export type MutateCustomerClientLinkRequest = {
  // Required. The ID of the customer whose customer link are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on the individual CustomerClientLink.
  //
  // Behaviors: REQUIRED
  operation: CustomerClientLinkOperation | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, update) on a CustomerClientLink.
export type CustomerClientLinkOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new link.
  create?: googleadsgoogleadsv9resources_CustomerClientLink;
  // Update operation: The link is expected to have a valid resource name.
  update?: googleadsgoogleadsv9resources_CustomerClientLink;
};

// Represents customer client link relationship.
export type googleadsgoogleadsv9resources_CustomerClientLink = {
  // Immutable. Name of the resource.
  // CustomerClientLink resource names have the form:
  // `customers/{customer_id}/customerClientLinks/{client_customer_id}~{manager_link_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The client customer linked to this customer.
  //
  // Behaviors: IMMUTABLE
  clientCustomer?: string;
  // Output only. This is uniquely identifies a customer client link. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  managerLinkId?: number;
  // This is the status of the link between client and manager.
  status: googleadsgoogleadsv9enums_ManagerLinkStatusEnum_ManagerLinkStatus | undefined;
  // The visibility of the link. Users can choose whether or not to see hidden
  // links in the Google Ads UI.
  // Default value is false
  hidden?: boolean;
};

// Possible statuses of a link.
export type googleadsgoogleadsv9enums_ManagerLinkStatusEnum_ManagerLinkStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Indicates current in-effect relationship
  | "ACTIVE"
  // Indicates terminated relationship
  | "INACTIVE"
  // Indicates relationship has been requested by manager, but the client
  // hasn't accepted yet.
  | "PENDING"
  // Relationship was requested by the manager, but the client has refused.
  | "REFUSED"
  // Indicates relationship has been requested by manager, but manager
  // canceled it.
  | "CANCELED";
// Response message for a CustomerClientLink mutate.
export type MutateCustomerClientLinkResponse = {
  // A result that identifies the resource affected by the mutate request.
  result: MutateCustomerClientLinkResult | undefined;
};

// The result for a single customer client link mutate.
export type MutateCustomerClientLinkResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage customer client links.
export interface CustomerClientLinkService {
  // Returns the requested CustomerClientLink in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerClientLink(request: GetCustomerClientLinkRequest): Promise<googleadsgoogleadsv9resources_CustomerClientLink>;
  // Creates or updates a customer client link. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [ManagerLinkError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerClientLink(request: MutateCustomerClientLinkRequest): Promise<MutateCustomerClientLinkResponse>;
}

export function createCustomerClientLinkServiceClient(
  handler: RequestHandler
): CustomerClientLinkService {
  return {
    GetCustomerClientLink(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerClientLink>;
    },
    MutateCustomerClientLink(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerClientLinks:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerClientLinkResponse>;
    },
  };
}
// Request message for
// [BiddingStrategySimulationService.GetBiddingStrategySimulation][google.ads.googleads.v9.services.BiddingStrategySimulationService.GetBiddingStrategySimulation].
export type GetBiddingStrategySimulationRequest = {
  // Required. The resource name of the bidding strategy simulation to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch bidding strategy simulations.
export interface BiddingStrategySimulationService {
  // Returns the requested bidding strategy simulation in full detail.
  GetBiddingStrategySimulation(request: GetBiddingStrategySimulationRequest): Promise<googleadsgoogleadsv9resources_BiddingStrategySimulation>;
}

export function createBiddingStrategySimulationServiceClient(
  handler: RequestHandler
): BiddingStrategySimulationService {
  return {
    GetBiddingStrategySimulation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_BiddingStrategySimulation>;
    },
  };
}
// A bidding strategy simulation. Supported combinations of simulation type
// and simulation modification method are detailed below respectively.
// 1. TARGET_CPA - UNIFORM
// 2. TARGET_ROAS - UNIFORM
export type googleadsgoogleadsv9resources_BiddingStrategySimulation = {
  // Output only. The resource name of the bidding strategy simulation.
  // Bidding strategy simulation resource names have the form:
  // `customers/{customer_id}/biddingStrategySimulations/{bidding_strategy_id}~{type}~{modification_method}~{start_date}~{end_date}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Bidding strategy shared set id of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  biddingStrategyId: number | undefined;
  // Output only. The field that the simulation modifies.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_SimulationTypeEnum_SimulationType | undefined;
  // Output only. How the simulation modifies the field.
  //
  // Behaviors: OUTPUT_ONLY
  modificationMethod: googleadsgoogleadsv9enums_SimulationModificationMethodEnum_SimulationModificationMethod | undefined;
  // Output only. First day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  startDate: string | undefined;
  // Output only. Last day on which the simulation is based, in YYYY-MM-DD format
  //
  // Behaviors: OUTPUT_ONLY
  endDate: string | undefined;
  // Output only. Simulation points if the simulation type is TARGET_CPA.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpaPointList?: googleadsgoogleadsv9common_TargetCpaSimulationPointList;
  // Output only. Simulation points if the simulation type is TARGET_ROAS.
  //
  // Behaviors: OUTPUT_ONLY
  targetRoasPointList?: googleadsgoogleadsv9common_TargetRoasSimulationPointList;
};

// Request message for [SharedSetService.GetSharedSet][google.ads.googleads.v9.services.SharedSetService.GetSharedSet].
export type GetSharedSetRequest = {
  // Required. The resource name of the shared set to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [SharedSetService.MutateSharedSets][google.ads.googleads.v9.services.SharedSetService.MutateSharedSets].
export type MutateSharedSetsRequest = {
  // Required. The ID of the customer whose shared sets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual shared sets.
  //
  // Behaviors: REQUIRED
  operations: SharedSetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on an shared set.
export type SharedSetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new shared set.
  create?: googleadsgoogleadsv9resources_SharedSet;
  // Update operation: The shared set is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_SharedSet;
  // Remove operation: A resource name for the removed shared set is expected,
  // in this format:
  // `customers/{customer_id}/sharedSets/{shared_set_id}`
  remove?: string;
};

// SharedSets are used for sharing criterion exclusions across multiple
// campaigns.
export type googleadsgoogleadsv9resources_SharedSet = {
  // Immutable. The resource name of the shared set.
  // Shared set resource names have the form:
  // `customers/{customer_id}/sharedSets/{shared_set_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of this shared set. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Immutable. The type of this shared set: each shared set holds only a single kind
  // of resource. Required. Immutable.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_SharedSetTypeEnum_SharedSetType | undefined;
  // The name of this shared set. Required.
  // Shared Sets must have names that are unique among active shared sets of
  // the same type.
  // The length of this string should be between 1 and 255 UTF-8 bytes,
  // inclusive.
  name?: string;
  // Output only. The status of this shared set. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_SharedSetStatusEnum_SharedSetStatus | undefined;
  // Output only. The number of shared criteria within this shared set. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  memberCount?: number;
  // Output only. The number of campaigns associated with this shared set. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  referenceCount?: number;
};

// Enum listing the possible shared set types.
export type googleadsgoogleadsv9enums_SharedSetTypeEnum_SharedSetType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // A set of keywords that can be excluded from targeting.
  | "NEGATIVE_KEYWORDS"
  // A set of placements that can be excluded from targeting.
  | "NEGATIVE_PLACEMENTS";
// Enum listing the possible shared set statuses.
export type googleadsgoogleadsv9enums_SharedSetStatusEnum_SharedSetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The shared set is enabled.
  | "ENABLED"
  // The shared set is removed and can no longer be used.
  | "REMOVED";
// Response message for a shared set mutate.
export type MutateSharedSetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateSharedSetResult[] | undefined;
};

// The result for the shared set mutate.
export type MutateSharedSetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated shared set with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  sharedSet: googleadsgoogleadsv9resources_SharedSet | undefined;
};

// Service to manage shared sets.
export interface SharedSetService {
  // Returns the requested shared set in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetSharedSet(request: GetSharedSetRequest): Promise<googleadsgoogleadsv9resources_SharedSet>;
  // Creates, updates, or removes shared sets. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SharedSetError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateSharedSets(request: MutateSharedSetsRequest): Promise<MutateSharedSetsResponse>;
}

export function createSharedSetServiceClient(
  handler: RequestHandler
): SharedSetService {
  return {
    GetSharedSet(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_SharedSet>;
    },
    MutateSharedSets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/sharedSets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateSharedSetsResponse>;
    },
  };
}
// Request message for
// [AdGroupCriterionSimulationService.GetAdGroupCriterionSimulation][google.ads.googleads.v9.services.AdGroupCriterionSimulationService.GetAdGroupCriterionSimulation].
export type GetAdGroupCriterionSimulationRequest = {
  // Required. The resource name of the ad group criterion simulation to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch ad group criterion simulations.
export interface AdGroupCriterionSimulationService {
  // Returns the requested ad group criterion simulation in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupCriterionSimulation(request: GetAdGroupCriterionSimulationRequest): Promise<googleadsgoogleadsv9resources_AdGroupCriterionSimulation>;
}

export function createAdGroupCriterionSimulationServiceClient(
  handler: RequestHandler
): AdGroupCriterionSimulationService {
  return {
    GetAdGroupCriterionSimulation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupCriterionSimulation>;
    },
  };
}
// An ad group criterion simulation. Supported combinations of advertising
// channel type, criterion type, simulation type, and simulation modification
// method are detailed below respectively. Hotel AdGroupCriterion simulation
// operations starting in V5.
// 1. DISPLAY - KEYWORD - CPC_BID - UNIFORM
// 2. SEARCH - KEYWORD - CPC_BID - UNIFORM
// 3. SHOPPING - LISTING_GROUP - CPC_BID - UNIFORM
// 4. HOTEL - LISTING_GROUP - CPC_BID - UNIFORM
// 5. HOTEL - LISTING_GROUP - PERCENT_CPC_BID - UNIFORM
export type googleadsgoogleadsv9resources_AdGroupCriterionSimulation = {
  // Output only. The resource name of the ad group criterion simulation.
  // Ad group criterion simulation resource names have the form:
  // `customers/{customer_id}/adGroupCriterionSimulations/{ad_group_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. AdGroup ID of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupId?: number;
  // Output only. Criterion ID of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // Output only. The field that the simulation modifies.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_SimulationTypeEnum_SimulationType | undefined;
  // Output only. How the simulation modifies the field.
  //
  // Behaviors: OUTPUT_ONLY
  modificationMethod: googleadsgoogleadsv9enums_SimulationModificationMethodEnum_SimulationModificationMethod | undefined;
  // Output only. First day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  startDate?: string;
  // Output only. Last day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  endDate?: string;
  // Output only. Simulation points if the simulation type is CPC_BID.
  //
  // Behaviors: OUTPUT_ONLY
  cpcBidPointList?: googleadsgoogleadsv9common_CpcBidSimulationPointList;
  // Output only. Simulation points if the simulation type is PERCENT_CPC_BID.
  //
  // Behaviors: OUTPUT_ONLY
  percentCpcBidPointList?: googleadsgoogleadsv9common_PercentCpcBidSimulationPointList;
};

// A container for simulation points for simulations of type PERCENT_CPC_BID.
export type googleadsgoogleadsv9common_PercentCpcBidSimulationPointList = {
  // Projected metrics for a series of percent CPC bid amounts.
  points: googleadsgoogleadsv9common_PercentCpcBidSimulationPoint[] | undefined;
};

// Projected metrics for a specific percent CPC amount. Only Hotel advertising
// channel type supports this field.
export type googleadsgoogleadsv9common_PercentCpcBidSimulationPoint = {
  // The simulated percent CPC upon which projected metrics are based. Percent
  // CPC expressed as fraction of the advertised price for some good or service.
  // The value stored here is 1,000,000 * [fraction].
  percentCpcBidMicros?: number;
  // Projected number of biddable conversions.
  biddableConversions?: number;
  // Projected total value of biddable conversions in local currency.
  biddableConversionsValue?: number;
  // Projected number of clicks.
  clicks?: number;
  // Projected cost in micros.
  costMicros?: number;
  // Projected number of impressions.
  impressions?: number;
  // Projected number of top slot impressions.
  topSlotImpressions?: number;
};

// Request message for [CustomerService.GetCustomer][google.ads.googleads.v9.services.CustomerService.GetCustomer].
export type GetCustomerRequest = {
  // Required. The resource name of the customer to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomerService.MutateCustomer][google.ads.googleads.v9.services.CustomerService.MutateCustomer].
export type MutateCustomerRequest = {
  // Required. The ID of the customer being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on the customer
  //
  // Behaviors: REQUIRED
  operation: CustomerOperation | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single update on a customer.
export type CustomerOperation = {
  // Mutate operation. Only updates are supported for customer.
  update: googleadsgoogleadsv9resources_Customer | undefined;
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
};

// A customer.
export type googleadsgoogleadsv9resources_Customer = {
  // Immutable. The resource name of the customer.
  // Customer resource names have the form:
  // `customers/{customer_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the customer.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Optional, non-unique descriptive name of the customer.
  descriptiveName?: string;
  // Immutable. The currency in which the account operates.
  // A subset of the currency codes from the ISO 4217 standard is
  // supported.
  //
  // Behaviors: IMMUTABLE
  currencyCode?: string;
  // Immutable. The local timezone ID of the customer.
  //
  // Behaviors: IMMUTABLE
  timeZone?: string;
  // The URL template for constructing a tracking URL out of parameters.
  trackingUrlTemplate?: string;
  // The URL template for appending params to the final URL
  finalUrlSuffix?: string;
  // Whether auto-tagging is enabled for the customer.
  autoTaggingEnabled?: boolean;
  // Output only. Whether the Customer has a Partners program badge. If the Customer is not
  // associated with the Partners program, this will be false. For more
  // information, see https://support.google.com/partners/answer/3125774.
  //
  // Behaviors: OUTPUT_ONLY
  hasPartnersBadge?: boolean;
  // Output only. Whether the customer is a manager.
  //
  // Behaviors: OUTPUT_ONLY
  manager?: boolean;
  // Output only. Whether the customer is a test account.
  //
  // Behaviors: OUTPUT_ONLY
  testAccount?: boolean;
  // Call reporting setting for a customer.
  callReportingSetting: googleadsgoogleadsv9resources_CallReportingSetting | undefined;
  // Output only. Conversion tracking setting for a customer.
  //
  // Behaviors: OUTPUT_ONLY
  conversionTrackingSetting: googleadsgoogleadsv9resources_ConversionTrackingSetting | undefined;
  // Output only. Remarketing setting for a customer.
  //
  // Behaviors: OUTPUT_ONLY
  remarketingSetting: googleadsgoogleadsv9resources_RemarketingSetting | undefined;
  // Output only. Reasons why the customer is not eligible to use PaymentMode.CONVERSIONS. If
  // the list is empty, the customer is eligible. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  payPerConversionEligibilityFailureReasons: googleadsgoogleadsv9enums_CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason[] | undefined;
  // Output only. Optimization score of the customer.
  // Optimization score is an estimate of how well a customer's campaigns are
  // set to perform. It ranges from 0% (0.0) to 100% (1.0). This field is null
  // for all manager customers, and for unscored non-manager customers.
  // See "About optimization score" at
  // https://support.google.com/google-ads/answer/9061546.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  optimizationScore?: number;
  // Output only. Optimization score weight of the customer.
  // Optimization score weight can be used to compare/aggregate optimization
  // scores across multiple non-manager customers. The aggregate optimization
  // score of a manager is computed as the sum over all of their customers of
  // `Customer.optimization_score * Customer.optimization_score_weight`. This
  // field is 0 for all manager customers, and for unscored non-manager
  // customers.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  optimizationScoreWeight: number | undefined;
};

// Call reporting setting for a customer.
export type googleadsgoogleadsv9resources_CallReportingSetting = {
  // Enable reporting of phone call events by redirecting them via Google
  // System.
  callReportingEnabled?: boolean;
  // Whether to enable call conversion reporting.
  callConversionReportingEnabled?: boolean;
  // Customer-level call conversion action to attribute a call conversion to.
  // If not set a default conversion action is used. Only in effect when
  // call_conversion_reporting_enabled is set to true.
  callConversionAction?: string;
};

// A collection of customer-wide settings related to Google Ads Conversion
// Tracking.
export type googleadsgoogleadsv9resources_ConversionTrackingSetting = {
  // Output only. The conversion tracking id used for this account. This id is automatically
  // assigned after any conversion tracking feature is used. If the customer
  // doesn't use conversion tracking, this is 0. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  conversionTrackingId?: number;
  // Output only. The conversion tracking id of the customer's manager. This is set when the
  // customer is opted into cross account conversion tracking, and it overrides
  // conversion_tracking_id. This field can only be managed through the Google
  // Ads UI. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  crossAccountConversionTrackingId?: number;
};

// Remarketing setting for a customer.
export type googleadsgoogleadsv9resources_RemarketingSetting = {
  // Output only. The Google global site tag.
  //
  // Behaviors: OUTPUT_ONLY
  googleGlobalSiteTag?: string;
};

// Enum describing possible reasons a customer is not eligible to use
// PaymentMode.CONVERSIONS.
export type googleadsgoogleadsv9enums_CustomerPayPerConversionEligibilityFailureReasonEnum_CustomerPayPerConversionEligibilityFailureReason =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Customer does not have enough conversions.
  | "NOT_ENOUGH_CONVERSIONS"
  // Customer's conversion lag is too high.
  | "CONVERSION_LAG_TOO_HIGH"
  // Customer uses shared budgets.
  | "HAS_CAMPAIGN_WITH_SHARED_BUDGET"
  // Customer has conversions with ConversionActionType.UPLOAD_CLICKS.
  | "HAS_UPLOAD_CLICKS_CONVERSION"
  // Customer's average daily spend is too high.
  | "AVERAGE_DAILY_SPEND_TOO_HIGH"
  // Customer's eligibility has not yet been calculated by the Google Ads
  // backend. Check back soon.
  | "ANALYSIS_NOT_COMPLETE"
  // Customer is not eligible due to other reasons.
  | "OTHER";
// Request message for [CustomerService.CreateCustomerClient][google.ads.googleads.v9.services.CustomerService.CreateCustomerClient].
export type CreateCustomerClientRequest = {
  // Required. The ID of the Manager under whom client customer is being created.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The new client customer to create. The resource name on this customer
  // will be ignored.
  //
  // Behaviors: REQUIRED
  customerClient: googleadsgoogleadsv9resources_Customer | undefined;
  // Email address of the user who should be invited on the created client
  // customer. Accessible only to customers on the allow-list.
  emailAddress?: string;
  // The proposed role of user on the created client customer.
  // Accessible only to customers on the allow-list.
  accessRole: googleadsgoogleadsv9enums_AccessRoleEnum_AccessRole | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Possible access role of a user.
export type googleadsgoogleadsv9enums_AccessRoleEnum_AccessRole =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Owns its account and can control the addition of other users.
  | "ADMIN"
  // Can modify campaigns, but can't affect other users.
  | "STANDARD"
  // Can view campaigns and account changes, but cannot make edits.
  | "READ_ONLY"
  // Role for \"email only\" access. Represents an email recipient rather than
  // a true User entity.
  | "EMAIL_ONLY";
// Response message for CreateCustomerClient mutate.
export type CreateCustomerClientResponse = {
  // The resource name of the newly created customer client.
  resourceName: string | undefined;
  // Link for inviting user to access the created customer. Accessible to
  // allowlisted customers only.
  invitationLink: string | undefined;
};

// Response message for customer mutate.
export type MutateCustomerResponse = {
  // Result for the mutate.
  result: MutateCustomerResult | undefined;
};

// The result for the customer mutate.
export type MutateCustomerResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated customer with only mutable fields after mutate. The fields will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  customer: googleadsgoogleadsv9resources_Customer | undefined;
};

// Request message for [CustomerService.ListAccessibleCustomers][google.ads.googleads.v9.services.CustomerService.ListAccessibleCustomers].
export type ListAccessibleCustomersRequest = {
};

// Response message for [CustomerService.ListAccessibleCustomers][google.ads.googleads.v9.services.CustomerService.ListAccessibleCustomers].
export type ListAccessibleCustomersResponse = {
  // Resource name of customers directly accessible by the
  // user authenticating the call.
  resourceNames: string[] | undefined;
};

// Service to manage customers.
export interface CustomerService {
  // Returns the requested customer in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomer(request: GetCustomerRequest): Promise<googleadsgoogleadsv9resources_Customer>;
  // Updates a customer. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  // [UrlFieldError]()
  MutateCustomer(request: MutateCustomerRequest): Promise<MutateCustomerResponse>;
  // Returns resource names of customers directly accessible by the
  // user authenticating the call.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListAccessibleCustomers(request: ListAccessibleCustomersRequest): Promise<ListAccessibleCustomersResponse>;
  // Creates a new client under manager. The new client customer is returned.
  // List of thrown errors:
  // [AccessInvitationError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CurrencyCodeError]()
  // [HeaderError]()
  // [InternalError]()
  // [ManagerLinkError]()
  // [QuotaError]()
  // [RequestError]()
  // [StringLengthError]()
  // [TimeZoneError]()
  CreateCustomerClient(request: CreateCustomerClientRequest): Promise<CreateCustomerClientResponse>;
}

export function createCustomerServiceClient(
  handler: RequestHandler
): CustomerService {
  return {
    GetCustomer(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Customer>;
    },
    MutateCustomer(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerResponse>;
    },
    ListAccessibleCustomers(request) {
      const path = `v9/customers:listAccessibleCustomers`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListAccessibleCustomersResponse>;
    },
    CreateCustomerClient(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:createCustomerClient`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<CreateCustomerClientResponse>;
    },
  };
}
// Request message for [ConversionActionService.GetConversionAction][google.ads.googleads.v9.services.ConversionActionService.GetConversionAction].
export type GetConversionActionRequest = {
  // Required. The resource name of the conversion action to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [ConversionActionService.MutateConversionActions][google.ads.googleads.v9.services.ConversionActionService.MutateConversionActions].
export type MutateConversionActionsRequest = {
  // Required. The ID of the customer whose conversion actions are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual conversion actions.
  //
  // Behaviors: REQUIRED
  operations: ConversionActionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on a conversion action.
export type ConversionActionOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new conversion
  // action.
  create?: googleadsgoogleadsv9resources_ConversionAction;
  // Update operation: The conversion action is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_ConversionAction;
  // Remove operation: A resource name for the removed conversion action is
  // expected, in this format:
  // `customers/{customer_id}/conversionActions/{conversion_action_id}`
  remove?: string;
};

// A conversion action.
export type googleadsgoogleadsv9resources_ConversionAction = {
  // Immutable. The resource name of the conversion action.
  // Conversion action resource names have the form:
  // `customers/{customer_id}/conversionActions/{conversion_action_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the conversion action.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the conversion action.
  // This field is required and should not be empty when creating new
  // conversion actions.
  name?: string;
  // The status of this conversion action for conversion event accrual.
  status: googleadsgoogleadsv9enums_ConversionActionStatusEnum_ConversionActionStatus | undefined;
  // Immutable. The type of this conversion action.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_ConversionActionTypeEnum_ConversionActionType | undefined;
  // Output only. The conversion origin of this conversion action.
  //
  // Behaviors: OUTPUT_ONLY
  origin: googleadsgoogleadsv9enums_ConversionOriginEnum_ConversionOrigin | undefined;
  // If a conversion action’s primary_for_goal bit is false, the conversion
  // action is non-biddable for all campaigns regardless of their customer
  // conversion goal or campaign conversion goal.
  // However, custom conversion goals do not respect primary_for_goal, so if
  // a campaign has a custom conversion goal configured with a
  // primary_for_goal = false conversion action, that conversion action is
  // still biddable.
  primaryForGoal: boolean | undefined;
  // The category of conversions reported for this conversion action.
  category: googleadsgoogleadsv9enums_ConversionActionCategoryEnum_ConversionActionCategory | undefined;
  // Output only. The resource name of the conversion action owner customer, or null if this
  // is a system-defined conversion action.
  //
  // Behaviors: OUTPUT_ONLY
  ownerCustomer?: string;
  // Whether this conversion action should be included in the "conversions"
  // metric.
  includeInConversionsMetric?: boolean;
  // The maximum number of days that may elapse between an interaction
  // (e.g., a click) and a conversion event.
  clickThroughLookbackWindowDays?: number;
  // The maximum number of days which may elapse between an impression and a
  // conversion without an interaction.
  viewThroughLookbackWindowDays?: number;
  // Settings related to the value for conversion events associated with this
  // conversion action.
  valueSettings: googleadsgoogleadsv9resources_ConversionAction_ValueSettings | undefined;
  // How to count conversion events for the conversion action.
  countingType: googleadsgoogleadsv9enums_ConversionActionCountingTypeEnum_ConversionActionCountingType | undefined;
  // Settings related to this conversion action's attribution model.
  attributionModelSettings: googleadsgoogleadsv9resources_ConversionAction_AttributionModelSettings | undefined;
  // Output only. The snippets used for tracking conversions.
  //
  // Behaviors: OUTPUT_ONLY
  tagSnippets: googleadsgoogleadsv9common_TagSnippet[] | undefined;
  // The phone call duration in seconds after which a conversion should be
  // reported for this conversion action.
  // The value must be between 0 and 10000, inclusive.
  phoneCallDurationSeconds?: number;
  // App ID for an app conversion action.
  appId?: string;
  // Output only. Mobile app vendor for an app conversion action.
  //
  // Behaviors: OUTPUT_ONLY
  mobileAppVendor: googleadsgoogleadsv9enums_MobileAppVendorEnum_MobileAppVendor | undefined;
  // Output only. Firebase settings for Firebase conversion types.
  //
  // Behaviors: OUTPUT_ONLY
  firebaseSettings: googleadsgoogleadsv9resources_ConversionAction_FirebaseSettings | undefined;
  // Output only. Third Party App Analytics settings for third party conversion types.
  //
  // Behaviors: OUTPUT_ONLY
  thirdPartyAppAnalyticsSettings: googleadsgoogleadsv9resources_ConversionAction_ThirdPartyAppAnalyticsSettings | undefined;
};

// Possible statuses of a conversion action.
export type googleadsgoogleadsv9enums_ConversionActionStatusEnum_ConversionActionStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conversions will be recorded.
  | "ENABLED"
  // Conversions will not be recorded.
  | "REMOVED"
  // Conversions will not be recorded and the conversion action will not
  // appear in the UI.
  | "HIDDEN";
// Possible types of a conversion action.
export type googleadsgoogleadsv9enums_ConversionActionTypeEnum_ConversionActionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conversions that occur when a user clicks on an ad's call extension.
  | "AD_CALL"
  // Conversions that occur when a user on a mobile device clicks a phone
  // number.
  | "CLICK_TO_CALL"
  // Conversions that occur when a user downloads a mobile app from the Google
  // Play Store.
  | "GOOGLE_PLAY_DOWNLOAD"
  // Conversions that occur when a user makes a purchase in an app through
  // Android billing.
  | "GOOGLE_PLAY_IN_APP_PURCHASE"
  // Call conversions that are tracked by the advertiser and uploaded.
  | "UPLOAD_CALLS"
  // Conversions that are tracked by the advertiser and uploaded with
  // attributed clicks.
  | "UPLOAD_CLICKS"
  // Conversions that occur on a webpage.
  | "WEBPAGE"
  // Conversions that occur when a user calls a dynamically-generated phone
  // number from an advertiser's website.
  | "WEBSITE_CALL"
  // Store Sales conversion based on first-party or third-party merchant
  // data uploads.
  // Only customers on the allowlist can use store sales direct upload types.
  | "STORE_SALES_DIRECT_UPLOAD"
  // Store Sales conversion based on first-party or third-party merchant
  // data uploads and/or from in-store purchases using cards from payment
  // networks.
  // Only customers on the allowlist can use store sales types.
  // Read only.
  | "STORE_SALES"
  // Android app first open conversions tracked via Firebase.
  | "FIREBASE_ANDROID_FIRST_OPEN"
  // Android app in app purchase conversions tracked via Firebase.
  | "FIREBASE_ANDROID_IN_APP_PURCHASE"
  // Android app custom conversions tracked via Firebase.
  | "FIREBASE_ANDROID_CUSTOM"
  // iOS app first open conversions tracked via Firebase.
  | "FIREBASE_IOS_FIRST_OPEN"
  // iOS app in app purchase conversions tracked via Firebase.
  | "FIREBASE_IOS_IN_APP_PURCHASE"
  // iOS app custom conversions tracked via Firebase.
  | "FIREBASE_IOS_CUSTOM"
  // Android app first open conversions tracked via Third Party App Analytics.
  | "THIRD_PARTY_APP_ANALYTICS_ANDROID_FIRST_OPEN"
  // Android app in app purchase conversions tracked via Third Party App
  // Analytics.
  | "THIRD_PARTY_APP_ANALYTICS_ANDROID_IN_APP_PURCHASE"
  // Android app custom conversions tracked via Third Party App Analytics.
  | "THIRD_PARTY_APP_ANALYTICS_ANDROID_CUSTOM"
  // iOS app first open conversions tracked via Third Party App Analytics.
  | "THIRD_PARTY_APP_ANALYTICS_IOS_FIRST_OPEN"
  // iOS app in app purchase conversions tracked via Third Party App
  // Analytics.
  | "THIRD_PARTY_APP_ANALYTICS_IOS_IN_APP_PURCHASE"
  // iOS app custom conversions tracked via Third Party App Analytics.
  | "THIRD_PARTY_APP_ANALYTICS_IOS_CUSTOM"
  // Conversions that occur when a user pre-registers a mobile app from the
  // Google Play Store. Read only.
  | "ANDROID_APP_PRE_REGISTRATION"
  // Conversions that track all Google Play downloads which aren't tracked
  // by an app-specific type. Read only.
  | "ANDROID_INSTALLS_ALL_OTHER_APPS"
  // Floodlight activity that counts the number of times that users have
  // visited a particular webpage after seeing or clicking on one of
  // an advertiser's ads. Read only.
  | "FLOODLIGHT_ACTION"
  // Floodlight activity that tracks the number of sales made or the number
  // of items purchased. Can also capture the total value of each sale.
  // Read only.
  | "FLOODLIGHT_TRANSACTION"
  // Conversions that track local actions from Google's products and
  // services after interacting with an ad. Read only.
  | "GOOGLE_HOSTED"
  // Conversions reported when a user submits a lead form. Read only.
  | "LEAD_FORM_SUBMIT"
  // Conversions that come from Salesforce. Read only.
  | "SALESFORCE"
  // Conversions imported from Search Ads 360 Floodlight data. Read only.
  | "SEARCH_ADS_360"
  // Call conversions that occur on Smart campaign Ads without call tracking
  // setup, using Smart campaign custom criteria. Read only.
  | "SMART_CAMPAIGN_AD_CLICKS_TO_CALL"
  // The user clicks on a call element within Google Maps. Smart campaign
  // only. Read only.
  | "SMART_CAMPAIGN_MAP_CLICKS_TO_CALL"
  // The user requests directions to a business location within Google Maps.
  // Smart campaign only. Read only.
  | "SMART_CAMPAIGN_MAP_DIRECTIONS"
  // Call conversions that occur on Smart campaign Ads with call tracking
  // setup, using Smart campaign custom criteria. Read only.
  | "SMART_CAMPAIGN_TRACKED_CALLS"
  // Conversions that occur when a user visits an advertiser's retail store.
  // Read only.
  | "STORE_VISITS";
// The possible places where a conversion can occur.
export type googleadsgoogleadsv9enums_ConversionOriginEnum_ConversionOrigin =
  // The conversion origin has not been specified.
  | "UNSPECIFIED"
  // The conversion origin is not known in this version.
  | "UNKNOWN"
  // Conversion that occurs when a user visits a website or takes an action
  // there after viewing an ad.
  | "WEBSITE"
  // Conversions reported by an offline pipeline which collects local actions
  // from Google-hosted pages (e.g. Google Maps, Google Place Page, etc) and
  // attributes them to relevant ad events.
  | "GOOGLE_HOSTED"
  // Conversion that occurs when a user performs an action via any app
  // platforms.
  | "APP"
  // Conversion that occurs when a user makes a call from ads.
  | "CALL_FROM_ADS"
  // Conversion that occurs when a user visits or makes a purchase at a
  // physical store.
  | "STORE"
  // Conversion that occurs on YouTube.
  | "YOUTUBE_HOSTED";
// The category of conversions that are associated with a ConversionAction.
export type googleadsgoogleadsv9enums_ConversionActionCategoryEnum_ConversionActionCategory =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Default category.
  | "DEFAULT"
  // User visiting a page.
  | "PAGE_VIEW"
  // Purchase, sales, or "order placed" event.
  | "PURCHASE"
  // Signup user action.
  | "SIGNUP"
  // Lead-generating action.
  | "LEAD"
  // Software download action (as for an app).
  | "DOWNLOAD"
  // The addition of items to a shopping cart or bag on an advertiser site.
  | "ADD_TO_CART"
  // When someone enters the checkout flow on an advertiser site.
  | "BEGIN_CHECKOUT"
  // The start of a paid subscription for a product or service.
  | "SUBSCRIBE_PAID"
  // A call to indicate interest in an advertiser's offering.
  | "PHONE_CALL_LEAD"
  // A lead conversion imported from an external source into Google Ads.
  | "IMPORTED_LEAD"
  // A submission of a form on an advertiser site indicating business
  // interest.
  | "SUBMIT_LEAD_FORM"
  // A booking of an appointment with an advertiser's business.
  | "BOOK_APPOINTMENT"
  // A quote or price estimate request.
  | "REQUEST_QUOTE"
  // A search for an advertiser's business location with intention to visit.
  | "GET_DIRECTIONS"
  // A click to an advertiser's partner's site.
  | "OUTBOUND_CLICK"
  // A call, SMS, email, chat or other type of contact to an advertiser.
  | "CONTACT"
  // A website engagement event such as long site time or a Google Analytics
  // (GA) Smart Goal. Intended to be used for GA, Firebase, GA Gold goal
  // imports.
  | "ENGAGEMENT"
  // A visit to a physical store location.
  | "STORE_VISIT"
  // A sale occurring in a physical store.
  | "STORE_SALE";
// Settings related to the value for conversion events associated with this
// conversion action.
export type googleadsgoogleadsv9resources_ConversionAction_ValueSettings = {
  // The value to use when conversion events for this conversion action are
  // sent with an invalid, disallowed or missing value, or when
  // this conversion action is configured to always use the default value.
  defaultValue?: number;
  // The currency code to use when conversion events for this conversion
  // action are sent with an invalid or missing currency code, or when this
  // conversion action is configured to always use the default value.
  defaultCurrencyCode?: string;
  // Controls whether the default value and default currency code are used in
  // place of the value and currency code specified in conversion events for
  // this conversion action.
  alwaysUseDefaultValue?: boolean;
};

// Indicates how conversions for this action will be counted. For more
// information, see https://support.google.com/google-ads/answer/3438531.
export type googleadsgoogleadsv9enums_ConversionActionCountingTypeEnum_ConversionActionCountingType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Count only one conversion per click.
  | "ONE_PER_CLICK"
  // Count all conversions per click.
  | "MANY_PER_CLICK";
// Settings related to this conversion action's attribution model.
export type googleadsgoogleadsv9resources_ConversionAction_AttributionModelSettings = {
  // The attribution model type of this conversion action.
  attributionModel: googleadsgoogleadsv9enums_AttributionModelEnum_AttributionModel | undefined;
  // Output only. The status of the data-driven attribution model for the conversion
  // action.
  //
  // Behaviors: OUTPUT_ONLY
  dataDrivenModelStatus: googleadsgoogleadsv9enums_DataDrivenModelStatusEnum_DataDrivenModelStatus | undefined;
};

// The attribution model that describes how to distribute credit for a
// particular conversion across potentially many prior interactions.
export type googleadsgoogleadsv9enums_AttributionModelEnum_AttributionModel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Uses external attribution.
  | "EXTERNAL"
  // Attributes all credit for a conversion to its last click.
  | "GOOGLE_ADS_LAST_CLICK"
  // Attributes all credit for a conversion to its first click using Google
  // Search attribution.
  | "GOOGLE_SEARCH_ATTRIBUTION_FIRST_CLICK"
  // Attributes credit for a conversion equally across all of its clicks using
  // Google Search attribution.
  | "GOOGLE_SEARCH_ATTRIBUTION_LINEAR"
  // Attributes exponentially more credit for a conversion to its more recent
  // clicks using Google Search attribution (half-life is 1 week).
  | "GOOGLE_SEARCH_ATTRIBUTION_TIME_DECAY"
  // Attributes 40% of the credit for a conversion to its first and last
  // clicks. Remaining 20% is evenly distributed across all other clicks. This
  // uses Google Search attribution.
  | "GOOGLE_SEARCH_ATTRIBUTION_POSITION_BASED"
  // Flexible model that uses machine learning to determine the appropriate
  // distribution of credit among clicks using Google Search attribution.
  | "GOOGLE_SEARCH_ATTRIBUTION_DATA_DRIVEN";
// Enumerates data driven model statuses.
export type googleadsgoogleadsv9enums_DataDrivenModelStatusEnum_DataDrivenModelStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The data driven model is available.
  | "AVAILABLE"
  // The data driven model is stale. It hasn't been updated for at least 7
  // days. It is still being used, but will become expired if it does not get
  // updated for 30 days.
  | "STALE"
  // The data driven model expired. It hasn't been updated for at least 30
  // days and cannot be used. Most commonly this is because there hasn't been
  // the required number of events in a recent 30-day period.
  | "EXPIRED"
  // The data driven model has never been generated. Most commonly this is
  // because there has never been the required number of events in any 30-day
  // period.
  | "NEVER_GENERATED";
// The site tag and event snippet pair for a TrackingCodeType.
export type googleadsgoogleadsv9common_TagSnippet = {
  // The type of the generated tag snippets for tracking conversions.
  type: googleadsgoogleadsv9enums_TrackingCodeTypeEnum_TrackingCodeType | undefined;
  // The format of the web page where the tracking tag and snippet will be
  // installed, e.g. HTML.
  pageFormat: googleadsgoogleadsv9enums_TrackingCodePageFormatEnum_TrackingCodePageFormat | undefined;
  // The site tag that adds visitors to your basic remarketing lists and sets
  // new cookies on your domain.
  globalSiteTag?: string;
  // The event snippet that works with the site tag to track actions that
  // should be counted as conversions.
  eventSnippet?: string;
};

// The type of the generated tag snippets for tracking conversions.
export type googleadsgoogleadsv9enums_TrackingCodeTypeEnum_TrackingCodeType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The snippet that is fired as a result of a website page loading.
  | "WEBPAGE"
  // The snippet contains a JavaScript function which fires the tag. This
  // function is typically called from an onClick handler added to a link or
  // button element on the page.
  | "WEBPAGE_ONCLICK"
  // For embedding on a mobile webpage. The snippet contains a JavaScript
  // function which fires the tag.
  | "CLICK_TO_CALL"
  // The snippet that is used to replace the phone number on your website with
  // a Google forwarding number for call tracking purposes.
  | "WEBSITE_CALL";
// The format of the web page where the tracking tag and snippet will be
// installed.
export type googleadsgoogleadsv9enums_TrackingCodePageFormatEnum_TrackingCodePageFormat =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Standard HTML page format.
  | "HTML"
  // Google AMP page format.
  | "AMP";
// The type of mobile app vendor
export type googleadsgoogleadsv9enums_MobileAppVendorEnum_MobileAppVendor =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Mobile app vendor for Apple app store.
  | "APPLE_APP_STORE"
  // Mobile app vendor for Google app store.
  | "GOOGLE_APP_STORE";
// Settings related to a Firebase conversion action.
export type googleadsgoogleadsv9resources_ConversionAction_FirebaseSettings = {
  // Output only. The event name of a Firebase conversion.
  //
  // Behaviors: OUTPUT_ONLY
  eventName?: string;
  // Output only. The Firebase project ID of the conversion.
  //
  // Behaviors: OUTPUT_ONLY
  projectId?: string;
};

// Settings related to a third party app analytics conversion action.
export type googleadsgoogleadsv9resources_ConversionAction_ThirdPartyAppAnalyticsSettings = {
  // Output only. The event name of a third-party app analytics conversion.
  //
  // Behaviors: OUTPUT_ONLY
  eventName?: string;
  // Output only. Name of the third-party app analytics provider.
  //
  // Behaviors: OUTPUT_ONLY
  providerName: string | undefined;
};

// Response message for [ConversionActionService.MutateConversionActions][google.ads.googleads.v9.services.ConversionActionService.MutateConversionActions].
export type MutateConversionActionsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateConversionActionResult[] | undefined;
};

// The result for the conversion action mutate.
export type MutateConversionActionResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated conversion action with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  conversionAction: googleadsgoogleadsv9resources_ConversionAction | undefined;
};

// Service to manage conversion actions.
export interface ConversionActionService {
  // Returns the requested conversion action.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetConversionAction(request: GetConversionActionRequest): Promise<googleadsgoogleadsv9resources_ConversionAction>;
  // Creates, updates or removes conversion actions. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ConversionActionError]()
  // [CurrencyCodeError]()
  // [DatabaseError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [StringLengthError]()
  MutateConversionActions(request: MutateConversionActionsRequest): Promise<MutateConversionActionsResponse>;
}

export function createConversionActionServiceClient(
  handler: RequestHandler
): ConversionActionService {
  return {
    GetConversionAction(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ConversionAction>;
    },
    MutateConversionActions(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/conversionActions:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateConversionActionsResponse>;
    },
  };
}
// Request message for [CampaignCriterionService.GetCampaignCriterion][google.ads.googleads.v9.services.CampaignCriterionService.GetCampaignCriterion].
export type GetCampaignCriterionRequest = {
  // Required. The resource name of the criterion to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignCriterionService.MutateCampaignCriteria][google.ads.googleads.v9.services.CampaignCriterionService.MutateCampaignCriteria].
export type MutateCampaignCriteriaRequest = {
  // Required. The ID of the customer whose criteria are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual criteria.
  //
  // Behaviors: REQUIRED
  operations: CampaignCriterionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on a campaign criterion.
export type CampaignCriterionOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new criterion.
  create?: googleadsgoogleadsv9resources_CampaignCriterion;
  // Update operation: The criterion is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_CampaignCriterion;
  // Remove operation: A resource name for the removed criterion is expected,
  // in this format:
  // `customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}`
  remove?: string;
};

// A campaign criterion.
export type googleadsgoogleadsv9resources_CampaignCriterion = {
  // Immutable. The resource name of the campaign criterion.
  // Campaign criterion resource names have the form:
  // `customers/{customer_id}/campaignCriteria/{campaign_id}~{criterion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign to which the criterion belongs.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // Output only. The ID of the criterion.
  // This field is ignored during mutate.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // Output only. The display name of the criterion.
  // This field is ignored for mutates.
  //
  // Behaviors: OUTPUT_ONLY
  displayName: string | undefined;
  // The modifier for the bids when the criterion matches. The modifier must be
  // in the range: 0.1 - 10.0. Most targetable criteria types support modifiers.
  // Use 0 to opt out of a Device type.
  bidModifier?: number;
  // Immutable. Whether to target (`false`) or exclude (`true`) the criterion.
  //
  // Behaviors: IMMUTABLE
  negative?: boolean;
  // Output only. The type of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_CriterionTypeEnum_CriterionType | undefined;
  // The status of the criterion.
  status: googleadsgoogleadsv9enums_CampaignCriterionStatusEnum_CampaignCriterionStatus | undefined;
  // Immutable. Keyword.
  //
  // Behaviors: IMMUTABLE
  keyword?: googleadsgoogleadsv9common_KeywordInfo;
  // Immutable. Placement.
  //
  // Behaviors: IMMUTABLE
  placement?: googleadsgoogleadsv9common_PlacementInfo;
  // Immutable. Mobile app category.
  //
  // Behaviors: IMMUTABLE
  mobileAppCategory?: googleadsgoogleadsv9common_MobileAppCategoryInfo;
  // Immutable. Mobile application.
  //
  // Behaviors: IMMUTABLE
  mobileApplication?: googleadsgoogleadsv9common_MobileApplicationInfo;
  // Immutable. Location.
  //
  // Behaviors: IMMUTABLE
  location?: googleadsgoogleadsv9common_LocationInfo;
  // Immutable. Device.
  //
  // Behaviors: IMMUTABLE
  device?: googleadsgoogleadsv9common_DeviceInfo;
  // Immutable. Ad Schedule.
  //
  // Behaviors: IMMUTABLE
  adSchedule?: googleadsgoogleadsv9common_AdScheduleInfo;
  // Immutable. Age range.
  //
  // Behaviors: IMMUTABLE
  ageRange?: googleadsgoogleadsv9common_AgeRangeInfo;
  // Immutable. Gender.
  //
  // Behaviors: IMMUTABLE
  gender?: googleadsgoogleadsv9common_GenderInfo;
  // Immutable. Income range.
  //
  // Behaviors: IMMUTABLE
  incomeRange?: googleadsgoogleadsv9common_IncomeRangeInfo;
  // Immutable. Parental status.
  //
  // Behaviors: IMMUTABLE
  parentalStatus?: googleadsgoogleadsv9common_ParentalStatusInfo;
  // Immutable. User List.
  //
  // Behaviors: IMMUTABLE
  userList?: googleadsgoogleadsv9common_UserListInfo;
  // Immutable. YouTube Video.
  //
  // Behaviors: IMMUTABLE
  youtubeVideo?: googleadsgoogleadsv9common_YouTubeVideoInfo;
  // Immutable. YouTube Channel.
  //
  // Behaviors: IMMUTABLE
  youtubeChannel?: googleadsgoogleadsv9common_YouTubeChannelInfo;
  // Immutable. Proximity.
  //
  // Behaviors: IMMUTABLE
  proximity?: googleadsgoogleadsv9common_ProximityInfo;
  // Immutable. Topic.
  //
  // Behaviors: IMMUTABLE
  topic?: googleadsgoogleadsv9common_TopicInfo;
  // Immutable. Listing scope.
  //
  // Behaviors: IMMUTABLE
  listingScope?: googleadsgoogleadsv9common_ListingScopeInfo;
  // Immutable. Language.
  //
  // Behaviors: IMMUTABLE
  language?: googleadsgoogleadsv9common_LanguageInfo;
  // Immutable. IpBlock.
  //
  // Behaviors: IMMUTABLE
  ipBlock?: googleadsgoogleadsv9common_IpBlockInfo;
  // Immutable. ContentLabel.
  //
  // Behaviors: IMMUTABLE
  contentLabel?: googleadsgoogleadsv9common_ContentLabelInfo;
  // Immutable. Carrier.
  //
  // Behaviors: IMMUTABLE
  carrier?: googleadsgoogleadsv9common_CarrierInfo;
  // Immutable. User Interest.
  //
  // Behaviors: IMMUTABLE
  userInterest?: googleadsgoogleadsv9common_UserInterestInfo;
  // Immutable. Webpage.
  //
  // Behaviors: IMMUTABLE
  webpage?: googleadsgoogleadsv9common_WebpageInfo;
  // Immutable. Operating system version.
  //
  // Behaviors: IMMUTABLE
  operatingSystemVersion?: googleadsgoogleadsv9common_OperatingSystemVersionInfo;
  // Immutable. Mobile Device.
  //
  // Behaviors: IMMUTABLE
  mobileDevice?: googleadsgoogleadsv9common_MobileDeviceInfo;
  // Immutable. Location Group
  //
  // Behaviors: IMMUTABLE
  locationGroup?: googleadsgoogleadsv9common_LocationGroupInfo;
  // Immutable. Custom Affinity.
  //
  // Behaviors: IMMUTABLE
  customAffinity?: googleadsgoogleadsv9common_CustomAffinityInfo;
  // Immutable. Custom Audience
  //
  // Behaviors: IMMUTABLE
  customAudience?: googleadsgoogleadsv9common_CustomAudienceInfo;
  // Immutable. Combined Audience.
  //
  // Behaviors: IMMUTABLE
  combinedAudience?: googleadsgoogleadsv9common_CombinedAudienceInfo;
  // Immutable. Smart Campaign Keyword Theme.
  //
  // Behaviors: IMMUTABLE
  keywordTheme?: googleadsgoogleadsv9common_KeywordThemeInfo;
};

// Enum describing possible criterion types.
export type googleadsgoogleadsv9enums_CriterionTypeEnum_CriterionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Keyword. e.g. 'mars cruise'.
  | "KEYWORD"
  // Placement, aka Website. e.g. 'www.flowers4sale.com'
  | "PLACEMENT"
  // Mobile application categories to target.
  | "MOBILE_APP_CATEGORY"
  // Mobile applications to target.
  | "MOBILE_APPLICATION"
  // Devices to target.
  | "DEVICE"
  // Locations to target.
  | "LOCATION"
  // Listing groups to target.
  | "LISTING_GROUP"
  // Ad Schedule.
  | "AD_SCHEDULE"
  // Age range.
  | "AGE_RANGE"
  // Gender.
  | "GENDER"
  // Income Range.
  | "INCOME_RANGE"
  // Parental status.
  | "PARENTAL_STATUS"
  // YouTube Video.
  | "YOUTUBE_VIDEO"
  // YouTube Channel.
  | "YOUTUBE_CHANNEL"
  // User list.
  | "USER_LIST"
  // Proximity.
  | "PROXIMITY"
  // A topic target on the display network (e.g. "Pets & Animals").
  | "TOPIC"
  // Listing scope to target.
  | "LISTING_SCOPE"
  // Language.
  | "LANGUAGE"
  // IpBlock.
  | "IP_BLOCK"
  // Content Label for category exclusion.
  | "CONTENT_LABEL"
  // Carrier.
  | "CARRIER"
  // A category the user is interested in.
  | "USER_INTEREST"
  // Webpage criterion for dynamic search ads.
  | "WEBPAGE"
  // Operating system version.
  | "OPERATING_SYSTEM_VERSION"
  // App payment model.
  | "APP_PAYMENT_MODEL"
  // Mobile device.
  | "MOBILE_DEVICE"
  // Custom affinity.
  | "CUSTOM_AFFINITY"
  // Custom intent.
  | "CUSTOM_INTENT"
  // Location group.
  | "LOCATION_GROUP"
  // Custom audience
  | "CUSTOM_AUDIENCE"
  // Combined audience
  | "COMBINED_AUDIENCE"
  // Smart Campaign keyword theme
  | "KEYWORD_THEME";
// The possible statuses of a CampaignCriterion.
export type googleadsgoogleadsv9enums_CampaignCriterionStatusEnum_CampaignCriterionStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The campaign criterion is enabled.
  | "ENABLED"
  // The campaign criterion is paused.
  | "PAUSED"
  // The campaign criterion is removed.
  | "REMOVED";
// A keyword criterion.
export type googleadsgoogleadsv9common_KeywordInfo = {
  // The text of the keyword (at most 80 characters and 10 words).
  text?: string;
  // The match type of the keyword.
  matchType: googleadsgoogleadsv9enums_KeywordMatchTypeEnum_KeywordMatchType | undefined;
};

// Possible Keyword match types.
export type googleadsgoogleadsv9enums_KeywordMatchTypeEnum_KeywordMatchType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Exact match.
  | "EXACT"
  // Phrase match.
  | "PHRASE"
  // Broad match.
  | "BROAD";
// A placement criterion. This can be used to modify bids for sites when
// targeting the content network.
export type googleadsgoogleadsv9common_PlacementInfo = {
  // URL of the placement.
  // For example, "http://www.domain.com".
  url?: string;
};

// A mobile app category criterion.
export type googleadsgoogleadsv9common_MobileAppCategoryInfo = {
  // The mobile app category constant resource name.
  mobileAppCategoryConstant?: string;
};

// A mobile application criterion.
export type googleadsgoogleadsv9common_MobileApplicationInfo = {
  // A string that uniquely identifies a mobile application to Google Ads API.
  // The format of this string is "{platform}-{platform_native_id}", where
  // platform is "1" for iOS apps and "2" for Android apps, and where
  // platform_native_id is the mobile application identifier native to the
  // corresponding platform.
  // For iOS, this native identifier is the 9 digit string that appears at the
  // end of an App Store URL (e.g., "476943146" for "Flood-It! 2" whose App
  // Store link is "http://itunes.apple.com/us/app/flood-it!-2/id476943146").
  // For Android, this native identifier is the application's package name
  // (e.g., "com.labpixies.colordrips" for "Color Drips" given Google Play link
  // "https://play.google.com/store/apps/details?id=com.labpixies.colordrips").
  // A well formed app id for Google Ads API would thus be "1-476943146" for iOS
  // and "2-com.labpixies.colordrips" for Android.
  // This field is required and must be set in CREATE operations.
  appId?: string;
  // Name of this mobile application.
  name?: string;
};

// A location criterion.
export type googleadsgoogleadsv9common_LocationInfo = {
  // The geo target constant resource name.
  geoTargetConstant?: string;
};

// A device criterion.
export type googleadsgoogleadsv9common_DeviceInfo = {
  // Type of the device.
  type: googleadsgoogleadsv9enums_DeviceEnum_Device | undefined;
};

// Represents an AdSchedule criterion.
// AdSchedule is specified as the day of the week and a time interval
// within which ads will be shown.
// No more than six AdSchedules can be added for the same day.
export type googleadsgoogleadsv9common_AdScheduleInfo = {
  // Minutes after the start hour at which this schedule starts.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  startMinute: googleadsgoogleadsv9enums_MinuteOfHourEnum_MinuteOfHour | undefined;
  // Minutes after the end hour at which this schedule ends. The schedule is
  // exclusive of the end minute.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  endMinute: googleadsgoogleadsv9enums_MinuteOfHourEnum_MinuteOfHour | undefined;
  // Starting hour in 24 hour time.
  // This field must be between 0 and 23, inclusive.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  startHour?: number;
  // Ending hour in 24 hour time; 24 signifies end of the day.
  // This field must be between 0 and 24, inclusive.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  endHour?: number;
  // Day of the week the schedule applies to.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  dayOfWeek: googleadsgoogleadsv9enums_DayOfWeekEnum_DayOfWeek | undefined;
};

// Enumerates of quarter-hours. E.g. "FIFTEEN"
export type googleadsgoogleadsv9enums_MinuteOfHourEnum_MinuteOfHour =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Zero minutes past the hour.
  | "ZERO"
  // Fifteen minutes past the hour.
  | "FIFTEEN"
  // Thirty minutes past the hour.
  | "THIRTY"
  // Forty-five minutes past the hour.
  | "FORTY_FIVE";
// Enumerates days of the week, e.g., "Monday".
export type googleadsgoogleadsv9enums_DayOfWeekEnum_DayOfWeek =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Monday.
  | "MONDAY"
  // Tuesday.
  | "TUESDAY"
  // Wednesday.
  | "WEDNESDAY"
  // Thursday.
  | "THURSDAY"
  // Friday.
  | "FRIDAY"
  // Saturday.
  | "SATURDAY"
  // Sunday.
  | "SUNDAY";
// An age range criterion.
export type googleadsgoogleadsv9common_AgeRangeInfo = {
  // Type of the age range.
  type: googleadsgoogleadsv9enums_AgeRangeTypeEnum_AgeRangeType | undefined;
};

// The type of demographic age ranges (e.g. between 18 and 24 years old).
export type googleadsgoogleadsv9enums_AgeRangeTypeEnum_AgeRangeType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Between 18 and 24 years old.
  | "AGE_RANGE_18_24"
  // Between 25 and 34 years old.
  | "AGE_RANGE_25_34"
  // Between 35 and 44 years old.
  | "AGE_RANGE_35_44"
  // Between 45 and 54 years old.
  | "AGE_RANGE_45_54"
  // Between 55 and 64 years old.
  | "AGE_RANGE_55_64"
  // 65 years old and beyond.
  | "AGE_RANGE_65_UP"
  // Undetermined age range.
  | "AGE_RANGE_UNDETERMINED";
// A gender criterion.
export type googleadsgoogleadsv9common_GenderInfo = {
  // Type of the gender.
  type: googleadsgoogleadsv9enums_GenderTypeEnum_GenderType | undefined;
};

// The type of demographic genders (e.g. female).
export type googleadsgoogleadsv9enums_GenderTypeEnum_GenderType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Male.
  | "MALE"
  // Female.
  | "FEMALE"
  // Undetermined gender.
  | "UNDETERMINED";
// An income range criterion.
export type googleadsgoogleadsv9common_IncomeRangeInfo = {
  // Type of the income range.
  type: googleadsgoogleadsv9enums_IncomeRangeTypeEnum_IncomeRangeType | undefined;
};

// The type of demographic income ranges (e.g. between 0% to 50%).
export type googleadsgoogleadsv9enums_IncomeRangeTypeEnum_IncomeRangeType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // 0%-50%.
  | "INCOME_RANGE_0_50"
  // 50% to 60%.
  | "INCOME_RANGE_50_60"
  // 60% to 70%.
  | "INCOME_RANGE_60_70"
  // 70% to 80%.
  | "INCOME_RANGE_70_80"
  // 80% to 90%.
  | "INCOME_RANGE_80_90"
  // Greater than 90%.
  | "INCOME_RANGE_90_UP"
  // Undetermined income range.
  | "INCOME_RANGE_UNDETERMINED";
// A parental status criterion.
export type googleadsgoogleadsv9common_ParentalStatusInfo = {
  // Type of the parental status.
  type: googleadsgoogleadsv9enums_ParentalStatusTypeEnum_ParentalStatusType | undefined;
};

// The type of parental statuses (e.g. not a parent).
export type googleadsgoogleadsv9enums_ParentalStatusTypeEnum_ParentalStatusType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Parent.
  | "PARENT"
  // Not a parent.
  | "NOT_A_PARENT"
  // Undetermined parental status.
  | "UNDETERMINED";
// A User List criterion. Represents a user list that is defined by the
// advertiser to be targeted.
export type googleadsgoogleadsv9common_UserListInfo = {
  // The User List resource name.
  userList?: string;
};

// A YouTube Video criterion.
export type googleadsgoogleadsv9common_YouTubeVideoInfo = {
  // YouTube video id as it appears on the YouTube watch page.
  videoId?: string;
};

// A YouTube Channel criterion.
export type googleadsgoogleadsv9common_YouTubeChannelInfo = {
  // The YouTube uploader channel id or the channel code of a YouTube channel.
  channelId?: string;
};

// A Proximity criterion. The geo point and radius determine what geographical
// area is included. The address is a description of the geo point that does
// not affect ad serving.
// There are two ways to create a proximity. First, by setting an address
// and radius. The geo point will be automatically computed. Second, by
// setting a geo point and radius. The address is an optional label that won't
// be validated.
export type googleadsgoogleadsv9common_ProximityInfo = {
  // Latitude and longitude.
  geoPoint: googleadsgoogleadsv9common_GeoPointInfo | undefined;
  // The radius of the proximity.
  radius?: number;
  // The unit of measurement of the radius. Default is KILOMETERS.
  radiusUnits: googleadsgoogleadsv9enums_ProximityRadiusUnitsEnum_ProximityRadiusUnits | undefined;
  // Full address.
  address: googleadsgoogleadsv9common_AddressInfo | undefined;
};

// Geo point for proximity criterion.
export type googleadsgoogleadsv9common_GeoPointInfo = {
  // Micro degrees for the longitude.
  longitudeInMicroDegrees?: number;
  // Micro degrees for the latitude.
  latitudeInMicroDegrees?: number;
};

// The unit of radius distance in proximity (e.g. MILES)
export type googleadsgoogleadsv9enums_ProximityRadiusUnitsEnum_ProximityRadiusUnits =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Miles
  | "MILES"
  // Kilometers
  | "KILOMETERS";
// Address for proximity criterion.
export type googleadsgoogleadsv9common_AddressInfo = {
  // Postal code.
  postalCode?: string;
  // Province or state code.
  provinceCode?: string;
  // Country code.
  countryCode?: string;
  // Province or state name.
  provinceName?: string;
  // Street address line 1.
  streetAddress?: string;
  // Street address line 2. This field is write-only. It is only used for
  // calculating the longitude and latitude of an address when geo_point is
  // empty.
  streetAddress2?: string;
  // Name of the city.
  cityName?: string;
};

// A topic criterion. Use topics to target or exclude placements in the
// Google Display Network based on the category into which the placement falls
// (for example, "Pets & Animals/Pets/Dogs").
export type googleadsgoogleadsv9common_TopicInfo = {
  // The Topic Constant resource name.
  topicConstant?: string;
  // The category to target or exclude. Each subsequent element in the array
  // describes a more specific sub-category. For example,
  // "Pets & Animals", "Pets", "Dogs" represents the "Pets & Animals/Pets/Dogs"
  // category.
  path: string[] | undefined;
};

// A listing scope criterion.
export type googleadsgoogleadsv9common_ListingScopeInfo = {
  // Scope of the campaign criterion.
  dimensions: googleadsgoogleadsv9common_ListingDimensionInfo[] | undefined;
};

// Listing dimensions for listing group criterion.
export type googleadsgoogleadsv9common_ListingDimensionInfo = {
  // Advertiser-specific hotel ID.
  hotelId?: googleadsgoogleadsv9common_HotelIdInfo;
  // Class of the hotel as a number of stars 1 to 5.
  hotelClass?: googleadsgoogleadsv9common_HotelClassInfo;
  // Country or Region the hotel is located in.
  hotelCountryRegion?: googleadsgoogleadsv9common_HotelCountryRegionInfo;
  // State the hotel is located in.
  hotelState?: googleadsgoogleadsv9common_HotelStateInfo;
  // City the hotel is located in.
  hotelCity?: googleadsgoogleadsv9common_HotelCityInfo;
  // Bidding category of a product offer.
  productBiddingCategory?: googleadsgoogleadsv9common_ProductBiddingCategoryInfo;
  // Brand of a product offer.
  productBrand?: googleadsgoogleadsv9common_ProductBrandInfo;
  // Locality of a product offer.
  productChannel?: googleadsgoogleadsv9common_ProductChannelInfo;
  // Availability of a product offer.
  productChannelExclusivity?: googleadsgoogleadsv9common_ProductChannelExclusivityInfo;
  // Condition of a product offer.
  productCondition?: googleadsgoogleadsv9common_ProductConditionInfo;
  // Custom attribute of a product offer.
  productCustomAttribute?: googleadsgoogleadsv9common_ProductCustomAttributeInfo;
  // Item id of a product offer.
  productItemId?: googleadsgoogleadsv9common_ProductItemIdInfo;
  // Type of a product offer.
  productType?: googleadsgoogleadsv9common_ProductTypeInfo;
  // Unknown dimension. Set when no other listing dimension is set.
  unknownListingDimension?: googleadsgoogleadsv9common_UnknownListingDimensionInfo;
};

// Advertiser-specific hotel ID.
export type googleadsgoogleadsv9common_HotelIdInfo = {
  // String value of the hotel ID.
  value?: string;
};

// Class of the hotel as a number of stars 1 to 5.
export type googleadsgoogleadsv9common_HotelClassInfo = {
  // Long value of the hotel class.
  value?: number;
};

// Country or Region the hotel is located in.
export type googleadsgoogleadsv9common_HotelCountryRegionInfo = {
  // The Geo Target Constant resource name.
  countryRegionCriterion?: string;
};

// State the hotel is located in.
export type googleadsgoogleadsv9common_HotelStateInfo = {
  // The Geo Target Constant resource name.
  stateCriterion?: string;
};

// City the hotel is located in.
export type googleadsgoogleadsv9common_HotelCityInfo = {
  // The Geo Target Constant resource name.
  cityCriterion?: string;
};

// Bidding category of a product offer.
export type googleadsgoogleadsv9common_ProductBiddingCategoryInfo = {
  // ID of the product bidding category.
  // This ID is equivalent to the google_product_category ID as described in
  // this article: https://support.google.com/merchants/answer/6324436
  id?: number;
  // Two-letter upper-case country code of the product bidding category. It must
  // match the campaign.shopping_setting.sales_country field.
  countryCode?: string;
  // Level of the product bidding category.
  level: googleadsgoogleadsv9enums_ProductBiddingCategoryLevelEnum_ProductBiddingCategoryLevel | undefined;
};

// Enum describing the level of the product bidding category.
export type googleadsgoogleadsv9enums_ProductBiddingCategoryLevelEnum_ProductBiddingCategoryLevel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Level 1.
  | "LEVEL1"
  // Level 2.
  | "LEVEL2"
  // Level 3.
  | "LEVEL3"
  // Level 4.
  | "LEVEL4"
  // Level 5.
  | "LEVEL5";
// Brand of the product.
export type googleadsgoogleadsv9common_ProductBrandInfo = {
  // String value of the product brand.
  value?: string;
};

// Locality of a product offer.
export type googleadsgoogleadsv9common_ProductChannelInfo = {
  // Value of the locality.
  channel: googleadsgoogleadsv9enums_ProductChannelEnum_ProductChannel | undefined;
};

// Enum describing the locality of a product offer.
export type googleadsgoogleadsv9enums_ProductChannelEnum_ProductChannel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The item is sold online.
  | "ONLINE"
  // The item is sold in local stores.
  | "LOCAL";
// Availability of a product offer.
export type googleadsgoogleadsv9common_ProductChannelExclusivityInfo = {
  // Value of the availability.
  channelExclusivity: googleadsgoogleadsv9enums_ProductChannelExclusivityEnum_ProductChannelExclusivity | undefined;
};

// Enum describing the availability of a product offer.
export type googleadsgoogleadsv9enums_ProductChannelExclusivityEnum_ProductChannelExclusivity =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The item is sold through one channel only, either local stores or online
  // as indicated by its ProductChannel.
  | "SINGLE_CHANNEL"
  // The item is matched to its online or local stores counterpart, indicating
  // it is available for purchase in both ShoppingProductChannels.
  | "MULTI_CHANNEL";
// Condition of a product offer.
export type googleadsgoogleadsv9common_ProductConditionInfo = {
  // Value of the condition.
  condition: googleadsgoogleadsv9enums_ProductConditionEnum_ProductCondition | undefined;
};

// Enum describing the condition of a product offer.
export type googleadsgoogleadsv9enums_ProductConditionEnum_ProductCondition =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The product condition is new.
  | "NEW"
  // The product condition is refurbished.
  | "REFURBISHED"
  // The product condition is used.
  | "USED";
// Custom attribute of a product offer.
export type googleadsgoogleadsv9common_ProductCustomAttributeInfo = {
  // String value of the product custom attribute.
  value?: string;
  // Indicates the index of the custom attribute.
  index: googleadsgoogleadsv9enums_ProductCustomAttributeIndexEnum_ProductCustomAttributeIndex | undefined;
};

// The index of the product custom attribute.
export type googleadsgoogleadsv9enums_ProductCustomAttributeIndexEnum_ProductCustomAttributeIndex =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // First product custom attribute.
  | "INDEX0"
  // Second product custom attribute.
  | "INDEX1"
  // Third product custom attribute.
  | "INDEX2"
  // Fourth product custom attribute.
  | "INDEX3"
  // Fifth product custom attribute.
  | "INDEX4";
// Item id of a product offer.
export type googleadsgoogleadsv9common_ProductItemIdInfo = {
  // Value of the id.
  value?: string;
};

// Type of a product offer.
export type googleadsgoogleadsv9common_ProductTypeInfo = {
  // Value of the type.
  value?: string;
  // Level of the type.
  level: googleadsgoogleadsv9enums_ProductTypeLevelEnum_ProductTypeLevel | undefined;
};

// Enum describing the level of the type of a product offer.
export type googleadsgoogleadsv9enums_ProductTypeLevelEnum_ProductTypeLevel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Level 1.
  | "LEVEL1"
  // Level 2.
  | "LEVEL2"
  // Level 3.
  | "LEVEL3"
  // Level 4.
  | "LEVEL4"
  // Level 5.
  | "LEVEL5";
// Unknown listing dimension.
export type googleadsgoogleadsv9common_UnknownListingDimensionInfo = {
};

// A language criterion.
export type googleadsgoogleadsv9common_LanguageInfo = {
  // The language constant resource name.
  languageConstant?: string;
};

// An IpBlock criterion used for IP exclusions. We allow:
// - IPv4 and IPv6 addresses
// - individual addresses (192.168.0.1)
// - masks for individual addresses (192.168.0.1/32)
// - masks for Class C networks (192.168.0.1/24)
export type googleadsgoogleadsv9common_IpBlockInfo = {
  // The IP address of this IP block.
  ipAddress?: string;
};

// Content Label for category exclusion.
export type googleadsgoogleadsv9common_ContentLabelInfo = {
  // Content label type, required for CREATE operations.
  type: googleadsgoogleadsv9enums_ContentLabelTypeEnum_ContentLabelType | undefined;
};

// Enum listing the content label types supported by ContentLabel criterion.
export type googleadsgoogleadsv9enums_ContentLabelTypeEnum_ContentLabelType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Sexually suggestive content.
  | "SEXUALLY_SUGGESTIVE"
  // Below the fold placement.
  | "BELOW_THE_FOLD"
  // Parked domain.
  | "PARKED_DOMAIN"
  // Juvenile, gross & bizarre content.
  | "JUVENILE"
  // Profanity & rough language.
  | "PROFANITY"
  // Death & tragedy.
  | "TRAGEDY"
  // Video.
  | "VIDEO"
  // Content rating: G.
  | "VIDEO_RATING_DV_G"
  // Content rating: PG.
  | "VIDEO_RATING_DV_PG"
  // Content rating: T.
  | "VIDEO_RATING_DV_T"
  // Content rating: MA.
  | "VIDEO_RATING_DV_MA"
  // Content rating: not yet rated.
  | "VIDEO_NOT_YET_RATED"
  // Embedded video.
  | "EMBEDDED_VIDEO"
  // Live streaming video.
  | "LIVE_STREAMING_VIDEO"
  // Sensitive social issues.
  | "SOCIAL_ISSUES";
// Represents a Carrier Criterion.
export type googleadsgoogleadsv9common_CarrierInfo = {
  // The Carrier constant resource name.
  carrierConstant?: string;
};

// Represents a particular interest-based topic to be targeted.
export type googleadsgoogleadsv9common_UserInterestInfo = {
  // The UserInterest resource name.
  userInterestCategory?: string;
};

// Represents a criterion for targeting webpages of an advertiser's website.
export type googleadsgoogleadsv9common_WebpageInfo = {
  // The name of the criterion that is defined by this parameter. The name value
  // will be used for identifying, sorting and filtering criteria with this type
  // of parameters.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  criterionName?: string;
  // Conditions, or logical expressions, for webpage targeting. The list of
  // webpage targeting conditions are and-ed together when evaluated
  // for targeting.
  // This field is required for CREATE operations and is prohibited on UPDATE
  // operations.
  conditions: googleadsgoogleadsv9common_WebpageConditionInfo[] | undefined;
  // Website criteria coverage percentage. This is the computed percentage
  // of website coverage based on the website target, negative website target
  // and negative keywords in the ad group and campaign. For instance, when
  // coverage returns as 1, it indicates it has 100% coverage. This field is
  // read-only.
  coveragePercentage: number | undefined;
  // List of sample urls that match the website target. This field is read-only.
  sample: googleadsgoogleadsv9common_WebpageSampleInfo | undefined;
};

// Logical expression for targeting webpages of an advertiser's website.
export type googleadsgoogleadsv9common_WebpageConditionInfo = {
  // Operand of webpage targeting condition.
  operand: googleadsgoogleadsv9enums_WebpageConditionOperandEnum_WebpageConditionOperand | undefined;
  // Operator of webpage targeting condition.
  operator: googleadsgoogleadsv9enums_WebpageConditionOperatorEnum_WebpageConditionOperator | undefined;
  // Argument of webpage targeting condition.
  argument?: string;
};

// The webpage condition operand in webpage criterion.
export type googleadsgoogleadsv9enums_WebpageConditionOperandEnum_WebpageConditionOperand =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Operand denoting a webpage URL targeting condition.
  | "URL"
  // Operand denoting a webpage category targeting condition.
  | "CATEGORY"
  // Operand denoting a webpage title targeting condition.
  | "PAGE_TITLE"
  // Operand denoting a webpage content targeting condition.
  | "PAGE_CONTENT"
  // Operand denoting a webpage custom label targeting condition.
  | "CUSTOM_LABEL";
// The webpage condition operator in webpage criterion.
export type googleadsgoogleadsv9enums_WebpageConditionOperatorEnum_WebpageConditionOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The argument web condition is equal to the compared web condition.
  | "EQUALS"
  // The argument web condition is part of the compared web condition.
  | "CONTAINS";
// List of sample urls that match the website target
export type googleadsgoogleadsv9common_WebpageSampleInfo = {
  // Webpage sample urls
  sampleUrls: string[] | undefined;
};

// Represents an operating system version to be targeted.
export type googleadsgoogleadsv9common_OperatingSystemVersionInfo = {
  // The operating system version constant resource name.
  operatingSystemVersionConstant?: string;
};

// A mobile device criterion.
export type googleadsgoogleadsv9common_MobileDeviceInfo = {
  // The mobile device constant resource name.
  mobileDeviceConstant?: string;
};

// A radius around a list of locations specified via a feed.
export type googleadsgoogleadsv9common_LocationGroupInfo = {
  // Feed specifying locations for targeting.
  // This is required and must be set in CREATE operations.
  feed?: string;
  // Geo target constant(s) restricting the scope of the geographic area within
  // the feed. Currently only one geo target constant is allowed.
  geoTargetConstants: string[] | undefined;
  // Distance in units specifying the radius around targeted locations.
  // This is required and must be set in CREATE operations.
  radius?: number;
  // Unit of the radius. Miles and meters are supported for geo target
  // constants. Milli miles and meters are supported for feed item sets.
  // This is required and must be set in CREATE operations.
  radiusUnits: googleadsgoogleadsv9enums_LocationGroupRadiusUnitsEnum_LocationGroupRadiusUnits | undefined;
  // FeedItemSets whose FeedItems are targeted. If multiple IDs are specified,
  // then all items that appear in at least one set are targeted. This field
  // cannot be used with geo_target_constants. This is optional and can only be
  // set in CREATE operations.
  feedItemSets: string[] | undefined;
};

// The unit of radius distance in location group (e.g. MILES)
export type googleadsgoogleadsv9enums_LocationGroupRadiusUnitsEnum_LocationGroupRadiusUnits =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Meters
  | "METERS"
  // Miles
  | "MILES"
  // Milli Miles
  | "MILLI_MILES";
// A custom affinity criterion.
// A criterion of this type is only targetable.
export type googleadsgoogleadsv9common_CustomAffinityInfo = {
  // The CustomInterest resource name.
  customAffinity?: string;
};

// A custom audience criterion.
export type googleadsgoogleadsv9common_CustomAudienceInfo = {
  // The CustomAudience resource name.
  customAudience: string | undefined;
};

// A combined audience criterion.
export type googleadsgoogleadsv9common_CombinedAudienceInfo = {
  // The CombinedAudience resource name.
  combinedAudience: string | undefined;
};

// A Smart Campaign keyword theme.
export type googleadsgoogleadsv9common_KeywordThemeInfo = {
  // The resource name of a Smart Campaign keyword theme constant.
  // `keywordThemeConstants/{keyword_theme_id}~{sub_keyword_theme_id}`
  keywordThemeConstant?: string;
  // Free-form text to be matched to a Smart Campaign keyword theme constant
  // on a best-effort basis.
  freeFormKeywordTheme?: string;
};

// Response message for campaign criterion mutate.
export type MutateCampaignCriteriaResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignCriterionResult[] | undefined;
};

// The result for the criterion mutate.
export type MutateCampaignCriterionResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign criterion with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignCriterion: googleadsgoogleadsv9resources_CampaignCriterion | undefined;
};

// Service to manage campaign criteria.
export interface CampaignCriterionService {
  // Returns the requested criterion in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignCriterion(request: GetCampaignCriterionRequest): Promise<googleadsgoogleadsv9resources_CampaignCriterion>;
  // Creates, updates, or removes criteria. Operation statuses are returned.
  // List of thrown errors:
  // [AdxError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignCriterionError]()
  // [CollectionSizeError]()
  // [ContextError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [FunctionError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RegionCodeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateCampaignCriteria(request: MutateCampaignCriteriaRequest): Promise<MutateCampaignCriteriaResponse>;
}

export function createCampaignCriterionServiceClient(
  handler: RequestHandler
): CampaignCriterionService {
  return {
    GetCampaignCriterion(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignCriterion>;
    },
    MutateCampaignCriteria(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignCriteria:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignCriteriaResponse>;
    },
  };
}
// Request message for [GeographicViewService.GetGeographicView][google.ads.googleads.v9.services.GeographicViewService.GetGeographicView].
export type GetGeographicViewRequest = {
  // Required. The resource name of the geographic view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage geographic views.
export interface GeographicViewService {
  // Returns the requested geographic view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetGeographicView(request: GetGeographicViewRequest): Promise<googleadsgoogleadsv9resources_GeographicView>;
}

export function createGeographicViewServiceClient(
  handler: RequestHandler
): GeographicViewService {
  return {
    GetGeographicView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_GeographicView>;
    },
  };
}
// A geographic view.
// Geographic View includes all metrics aggregated at the country level,
// one row per country. It reports metrics at either actual physical location of
// the user or an area of interest. If other segment fields are used, you may
// get more than one row per country.
export type googleadsgoogleadsv9resources_GeographicView = {
  // Output only. The resource name of the geographic view.
  // Geographic view resource names have the form:
  // `customers/{customer_id}/geographicViews/{country_criterion_id}~{location_type}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Type of the geo targeting of the campaign.
  //
  // Behaviors: OUTPUT_ONLY
  locationType: googleadsgoogleadsv9enums_GeoTargetingTypeEnum_GeoTargetingType | undefined;
  // Output only. Criterion Id for the country.
  //
  // Behaviors: OUTPUT_ONLY
  countryCriterionId?: number;
};

// The possible geo targeting types.
export type googleadsgoogleadsv9enums_GeoTargetingTypeEnum_GeoTargetingType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Location the user is interested in while making the query.
  | "AREA_OF_INTEREST"
  // Location of the user issuing the query.
  | "LOCATION_OF_PRESENCE";
// Request message for [AdGroupAdLabelService.GetAdGroupAdLabel][google.ads.googleads.v9.services.AdGroupAdLabelService.GetAdGroupAdLabel].
export type GetAdGroupAdLabelRequest = {
  // Required. The resource name of the ad group ad label to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupAdLabelService.MutateAdGroupAdLabels][google.ads.googleads.v9.services.AdGroupAdLabelService.MutateAdGroupAdLabels].
export type MutateAdGroupAdLabelsRequest = {
  // Required. ID of the customer whose ad group ad labels are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on ad group ad labels.
  //
  // Behaviors: REQUIRED
  operations: AdGroupAdLabelOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, remove) on an ad group ad label.
export type AdGroupAdLabelOperation = {
  // Create operation: No resource name is expected for the new ad group ad
  // label.
  create?: googleadsgoogleadsv9resources_AdGroupAdLabel;
  // Remove operation: A resource name for the ad group ad label
  // being removed, in this format:
  // `customers/{customer_id}/adGroupAdLabels/{ad_group_id}~{ad_id}
  // _{label_id}`
  remove?: string;
};

// A relationship between an ad group ad and a label.
export type googleadsgoogleadsv9resources_AdGroupAdLabel = {
  // Immutable. The resource name of the ad group ad label.
  // Ad group ad label resource names have the form:
  // `customers/{customer_id}/adGroupAdLabels/{ad_group_id}~{ad_id}~{label_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group ad to which the label is attached.
  //
  // Behaviors: IMMUTABLE
  adGroupAd?: string;
  // Immutable. The label assigned to the ad group ad.
  //
  // Behaviors: IMMUTABLE
  label?: string;
};

// Response message for an ad group ad labels mutate.
export type MutateAdGroupAdLabelsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupAdLabelResult[] | undefined;
};

// The result for an ad group ad label mutate.
export type MutateAdGroupAdLabelResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage labels on ad group ads.
export interface AdGroupAdLabelService {
  // Returns the requested ad group ad label in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupAdLabel(request: GetAdGroupAdLabelRequest): Promise<googleadsgoogleadsv9resources_AdGroupAdLabel>;
  // Creates and removes ad group ad labels.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [HeaderError]()
  // [InternalError]()
  // [LabelError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RequestError]()
  MutateAdGroupAdLabels(request: MutateAdGroupAdLabelsRequest): Promise<MutateAdGroupAdLabelsResponse>;
}

export function createAdGroupAdLabelServiceClient(
  handler: RequestHandler
): AdGroupAdLabelService {
  return {
    GetAdGroupAdLabel(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupAdLabel>;
    },
    MutateAdGroupAdLabels(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupAdLabels:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupAdLabelsResponse>;
    },
  };
}
// Request message for [CustomerFeedService.GetCustomerFeed][google.ads.googleads.v9.services.CustomerFeedService.GetCustomerFeed].
export type GetCustomerFeedRequest = {
  // Required. The resource name of the customer feed to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomerFeedService.MutateCustomerFeeds][google.ads.googleads.v9.services.CustomerFeedService.MutateCustomerFeeds].
export type MutateCustomerFeedsRequest = {
  // Required. The ID of the customer whose customer feeds are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customer feeds.
  //
  // Behaviors: REQUIRED
  operations: CustomerFeedOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on a customer feed.
export type CustomerFeedOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new customer feed.
  create?: googleadsgoogleadsv9resources_CustomerFeed;
  // Update operation: The customer feed is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_CustomerFeed;
  // Remove operation: A resource name for the removed customer feed is
  // expected, in this format:
  // `customers/{customer_id}/customerFeeds/{feed_id}`
  remove?: string;
};

// A customer feed.
export type googleadsgoogleadsv9resources_CustomerFeed = {
  // Immutable. The resource name of the customer feed.
  // Customer feed resource names have the form:
  // `customers/{customer_id}/customerFeeds/{feed_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The feed being linked to the customer.
  //
  // Behaviors: IMMUTABLE
  feed?: string;
  // Indicates which placeholder types the feed may populate under the connected
  // customer. Required.
  placeholderTypes: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType[] | undefined;
  // Matching function associated with the CustomerFeed.
  // The matching function is used to filter the set of feed items selected.
  // Required.
  matchingFunction: googleadsgoogleadsv9common_MatchingFunction | undefined;
  // Output only. Status of the customer feed.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedLinkStatusEnum_FeedLinkStatus | undefined;
};

// Possible placeholder types for a feed mapping.
export type googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Lets you show links in your ad to pages from your website, including the
  // main landing page.
  | "SITELINK"
  // Lets you attach a phone number to an ad, allowing customers to call
  // directly from the ad.
  | "CALL"
  // Lets you provide users with a link that points to a mobile app in
  // addition to a website.
  | "APP"
  // Lets you show locations of businesses from your Business Profile
  // in your ad. This helps people find your locations by showing your
  // ads with your address, a map to your location, or the distance to your
  // business. This extension type is useful to draw customers to your
  // brick-and-mortar location.
  | "LOCATION"
  // If you sell your product through retail chains, affiliate location
  // extensions let you show nearby stores that carry your products.
  | "AFFILIATE_LOCATION"
  // Lets you include additional text with your search ads that provide
  // detailed information about your business, including products and services
  // you offer. Callouts appear in ads at the top and bottom of Google search
  // results.
  | "CALLOUT"
  // Lets you add more info to your ad, specific to some predefined categories
  // such as types, brands, styles, etc. A minimum of 3 text (SNIPPETS) values
  // are required.
  | "STRUCTURED_SNIPPET"
  // Allows users to see your ad, click an icon, and contact you directly by
  // text message. With one tap on your ad, people can contact you to book an
  // appointment, get a quote, ask for information, or request a service.
  | "MESSAGE"
  // Lets you display prices for a list of items along with your ads. A price
  // feed is composed of three to eight price table rows.
  | "PRICE"
  // Allows you to highlight sales and other promotions that let users see how
  // they can save by buying now.
  | "PROMOTION"
  // Lets you dynamically inject custom data into the title and description
  // of your ads.
  | "AD_CUSTOMIZER"
  // Indicates that this feed is for education dynamic remarketing.
  | "DYNAMIC_EDUCATION"
  // Indicates that this feed is for flight dynamic remarketing.
  | "DYNAMIC_FLIGHT"
  // Indicates that this feed is for a custom dynamic remarketing type. Use
  // this only if the other business types don't apply to your products or
  // services.
  | "DYNAMIC_CUSTOM"
  // Indicates that this feed is for hotels and rentals dynamic remarketing.
  | "DYNAMIC_HOTEL"
  // Indicates that this feed is for real estate dynamic remarketing.
  | "DYNAMIC_REAL_ESTATE"
  // Indicates that this feed is for travel dynamic remarketing.
  | "DYNAMIC_TRAVEL"
  // Indicates that this feed is for local deals dynamic remarketing.
  | "DYNAMIC_LOCAL"
  // Indicates that this feed is for job dynamic remarketing.
  | "DYNAMIC_JOB"
  // Lets you attach an image to an ad.
  | "IMAGE";
// Matching function associated with a
// CustomerFeed, CampaignFeed, or AdGroupFeed. The matching function is used
// to filter the set of feed items selected.
export type googleadsgoogleadsv9common_MatchingFunction = {
  // String representation of the Function.
  // Examples:
  // 1. IDENTITY(true) or IDENTITY(false). All or no feed items served.
  // 2. EQUALS(CONTEXT.DEVICE,"Mobile")
  // 3. IN(FEED_ITEM_ID,{1000001,1000002,1000003})
  // 4. CONTAINS_ANY(FeedAttribute[12345678,0],{"Mars cruise","Venus cruise"})
  // 5. AND(IN(FEED_ITEM_ID,{10001,10002}),EQUALS(CONTEXT.DEVICE,"Mobile"))
  // For more details, visit
  // https://developers.google.com/adwords/api/docs/guides/feed-matching-functions
  // Note that because multiple strings may represent the same underlying
  // function (whitespace and single versus double quotation marks, for
  // example), the value returned may not be identical to the string sent in a
  // mutate request.
  functionString?: string;
  // Operator for a function.
  operator: googleadsgoogleadsv9enums_MatchingFunctionOperatorEnum_MatchingFunctionOperator | undefined;
  // The operands on the left hand side of the equation. This is also the
  // operand to be used for single operand expressions such as NOT.
  leftOperands: googleadsgoogleadsv9common_Operand[] | undefined;
  // The operands on the right hand side of the equation.
  rightOperands: googleadsgoogleadsv9common_Operand[] | undefined;
};

// Possible operators in a matching function.
export type googleadsgoogleadsv9enums_MatchingFunctionOperatorEnum_MatchingFunctionOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The IN operator.
  | "IN"
  // The IDENTITY operator.
  | "IDENTITY"
  // The EQUALS operator
  | "EQUALS"
  // Operator that takes two or more operands that are of type
  // FunctionOperand and checks that all the operands evaluate to true.
  // For functions related to ad formats, all the operands must be in
  // left_operands.
  | "AND"
  // Operator that returns true if the elements in left_operands contain any
  // of the elements in right_operands. Otherwise, return false. The
  // right_operands must contain at least 1 and no more than 3
  // ConstantOperands.
  | "CONTAINS_ANY";
// An operand in a matching function.
export type googleadsgoogleadsv9common_Operand = {
  // A constant operand in a matching function.
  constantOperand?: googleadsgoogleadsv9common_Operand_ConstantOperand;
  // This operand specifies a feed attribute in feed.
  feedAttributeOperand?: googleadsgoogleadsv9common_Operand_FeedAttributeOperand;
  // A function operand in a matching function.
  // Used to represent nested functions.
  functionOperand?: googleadsgoogleadsv9common_Operand_FunctionOperand;
  // An operand in a function referring to a value in the request context.
  requestContextOperand?: googleadsgoogleadsv9common_Operand_RequestContextOperand;
};

// A constant operand in a matching function.
export type googleadsgoogleadsv9common_Operand_ConstantOperand = {
  // String value of the operand if it is a string type.
  stringValue?: string;
  // Int64 value of the operand if it is a int64 type.
  longValue?: number;
  // Boolean value of the operand if it is a boolean type.
  booleanValue?: boolean;
  // Double value of the operand if it is a double type.
  doubleValue?: number;
};

// A feed attribute operand in a matching function.
// Used to represent a feed attribute in feed.
export type googleadsgoogleadsv9common_Operand_FeedAttributeOperand = {
  // The associated feed. Required.
  feedId?: number;
  // Id of the referenced feed attribute. Required.
  feedAttributeId?: number;
};

// A function operand in a matching function.
// Used to represent nested functions.
export type googleadsgoogleadsv9common_Operand_FunctionOperand = {
  // The matching function held in this operand.
  matchingFunction: googleadsgoogleadsv9common_MatchingFunction | undefined;
};

// An operand in a function referring to a value in the request context.
export type googleadsgoogleadsv9common_Operand_RequestContextOperand = {
  // Type of value to be referred in the request context.
  contextType: googleadsgoogleadsv9enums_MatchingFunctionContextTypeEnum_MatchingFunctionContextType | undefined;
};

// Possible context types for an operand in a matching function.
export type googleadsgoogleadsv9enums_MatchingFunctionContextTypeEnum_MatchingFunctionContextType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed item id in the request context.
  | "FEED_ITEM_ID"
  // The device being used (possible values are 'Desktop' or 'Mobile').
  | "DEVICE_NAME"
  // Feed item set id in the request context.
  | "FEED_ITEM_SET_ID";
// Possible statuses of a feed link.
export type googleadsgoogleadsv9enums_FeedLinkStatusEnum_FeedLinkStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed link is enabled.
  | "ENABLED"
  // Feed link has been removed.
  | "REMOVED";
// Response message for a customer feed mutate.
export type MutateCustomerFeedsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCustomerFeedResult[] | undefined;
};

// The result for the customer feed mutate.
export type MutateCustomerFeedResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated customer feed with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  customerFeed: googleadsgoogleadsv9resources_CustomerFeed | undefined;
};

// Service to manage customer feeds.
export interface CustomerFeedService {
  // Returns the requested customer feed in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerFeed(request: GetCustomerFeedRequest): Promise<googleadsgoogleadsv9resources_CustomerFeed>;
  // Creates, updates, or removes customer feeds. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CustomerFeedError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [FunctionError]()
  // [FunctionParsingError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateCustomerFeeds(request: MutateCustomerFeedsRequest): Promise<MutateCustomerFeedsResponse>;
}

export function createCustomerFeedServiceClient(
  handler: RequestHandler
): CustomerFeedService {
  return {
    GetCustomerFeed(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerFeed>;
    },
    MutateCustomerFeeds(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerFeeds:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerFeedsResponse>;
    },
  };
}
// Request message for [AdGroupFeedService.GetAdGroupFeed][google.ads.googleads.v9.services.AdGroupFeedService.GetAdGroupFeed].
export type GetAdGroupFeedRequest = {
  // Required. The resource name of the ad group feed to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupFeedService.MutateAdGroupFeeds][google.ads.googleads.v9.services.AdGroupFeedService.MutateAdGroupFeeds].
export type MutateAdGroupFeedsRequest = {
  // Required. The ID of the customer whose ad group feeds are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad group feeds.
  //
  // Behaviors: REQUIRED
  operations: AdGroupFeedOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on an ad group feed.
export type AdGroupFeedOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new ad group feed.
  create?: googleadsgoogleadsv9resources_AdGroupFeed;
  // Update operation: The ad group feed is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_AdGroupFeed;
  // Remove operation: A resource name for the removed ad group feed is
  // expected, in this format:
  // `customers/{customer_id}/adGroupFeeds/{ad_group_id}~{feed_id}`
  remove?: string;
};

// An ad group feed.
export type googleadsgoogleadsv9resources_AdGroupFeed = {
  // Immutable. The resource name of the ad group feed.
  // Ad group feed resource names have the form:
  // `customers/{customer_id}/adGroupFeeds/{ad_group_id}~{feed_id}
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The feed being linked to the ad group.
  //
  // Behaviors: IMMUTABLE
  feed?: string;
  // Immutable. The ad group being linked to the feed.
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // Indicates which placeholder types the feed may populate under the connected
  // ad group. Required.
  placeholderTypes: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType[] | undefined;
  // Matching function associated with the AdGroupFeed.
  // The matching function is used to filter the set of feed items selected.
  // Required.
  matchingFunction: googleadsgoogleadsv9common_MatchingFunction | undefined;
  // Output only. Status of the ad group feed.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedLinkStatusEnum_FeedLinkStatus | undefined;
};

// Response message for an ad group feed mutate.
export type MutateAdGroupFeedsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupFeedResult[] | undefined;
};

// The result for the ad group feed mutate.
export type MutateAdGroupFeedResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad group feed with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adGroupFeed: googleadsgoogleadsv9resources_AdGroupFeed | undefined;
};

// Service to manage ad group feeds.
export interface AdGroupFeedService {
  // Returns the requested ad group feed in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupFeed(request: GetAdGroupFeedRequest): Promise<googleadsgoogleadsv9resources_AdGroupFeed>;
  // Creates, updates, or removes ad group feeds. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AdGroupFeedError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FunctionError]()
  // [FunctionParsingError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateAdGroupFeeds(request: MutateAdGroupFeedsRequest): Promise<MutateAdGroupFeedsResponse>;
}

export function createAdGroupFeedServiceClient(
  handler: RequestHandler
): AdGroupFeedService {
  return {
    GetAdGroupFeed(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupFeed>;
    },
    MutateAdGroupFeeds(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupFeeds:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupFeedsResponse>;
    },
  };
}
// Request message for [AssetSetAssetService.MutateAssetSetAssets][google.ads.googleads.v9.services.AssetSetAssetService.MutateAssetSetAssets].
export type MutateAssetSetAssetsRequest = {
  // Required. The ID of the customer whose asset set assets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual asset set assets.
  //
  // Behaviors: REQUIRED
  operations: AssetSetAssetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on an asset set asset.
export type AssetSetAssetOperation = {
  // Create operation: No resource name is expected for the new asset set
  // asset
  create?: googleadsgoogleadsv9resources_AssetSetAsset;
  // Remove operation: A resource name for the removed asset set asset is
  // expected, in this format:
  // `customers/{customer_id}/assetSetAssets/{asset_set_id}~{asset_id}`
  remove?: string;
};

// AssetSetAsset is the link between an asset and an asset set.
// Adding an AssetSetAsset links an asset with an asset set.
export type googleadsgoogleadsv9resources_AssetSetAsset = {
  // Immutable. The resource name of the asset set asset.
  // Asset set asset resource names have the form:
  // `customers/{customer_id}/assetSetAssets/{asset_set_id}~{asset_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The asset set which this asset set asset is linking to.
  //
  // Behaviors: IMMUTABLE
  assetSet: string | undefined;
  // Immutable. The asset which this asset set asset is linking to.
  //
  // Behaviors: IMMUTABLE
  asset: string | undefined;
  // Output only. The status of the asset set asset. Read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_AssetSetAssetStatusEnum_AssetSetAssetStatus | undefined;
};

// The possible statuses of an asset set asset.
export type googleadsgoogleadsv9enums_AssetSetAssetStatusEnum_AssetSetAssetStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The asset set asset is enabled.
  | "ENABLED"
  // The asset set asset is removed.
  | "REMOVED";
// Response message for an asset set asset mutate.
export type MutateAssetSetAssetsResponse = {
  // All results for the mutate.
  results: MutateAssetSetAssetResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the asset set asset mutate.
export type MutateAssetSetAssetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated asset set asset with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  assetSetAsset: googleadsgoogleadsv9resources_AssetSetAsset | undefined;
};

// Service to manage asset set asset.
export interface AssetSetAssetService {
  // Creates, updates or removes asset set assets. Operation statuses are
  // returned.
  MutateAssetSetAssets(request: MutateAssetSetAssetsRequest): Promise<MutateAssetSetAssetsResponse>;
}

export function createAssetSetAssetServiceClient(
  handler: RequestHandler
): AssetSetAssetService {
  return {
    MutateAssetSetAssets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/assetSetAssets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAssetSetAssetsResponse>;
    },
  };
}
// Request message for [MediaFileService.GetMediaFile][google.ads.googleads.v9.services.MediaFileService.GetMediaFile]
export type GetMediaFileRequest = {
  // Required. The resource name of the media file to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [MediaFileService.MutateMediaFiles][google.ads.googleads.v9.services.MediaFileService.MutateMediaFiles]
export type MutateMediaFilesRequest = {
  // Required. The ID of the customer whose media files are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual media file.
  //
  // Behaviors: REQUIRED
  operations: MediaFileOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation to create media file.
export type MediaFileOperation = {
  // Create operation: No resource name is expected for the new media file.
  create?: googleadsgoogleadsv9resources_MediaFile;
};

// A media file.
export type googleadsgoogleadsv9resources_MediaFile = {
  // Immutable. The resource name of the media file.
  // Media file resource names have the form:
  // `customers/{customer_id}/mediaFiles/{media_file_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the media file.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Immutable. Type of the media file.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_MediaTypeEnum_MediaType | undefined;
  // Output only. The mime type of the media file.
  //
  // Behaviors: OUTPUT_ONLY
  mimeType: googleadsgoogleadsv9enums_MimeTypeEnum_MimeType | undefined;
  // Immutable. The URL of where the original media file was downloaded from (or a file
  // name). Only used for media of type AUDIO and IMAGE.
  //
  // Behaviors: IMMUTABLE
  sourceUrl?: string;
  // Immutable. The name of the media file. The name can be used by clients to help
  // identify previously uploaded media.
  //
  // Behaviors: IMMUTABLE
  name?: string;
  // Output only. The size of the media file in bytes.
  //
  // Behaviors: OUTPUT_ONLY
  fileSize?: number;
  // Immutable. Encapsulates an Image.
  //
  // Behaviors: IMMUTABLE
  image?: googleadsgoogleadsv9resources_MediaImage;
  // Immutable. A ZIP archive media the content of which contains HTML5 assets.
  //
  // Behaviors: IMMUTABLE
  mediaBundle?: googleadsgoogleadsv9resources_MediaBundle;
  // Output only. Encapsulates an Audio.
  //
  // Behaviors: OUTPUT_ONLY
  audio?: googleadsgoogleadsv9resources_MediaAudio;
  // Immutable. Encapsulates a Video.
  //
  // Behaviors: IMMUTABLE
  video?: googleadsgoogleadsv9resources_MediaVideo;
};

// The type of media.
export type googleadsgoogleadsv9enums_MediaTypeEnum_MediaType =
  // The media type has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Static image, used for image ad.
  | "IMAGE"
  // Small image, used for map ad.
  | "ICON"
  // ZIP file, used in fields of template ads.
  | "MEDIA_BUNDLE"
  // Audio file.
  | "AUDIO"
  // Video file.
  | "VIDEO"
  // Animated image, such as animated GIF.
  | "DYNAMIC_IMAGE";
// The mime type
export type googleadsgoogleadsv9enums_MimeTypeEnum_MimeType =
  // The mime type has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // MIME type of image/jpeg.
  | "IMAGE_JPEG"
  // MIME type of image/gif.
  | "IMAGE_GIF"
  // MIME type of image/png.
  | "IMAGE_PNG"
  // MIME type of application/x-shockwave-flash.
  | "FLASH"
  // MIME type of text/html.
  | "TEXT_HTML"
  // MIME type of application/pdf.
  | "PDF"
  // MIME type of application/msword.
  | "MSWORD"
  // MIME type of application/vnd.ms-excel.
  | "MSEXCEL"
  // MIME type of application/rtf.
  | "RTF"
  // MIME type of audio/wav.
  | "AUDIO_WAV"
  // MIME type of audio/mp3.
  | "AUDIO_MP3"
  // MIME type of application/x-html5-ad-zip.
  | "HTML5_AD_ZIP";
// Encapsulates an Image.
export type googleadsgoogleadsv9resources_MediaImage = {
  // Immutable. Raw image data.
  //
  // Behaviors: IMMUTABLE
  data?: string;
  // Output only. The url to the full size version of the image.
  //
  // Behaviors: OUTPUT_ONLY
  fullSizeImageUrl?: string;
  // Output only. The url to the preview size version of the image.
  //
  // Behaviors: OUTPUT_ONLY
  previewSizeImageUrl?: string;
};

// Represents a ZIP archive media the content of which contains HTML5 assets.
export type googleadsgoogleadsv9resources_MediaBundle = {
  // Immutable. Raw zipped data.
  //
  // Behaviors: IMMUTABLE
  data?: string;
  // Output only. The url to access the uploaded zipped data.
  // E.g. https://tpc.googlesyndication.com/simgad/123
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  url?: string;
};

// Encapsulates an Audio.
export type googleadsgoogleadsv9resources_MediaAudio = {
  // Output only. The duration of the Audio in milliseconds.
  //
  // Behaviors: OUTPUT_ONLY
  adDurationMillis?: number;
};

// Encapsulates a Video.
export type googleadsgoogleadsv9resources_MediaVideo = {
  // Output only. The duration of the Video in milliseconds.
  //
  // Behaviors: OUTPUT_ONLY
  adDurationMillis?: number;
  // Immutable. The YouTube video ID (as seen in YouTube URLs). Adding prefix
  // "https://www.youtube.com/watch?v=" to this ID will get the YouTube
  // streaming URL for this video.
  //
  // Behaviors: IMMUTABLE
  youtubeVideoId?: string;
  // Output only. The Advertising Digital Identification code for this video, as defined by
  // the American Association of Advertising Agencies, used mainly for
  // television commercials.
  //
  // Behaviors: OUTPUT_ONLY
  advertisingIdCode?: string;
  // Output only. The Industry Standard Commercial Identifier code for this video, used
  // mainly for television commercials.
  //
  // Behaviors: OUTPUT_ONLY
  isciCode?: string;
};

// Response message for a media file mutate.
export type MutateMediaFilesResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateMediaFileResult[] | undefined;
};

// The result for the media file mutate.
export type MutateMediaFileResult = {
  // The resource name returned for successful operations.
  resourceName: string | undefined;
  // The mutated media file with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  mediaFile: googleadsgoogleadsv9resources_MediaFile | undefined;
};

// Service to manage media files.
export interface MediaFileService {
  // Returns the requested media file in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetMediaFile(request: GetMediaFileRequest): Promise<googleadsgoogleadsv9resources_MediaFile>;
  // Creates media files. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [ImageError]()
  // [InternalError]()
  // [MediaBundleError]()
  // [MediaFileError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateMediaFiles(request: MutateMediaFilesRequest): Promise<MutateMediaFilesResponse>;
}

export function createMediaFileServiceClient(
  handler: RequestHandler
): MediaFileService {
  return {
    GetMediaFile(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_MediaFile>;
    },
    MutateMediaFiles(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/mediaFiles:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateMediaFilesResponse>;
    },
  };
}
// Request message for [UserDataService.UploadUserData][google.ads.googleads.v9.services.UserDataService.UploadUserData]
export type UploadUserDataRequest = {
  // Required. The ID of the customer for which to update the user data.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to be done.
  //
  // Behaviors: REQUIRED
  operations: UserDataOperation[] | undefined;
  // Metadata for data updates to a Customer Match user list.
  customerMatchUserListMetadata?: googleadsgoogleadsv9common_CustomerMatchUserListMetadata;
};

// Operation to be made for the UploadUserDataRequest.
export type UserDataOperation = {
  // The list of user data to be appended to the user list.
  create?: googleadsgoogleadsv9common_UserData;
  // The list of user data to be removed from the user list.
  remove?: googleadsgoogleadsv9common_UserData;
};

// User data holding user identifiers and attributes.
export type googleadsgoogleadsv9common_UserData = {
  // User identification info. Required.
  userIdentifiers: googleadsgoogleadsv9common_UserIdentifier[] | undefined;
  // Additional transactions/attributes associated with the user.
  // Required when updating store sales data.
  transactionAttribute: googleadsgoogleadsv9common_TransactionAttribute | undefined;
  // Additional attributes associated with the user. Required when updating
  // customer match attributes. These have an expiration of 540 days.
  userAttribute: googleadsgoogleadsv9common_UserAttribute | undefined;
};

// Attribute of the store sales transaction.
export type googleadsgoogleadsv9common_TransactionAttribute = {
  // Timestamp when transaction occurred. Required.
  // The format is "YYYY-MM-DD HH:MM:SS[+/-HH:MM]", where [+/-HH:MM] is an
  // optional timezone offset from UTC. If the offset is absent, the API will
  // use the account's timezone as default.
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30+03:00"
  transactionDateTime?: string;
  // Transaction amount in micros. Required.
  // Transaction amount in micros needs to be greater than 1000.
  // If item Attributes are provided, it represents the total value of the
  // items, after multiplying the unit price per item by the quantity provided
  // in the ItemAttributes.
  transactionAmountMicros?: number;
  // Transaction currency code. ISO 4217 three-letter code is used. Required.
  currencyCode?: string;
  // The resource name of conversion action to report conversions to.
  // Required.
  conversionAction?: string;
  // Transaction order id.
  // Accessible only to customers on the allow-list.
  orderId?: string;
  // Store attributes of the transaction.
  // Accessible only to customers on the allow-list.
  storeAttribute: googleadsgoogleadsv9common_StoreAttribute | undefined;
  // Value of the custom variable for each transaction.
  // Accessible only to customers on the allow-list.
  customValue?: string;
  // Item attributes of the transaction.
  itemAttribute: googleadsgoogleadsv9common_ItemAttribute | undefined;
};

// Store attributes of the transaction.
export type googleadsgoogleadsv9common_StoreAttribute = {
  // Store code from
  // https://support.google.com/business/answer/3370250#storecode
  storeCode?: string;
};

// Item attributes of the transaction.
export type googleadsgoogleadsv9common_ItemAttribute = {
  // A unique identifier of a product. It can be either the Merchant Center Item
  // ID or GTIN (Global Trade Item Number).
  itemId: string | undefined;
  // ID of the Merchant Center Account.
  merchantId?: number;
  // Common Locale Data Repository (CLDR) territory code of the country
  // associated with the feed where your items are uploaded. See
  // https://developers.google.com/google-ads/api/reference/data/codes-formats#country-codes
  // for more information.
  countryCode: string | undefined;
  // ISO 639-1 code of the language associated with the feed where your items
  // are uploaded
  languageCode: string | undefined;
  // The number of items sold. Defaults to 1 if not set.
  quantity: number | undefined;
};

// User attribute, can only be used with CUSTOMER_MATCH_WITH_ATTRIBUTES job
// type.
export type googleadsgoogleadsv9common_UserAttribute = {
  // Advertiser defined lifetime value for the user.
  lifetimeValueMicros?: number;
  // Advertiser defined lifetime value bucket for the user. The valid range for
  // a lifetime value bucket is from 1 (low) to 10 (high), except for remove
  // operation where 0 will also be accepted.
  lifetimeValueBucket?: number;
  // Timestamp of the last purchase made by the user.
  // The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an
  // optional timezone offset from UTC. If the offset is absent, the API will
  // use the account's timezone as default.
  lastPurchaseDateTime: string | undefined;
  // Advertiser defined average number of purchases that are made by the user in
  // a 30 day period.
  averagePurchaseCount: number | undefined;
  // Advertiser defined average purchase value in micros for the user.
  averagePurchaseValueMicros: number | undefined;
  // Timestamp when the user was acquired.
  // The format is YYYY-MM-DD HH:MM:SS[+/-HH:MM], where [+/-HH:MM] is an
  // optional timezone offset from UTC. If the offset is absent, the API will
  // use the account's timezone as default.
  acquisitionDateTime: string | undefined;
  // The shopping loyalty related data. Shopping utilizes this data to provide
  // users with a better experience. Accessible only to merchants on the
  // allow-list with users’ consent.
  shoppingLoyalty?: googleadsgoogleadsv9common_ShoppingLoyalty;
};

// The shopping loyalty related data. Shopping utilizes this data to provide
// users with a better experience.
// Accessible only to merchants on the allow-list.
export type googleadsgoogleadsv9common_ShoppingLoyalty = {
  // The membership tier. It is a free-form string as each merchant may have
  // their own loyalty system. For example, it could be a number from 1 to 10,
  // or a string such as "Golden" or "Silver", or even empty string "".
  loyaltyTier?: string;
};

// Metadata for customer match user list.
export type googleadsgoogleadsv9common_CustomerMatchUserListMetadata = {
  // The resource name of remarketing list to update data.
  // Required for job of CUSTOMER_MATCH_USER_LIST type.
  userList?: string;
};

// Response message for [UserDataService.UploadUserData][google.ads.googleads.v9.services.UserDataService.UploadUserData]
export type UploadUserDataResponse = {
  // The date time at which the request was received by API, formatted as
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  uploadDateTime?: string;
  // Number of upload data operations received by API.
  receivedOperationsCount?: number;
};

// Service to manage user data uploads.
export interface UserDataService {
  // Uploads the given user data.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [OfflineUserDataJobError]()
  // [QuotaError]()
  // [RequestError]()
  // [UserDataError]()
  UploadUserData(request: UploadUserDataRequest): Promise<UploadUserDataResponse>;
}

export function createUserDataServiceClient(
  handler: RequestHandler
): UserDataService {
  return {
    UploadUserData(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:uploadUserData`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<UploadUserDataResponse>;
    },
  };
}
// Request message for [AdScheduleViewService.GetAdScheduleView][google.ads.googleads.v9.services.AdScheduleViewService.GetAdScheduleView].
export type GetAdScheduleViewRequest = {
  // Required. The resource name of the ad schedule view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch ad schedule views.
export interface AdScheduleViewService {
  // Returns the requested ad schedule view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdScheduleView(request: GetAdScheduleViewRequest): Promise<googleadsgoogleadsv9resources_AdScheduleView>;
}

export function createAdScheduleViewServiceClient(
  handler: RequestHandler
): AdScheduleViewService {
  return {
    GetAdScheduleView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdScheduleView>;
    },
  };
}
// An ad schedule view summarizes the performance of campaigns by
// AdSchedule criteria.
export type googleadsgoogleadsv9resources_AdScheduleView = {
  // Output only. The resource name of the ad schedule view.
  // AdSchedule view resource names have the form:
  // `customers/{customer_id}/adScheduleViews/{campaign_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [AdService.GetAd][google.ads.googleads.v9.services.AdService.GetAd].
export type GetAdRequest = {
  // Required. The resource name of the ad to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdService.MutateAds][google.ads.googleads.v9.services.AdService.MutateAds].
export type MutateAdsRequest = {
  // Required. The ID of the customer whose ads are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ads.
  //
  // Behaviors: REQUIRED
  operations: AdOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single update operation on an ad.
export type AdOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Configuration for how policies are validated.
  policyValidationParameter: googleadsgoogleadsv9common_PolicyValidationParameter | undefined;
  // Update operation: The ad is expected to have a valid resource name
  // in this format:
  // `customers/{customer_id}/ads/{ad_id}`
  update?: googleadsgoogleadsv9resources_Ad;
};

// Parameter for controlling how policy exemption is done.
export type googleadsgoogleadsv9common_PolicyValidationParameter = {
  // The list of policy topics that should not cause a PolicyFindingError to
  // be reported. This field is currently only compatible with Enhanced Text Ad.
  // It corresponds to the PolicyTopicEntry.topic field.
  // Resources violating these policies will be saved, but will not be eligible
  // to serve. They may begin serving at a later time due to a change in
  // policies, re-review of the resource, or a change in advertiser
  // certificates.
  ignorablePolicyTopics: string[] | undefined;
  // The list of policy violation keys that should not cause a
  // PolicyViolationError to be reported. Not all policy violations are
  // exemptable, please refer to the is_exemptible field in the returned
  // PolicyViolationError.
  // Resources violating these polices will be saved, but will not be eligible
  // to serve. They may begin serving at a later time due to a change in
  // policies, re-review of the resource, or a change in advertiser
  // certificates.
  exemptPolicyViolationKeys: googleadsgoogleadsv9common_PolicyViolationKey[] | undefined;
};

// Key of the violation. The key is used for referring to a violation
// when filing an exemption request.
export type googleadsgoogleadsv9common_PolicyViolationKey = {
  // Unique ID of the violated policy.
  policyName?: string;
  // The text that violates the policy if specified.
  // Otherwise, refers to the policy in general
  // (e.g., when requesting to be exempt from the whole policy).
  // If not specified for criterion exemptions, the whole policy is implied.
  // Must be specified for ad exemptions.
  violatingText?: string;
};

// An ad.
export type googleadsgoogleadsv9resources_Ad = {
  // Immutable. The resource name of the ad.
  // Ad resource names have the form:
  // `customers/{customer_id}/ads/{ad_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the ad.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The list of possible final URLs after all cross-domain redirects for the
  // ad.
  finalUrls: string[] | undefined;
  // A list of final app URLs that will be used on mobile if the user has the
  // specific app installed.
  finalAppUrls: googleadsgoogleadsv9common_FinalAppUrl[] | undefined;
  // The list of possible final mobile URLs after all cross-domain redirects
  // for the ad.
  finalMobileUrls: string[] | undefined;
  // The URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // The suffix to use when constructing a final URL.
  finalUrlSuffix?: string;
  // The list of mappings that can be used to substitute custom parameter tags
  // in a `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
  // For mutates, please use url custom parameter operations.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // The URL that appears in the ad description for some ad formats.
  displayUrl?: string;
  // Output only. The type of ad.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_AdTypeEnum_AdType | undefined;
  // Output only. Indicates if this ad was automatically added by Google Ads and not by a
  // user. For example, this could happen when ads are automatically created as
  // suggestions for new ads based on knowledge of how existing ads are
  // performing.
  //
  // Behaviors: OUTPUT_ONLY
  addedByGoogleAds?: boolean;
  // The device preference for the ad. You can only specify a preference for
  // mobile devices. When this preference is set the ad will be preferred over
  // other ads when being displayed on a mobile device. The ad can still be
  // displayed on other device types, e.g. if no other ads are available.
  // If unspecified (no device preference), all devices are targeted.
  // This is only supported by some ad types.
  devicePreference: googleadsgoogleadsv9enums_DeviceEnum_Device | undefined;
  // Additional URLs for the ad that are tagged with a unique identifier that
  // can be referenced from other fields in the ad.
  urlCollections: googleadsgoogleadsv9common_UrlCollection[] | undefined;
  // Immutable. The name of the ad. This is only used to be able to identify the ad. It
  // does not need to be unique and does not affect the served ad. The name
  // field is currently only supported for DisplayUploadAd, ImageAd,
  // ShoppingComparisonListingAd and VideoAd.
  //
  // Behaviors: IMMUTABLE
  name?: string;
  // Output only. If this ad is system managed, then this field will indicate the source.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  systemManagedResourceSource: googleadsgoogleadsv9enums_SystemManagedResourceSourceEnum_SystemManagedResourceSource | undefined;
  // Immutable. Details pertaining to a text ad.
  //
  // Behaviors: IMMUTABLE
  textAd?: googleadsgoogleadsv9common_TextAdInfo;
  // Details pertaining to an expanded text ad.
  expandedTextAd?: googleadsgoogleadsv9common_ExpandedTextAdInfo;
  // Details pertaining to a call ad.
  callAd?: googleadsgoogleadsv9common_CallAdInfo;
  // Immutable. Details pertaining to an Expanded Dynamic Search Ad.
  // This type of ad has its headline, final URLs, and display URL
  // auto-generated at serving time according to domain name specific
  // information provided by `dynamic_search_ads_setting` linked at the
  // campaign level.
  //
  // Behaviors: IMMUTABLE
  expandedDynamicSearchAd?: googleadsgoogleadsv9common_ExpandedDynamicSearchAdInfo;
  // Details pertaining to a hotel ad.
  hotelAd?: googleadsgoogleadsv9common_HotelAdInfo;
  // Details pertaining to a Smart Shopping ad.
  shoppingSmartAd?: googleadsgoogleadsv9common_ShoppingSmartAdInfo;
  // Details pertaining to a Shopping product ad.
  shoppingProductAd?: googleadsgoogleadsv9common_ShoppingProductAdInfo;
  // Immutable. Details pertaining to a Gmail ad.
  //
  // Behaviors: IMMUTABLE
  gmailAd?: googleadsgoogleadsv9common_GmailAdInfo;
  // Immutable. Details pertaining to an Image ad.
  //
  // Behaviors: IMMUTABLE
  imageAd?: googleadsgoogleadsv9common_ImageAdInfo;
  // Details pertaining to a Video ad.
  videoAd?: googleadsgoogleadsv9common_VideoAdInfo;
  // Details pertaining to a Video responsive ad.
  videoResponsiveAd?: googleadsgoogleadsv9common_VideoResponsiveAdInfo;
  // Details pertaining to a responsive search ad.
  responsiveSearchAd?: googleadsgoogleadsv9common_ResponsiveSearchAdInfo;
  // Details pertaining to a legacy responsive display ad.
  legacyResponsiveDisplayAd?: googleadsgoogleadsv9common_LegacyResponsiveDisplayAdInfo;
  // Details pertaining to an app ad.
  appAd?: googleadsgoogleadsv9common_AppAdInfo;
  // Immutable. Details pertaining to a legacy app install ad.
  //
  // Behaviors: IMMUTABLE
  legacyAppInstallAd?: googleadsgoogleadsv9common_LegacyAppInstallAdInfo;
  // Details pertaining to a responsive display ad.
  responsiveDisplayAd?: googleadsgoogleadsv9common_ResponsiveDisplayAdInfo;
  // Details pertaining to a local ad.
  localAd?: googleadsgoogleadsv9common_LocalAdInfo;
  // Details pertaining to a display upload ad.
  displayUploadAd?: googleadsgoogleadsv9common_DisplayUploadAdInfo;
  // Details pertaining to an app engagement ad.
  appEngagementAd?: googleadsgoogleadsv9common_AppEngagementAdInfo;
  // Details pertaining to a Shopping Comparison Listing ad.
  shoppingComparisonListingAd?: googleadsgoogleadsv9common_ShoppingComparisonListingAdInfo;
  // Details pertaining to a Smart campaign ad.
  smartCampaignAd?: googleadsgoogleadsv9common_SmartCampaignAdInfo;
  // Details pertaining to an app pre-registration ad.
  appPreRegistrationAd?: googleadsgoogleadsv9common_AppPreRegistrationAdInfo;
};

// A URL for deep linking into an app for the given operating system.
export type googleadsgoogleadsv9common_FinalAppUrl = {
  // The operating system targeted by this URL. Required.
  osType: googleadsgoogleadsv9enums_AppUrlOperatingSystemTypeEnum_AppUrlOperatingSystemType | undefined;
  // The app deep link URL. Deep links specify a location in an app that
  // corresponds to the content you'd like to show, and should be of the form
  // {scheme}://{host_path}
  // The scheme identifies which app to open. For your app, you can use a custom
  // scheme that starts with the app's name. The host and path specify the
  // unique location in the app where your content exists.
  // Example: "exampleapp://productid_1234". Required.
  url?: string;
};

// Operating System
export type googleadsgoogleadsv9enums_AppUrlOperatingSystemTypeEnum_AppUrlOperatingSystemType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The Apple IOS operating system.
  | "IOS"
  // The Android operating system.
  | "ANDROID";
// A mapping that can be used by custom parameter tags in a
// `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
export type googleadsgoogleadsv9common_CustomParameter = {
  // The key matching the parameter tag name.
  key?: string;
  // The value to be substituted.
  value?: string;
};

// The possible types of an ad.
export type googleadsgoogleadsv9enums_AdTypeEnum_AdType =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The ad is a text ad.
  | "TEXT_AD"
  // The ad is an expanded text ad.
  | "EXPANDED_TEXT_AD"
  // The ad is an expanded dynamic search ad.
  | "EXPANDED_DYNAMIC_SEARCH_AD"
  // The ad is a hotel ad.
  | "HOTEL_AD"
  // The ad is a Smart Shopping ad.
  | "SHOPPING_SMART_AD"
  // The ad is a standard Shopping ad.
  | "SHOPPING_PRODUCT_AD"
  // The ad is a video ad.
  | "VIDEO_AD"
  // This ad is a Gmail ad.
  | "GMAIL_AD"
  // This ad is an Image ad.
  | "IMAGE_AD"
  // The ad is a responsive search ad.
  | "RESPONSIVE_SEARCH_AD"
  // The ad is a legacy responsive display ad.
  | "LEGACY_RESPONSIVE_DISPLAY_AD"
  // The ad is an app ad.
  | "APP_AD"
  // The ad is a legacy app install ad.
  | "LEGACY_APP_INSTALL_AD"
  // The ad is a responsive display ad.
  | "RESPONSIVE_DISPLAY_AD"
  // The ad is a local ad.
  | "LOCAL_AD"
  // The ad is a display upload ad with the HTML5_UPLOAD_AD product type.
  | "HTML5_UPLOAD_AD"
  // The ad is a display upload ad with one of the DYNAMIC_HTML5_* product
  // types.
  | "DYNAMIC_HTML5_AD"
  // The ad is an app engagement ad.
  | "APP_ENGAGEMENT_AD"
  // The ad is a Shopping Comparison Listing ad.
  | "SHOPPING_COMPARISON_LISTING_AD"
  // Video bumper ad.
  | "VIDEO_BUMPER_AD"
  // Video non-skippable in-stream ad.
  | "VIDEO_NON_SKIPPABLE_IN_STREAM_AD"
  // Video outstream ad.
  | "VIDEO_OUTSTREAM_AD"
  // Video TrueView in-display ad.
  | "VIDEO_TRUEVIEW_DISCOVERY_AD"
  // Video TrueView in-stream ad.
  | "VIDEO_TRUEVIEW_IN_STREAM_AD"
  // Video responsive ad.
  | "VIDEO_RESPONSIVE_AD"
  // Smart campaign ad.
  | "SMART_CAMPAIGN_AD"
  // Call ad.
  | "CALL_AD"
  // Universal app pre-registration ad.
  | "APP_PRE_REGISTRATION_AD";
// Collection of urls that is tagged with a unique identifier.
export type googleadsgoogleadsv9common_UrlCollection = {
  // Unique identifier for this UrlCollection instance.
  urlCollectionId?: string;
  // A list of possible final URLs.
  finalUrls: string[] | undefined;
  // A list of possible final mobile URLs.
  finalMobileUrls: string[] | undefined;
  // URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
};

// Enum listing the possible system managed entity sources.
export type googleadsgoogleadsv9enums_SystemManagedResourceSourceEnum_SystemManagedResourceSource =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Generated ad variations experiment ad.
  | "AD_VARIATIONS";
// A text ad.
export type googleadsgoogleadsv9common_TextAdInfo = {
  // The headline of the ad.
  headline?: string;
  // The first line of the ad's description.
  description1?: string;
  // The second line of the ad's description.
  description2?: string;
};

// An expanded text ad.
export type googleadsgoogleadsv9common_ExpandedTextAdInfo = {
  // The first part of the ad's headline.
  headlinePart1?: string;
  // The second part of the ad's headline.
  headlinePart2?: string;
  // The third part of the ad's headline.
  headlinePart3?: string;
  // The description of the ad.
  description?: string;
  // The second description of the ad.
  description2?: string;
  // The text that can appear alongside the ad's displayed URL.
  path1?: string;
  // Additional text that can appear alongside the ad's displayed URL.
  path2?: string;
};

// A call ad.
export type googleadsgoogleadsv9common_CallAdInfo = {
  // The country code in the ad.
  countryCode: string | undefined;
  // The phone number in the ad.
  phoneNumber: string | undefined;
  // The business name in the ad.
  businessName: string | undefined;
  // First headline in the ad.
  headline1: string | undefined;
  // Second headline in the ad.
  headline2: string | undefined;
  // The first line of the ad's description.
  description1: string | undefined;
  // The second line of the ad's description.
  description2: string | undefined;
  // Whether to enable call tracking for the creative. Enabling call
  // tracking also enables call conversions.
  callTracked: boolean | undefined;
  // Whether to disable call conversion for the creative.
  // If set to `true`, disables call conversions even when `call_tracked` is
  // `true`.
  // If `call_tracked` is `false`, this field is ignored.
  disableCallConversion: boolean | undefined;
  // The URL to be used for phone number verification.
  phoneNumberVerificationUrl: string | undefined;
  // The conversion action to attribute a call conversion to. If not set a
  // default conversion action is used. This field only has effect if
  // `call_tracked` is set to `true`. Otherwise this field is ignored.
  conversionAction: string | undefined;
  // The call conversion behavior of this call ad. It can use its own call
  // conversion setting, inherit the account level setting, or be disabled.
  conversionReportingState: googleadsgoogleadsv9enums_CallConversionReportingStateEnum_CallConversionReportingState | undefined;
  // First part of text that can be appended to the URL in the ad. Optional.
  path1: string | undefined;
  // Second part of text that can be appended to the URL in the ad. This field
  // can only be set when `path1` is also set. Optional.
  path2: string | undefined;
};

// Possible data types for a call conversion action state.
export type googleadsgoogleadsv9enums_CallConversionReportingStateEnum_CallConversionReportingState =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Call conversion action is disabled.
  | "DISABLED"
  // Call conversion action will use call conversion type set at the
  // account level.
  | "USE_ACCOUNT_LEVEL_CALL_CONVERSION_ACTION"
  // Call conversion action will use call conversion type set at the resource
  // (call only ads/call extensions) level.
  | "USE_RESOURCE_LEVEL_CALL_CONVERSION_ACTION";
// An expanded dynamic search ad.
export type googleadsgoogleadsv9common_ExpandedDynamicSearchAdInfo = {
  // The description of the ad.
  description?: string;
  // The second description of the ad.
  description2?: string;
};

// A hotel ad.
export type googleadsgoogleadsv9common_HotelAdInfo = {
};

// A Smart Shopping ad.
export type googleadsgoogleadsv9common_ShoppingSmartAdInfo = {
};

// A standard Shopping ad.
export type googleadsgoogleadsv9common_ShoppingProductAdInfo = {
};

// A Gmail ad.
export type googleadsgoogleadsv9common_GmailAdInfo = {
  // The Gmail teaser.
  teaser: googleadsgoogleadsv9common_GmailTeaser | undefined;
  // The MediaFile resource name of the header image. Valid image types are GIF,
  // JPEG and PNG. The minimum size is 300x100 pixels and the aspect ratio must
  // be between 3:1 and 5:1 (+-1%).
  headerImage?: string;
  // The MediaFile resource name of the marketing image. Valid image types are
  // GIF, JPEG and PNG. The image must either be landscape with a minimum size
  // of 600x314 pixels and aspect ratio of 600:314 (+-1%) or square with a
  // minimum size of 300x300 pixels and aspect ratio of 1:1 (+-1%)
  marketingImage?: string;
  // Headline of the marketing image.
  marketingImageHeadline?: string;
  // Description of the marketing image.
  marketingImageDescription?: string;
  // Display-call-to-action of the marketing image.
  marketingImageDisplayCallToAction: googleadsgoogleadsv9common_DisplayCallToAction | undefined;
  // Product images. Up to 15 images are supported.
  productImages: googleadsgoogleadsv9common_ProductImage[] | undefined;
  // Product videos. Up to 7 videos are supported. At least one product video
  // or a marketing image must be specified.
  productVideos: googleadsgoogleadsv9common_ProductVideo[] | undefined;
};

// Gmail teaser data. The teaser is a small header that acts as an invitation
// to view the rest of the ad (the body).
export type googleadsgoogleadsv9common_GmailTeaser = {
  // Headline of the teaser.
  headline?: string;
  // Description of the teaser.
  description?: string;
  // Business name of the advertiser.
  businessName?: string;
  // The MediaFile resource name of the logo image. Valid image types are GIF,
  // JPEG and PNG. The minimum size is 144x144 pixels and the aspect ratio must
  // be 1:1 (+-1%).
  logoImage?: string;
};

// Data for display call to action. The call to action is a piece of the ad
// that prompts the user to do something. Like clicking a link or making a phone
// call.
export type googleadsgoogleadsv9common_DisplayCallToAction = {
  // Text for the display-call-to-action.
  text?: string;
  // Text color for the display-call-to-action in hexadecimal, e.g. #ffffff for
  // white.
  textColor?: string;
  // Identifies the URL collection in the `ad.url_collections` field. If not
  // set, the URL defaults to `final_url`.
  urlCollectionId?: string;
};

// Product image specific data.
export type googleadsgoogleadsv9common_ProductImage = {
  // The MediaFile resource name of the product image. Valid image types are
  // GIF, JPEG and PNG. The minimum size is 300x300 pixels and the aspect ratio
  // must be 1:1 (+-1%).
  productImage?: string;
  // Description of the product.
  description?: string;
  // Display-call-to-action of the product image.
  displayCallToAction: googleadsgoogleadsv9common_DisplayCallToAction | undefined;
};

// Product video specific data.
export type googleadsgoogleadsv9common_ProductVideo = {
  // The MediaFile resource name of a video which must be hosted on YouTube.
  productVideo?: string;
};

// An image ad.
export type googleadsgoogleadsv9common_ImageAdInfo = {
  // Width in pixels of the full size image.
  pixelWidth?: number;
  // Height in pixels of the full size image.
  pixelHeight?: number;
  // URL of the full size image.
  imageUrl?: string;
  // Width in pixels of the preview size image.
  previewPixelWidth?: number;
  // Height in pixels of the preview size image.
  previewPixelHeight?: number;
  // URL of the preview size image.
  previewImageUrl?: string;
  // The mime type of the image.
  mimeType: googleadsgoogleadsv9enums_MimeTypeEnum_MimeType | undefined;
  // The name of the image. If the image was created from a MediaFile, this is
  // the MediaFile's name. If the image was created from bytes, this is empty.
  name?: string;
  // The MediaFile resource to use for the image.
  mediaFile?: string;
  // Raw image data as bytes.
  data?: string;
  // An ad ID to copy the image from.
  adIdToCopyImageFrom?: number;
};

// A video ad.
export type googleadsgoogleadsv9common_VideoAdInfo = {
  // The YouTube video assets used for the ad.
  video: googleadsgoogleadsv9common_AdVideoAsset | undefined;
  // Video TrueView in-stream ad format.
  inStream?: googleadsgoogleadsv9common_VideoTrueViewInStreamAdInfo;
  // Video bumper in-stream ad format.
  bumper?: googleadsgoogleadsv9common_VideoBumperInStreamAdInfo;
  // Video out-stream ad format.
  outStream?: googleadsgoogleadsv9common_VideoOutstreamAdInfo;
  // Video non-skippable in-stream ad format.
  nonSkippable?: googleadsgoogleadsv9common_VideoNonSkippableInStreamAdInfo;
  // Video TrueView discovery ad format.
  discovery?: googleadsgoogleadsv9common_VideoTrueViewDiscoveryAdInfo;
};

// A video asset used inside an ad.
export type googleadsgoogleadsv9common_AdVideoAsset = {
  // The Asset resource name of this video.
  asset?: string;
};

// Representation of video TrueView in-stream ad format (ad shown during video
// playback, often at beginning, which displays a skip button a few seconds into
// the video).
export type googleadsgoogleadsv9common_VideoTrueViewInStreamAdInfo = {
  // Label on the CTA (call-to-action) button taking the user to the video ad's
  // final URL.
  // Required for TrueView for action campaigns, optional otherwise.
  actionButtonLabel: string | undefined;
  // Additional text displayed with the CTA (call-to-action) button to give
  // context and encourage clicking on the button.
  actionHeadline: string | undefined;
  // The image assets of the companion banner used with the ad.
  companionBanner: googleadsgoogleadsv9common_AdImageAsset | undefined;
};

// An image asset used inside an ad.
export type googleadsgoogleadsv9common_AdImageAsset = {
  // The Asset resource name of this image.
  asset?: string;
};

// Representation of video bumper in-stream ad format (very short in-stream
// non-skippable video ad).
export type googleadsgoogleadsv9common_VideoBumperInStreamAdInfo = {
  // The image assets of the companion banner used with the ad.
  companionBanner: googleadsgoogleadsv9common_AdImageAsset | undefined;
};

// Representation of video out-stream ad format (ad shown alongside a feed
// with automatic playback, without sound).
export type googleadsgoogleadsv9common_VideoOutstreamAdInfo = {
  // The headline of the ad.
  headline: string | undefined;
  // The description line.
  description: string | undefined;
};

// Representation of video non-skippable in-stream ad format (15 second
// in-stream non-skippable video ad).
export type googleadsgoogleadsv9common_VideoNonSkippableInStreamAdInfo = {
  // The image assets of the companion banner used with the ad.
  companionBanner: googleadsgoogleadsv9common_AdImageAsset | undefined;
  // Label on the "Call To Action" button taking the user to the video ad's
  // final URL.
  actionButtonLabel: string | undefined;
  // Additional text displayed with the "Call To Action" button to give
  // context and encourage clicking on the button.
  actionHeadline: string | undefined;
};

// Representation of video TrueView discovery ad format.
export type googleadsgoogleadsv9common_VideoTrueViewDiscoveryAdInfo = {
  // The headline of the ad.
  headline: string | undefined;
  // First text line for a TrueView video discovery ad.
  description1: string | undefined;
  // Second text line for a TrueView video discovery ad.
  description2: string | undefined;
  // Video thumbnail image to use.
  thumbnail: googleadsgoogleadsv9enums_VideoThumbnailEnum_VideoThumbnail | undefined;
};

// Enum listing the possible types of a video thumbnail.
export type googleadsgoogleadsv9enums_VideoThumbnailEnum_VideoThumbnail =
  // The type has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The default thumbnail. Can be auto-generated or user-uploaded.
  | "DEFAULT_THUMBNAIL"
  // Thumbnail 1, generated from the video.
  | "THUMBNAIL_1"
  // Thumbnail 2, generated from the video.
  | "THUMBNAIL_2"
  // Thumbnail 3, generated from the video.
  | "THUMBNAIL_3";
// A video responsive ad.
export type googleadsgoogleadsv9common_VideoResponsiveAdInfo = {
  // List of text assets used for the short headline, e.g. the "Call To Action"
  // banner. Currently, only a single value for the short headline is supported.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets used for the long headline.
  // Currently, only a single value for the long headline is supported.
  longHeadlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets used for the description.
  // Currently, only a single value for the description is supported.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets used for the button, e.g. the "Call To Action" button.
  // Currently, only a single value for the button is supported.
  callToActions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of YouTube video assets used for the ad.
  // Currently, only a single value for the YouTube video asset is supported.
  videos: googleadsgoogleadsv9common_AdVideoAsset[] | undefined;
  // List of image assets used for the companion banner.
  // Currently, only a single value for the companion banner asset is supported.
  companionBanners: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
};

// A text asset used inside an ad.
export type googleadsgoogleadsv9common_AdTextAsset = {
  // Asset text.
  text?: string;
  // The pinned field of the asset. This restricts the asset to only serve
  // within this field. Multiple assets can be pinned to the same field. An
  // asset that is unpinned or pinned to a different field will not serve in a
  // field where some other asset has been pinned.
  pinnedField: googleadsgoogleadsv9enums_ServedAssetFieldTypeEnum_ServedAssetFieldType | undefined;
  // The performance label of this text asset.
  assetPerformanceLabel: googleadsgoogleadsv9enums_AssetPerformanceLabelEnum_AssetPerformanceLabel | undefined;
  // The policy summary of this text asset.
  policySummaryInfo: googleadsgoogleadsv9common_AdAssetPolicySummary | undefined;
};

// The possible asset field types.
export type googleadsgoogleadsv9enums_ServedAssetFieldTypeEnum_ServedAssetFieldType =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The asset is used in headline 1.
  | "HEADLINE_1"
  // The asset is used in headline 2.
  | "HEADLINE_2"
  // The asset is used in headline 3.
  | "HEADLINE_3"
  // The asset is used in description 1.
  | "DESCRIPTION_1"
  // The asset is used in description 2.
  | "DESCRIPTION_2";
// Enum describing the possible performance labels of an asset, usually
// computed in the context of a linkage.
export type googleadsgoogleadsv9enums_AssetPerformanceLabelEnum_AssetPerformanceLabel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // This asset does not yet have any performance informantion. This may be
  // because it is still under review.
  | "PENDING"
  // The asset has started getting impressions but the stats are not
  // statistically significant enough to get an asset performance label.
  | "LEARNING"
  // Worst performing assets.
  | "LOW"
  // Good performing assets.
  | "GOOD"
  // Best performing assets.
  | "BEST";
// Contains policy information for an asset inside an ad.
export type googleadsgoogleadsv9common_AdAssetPolicySummary = {
  // The list of policy findings for this asset.
  policyTopicEntries: googleadsgoogleadsv9common_PolicyTopicEntry[] | undefined;
  // Where in the review process this asset.
  reviewStatus: googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus | undefined;
  // The overall approval status of this asset, which is calculated based on
  // the status of its individual policy topic entries.
  approvalStatus: googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus | undefined;
};

// Policy finding attached to a resource (e.g. alcohol policy associated with
// a site that sells alcohol).
// Each PolicyTopicEntry has a topic that indicates the specific ads policy
// the entry is about and a type to indicate the effect that the entry will have
// on serving. It may optionally have one or more evidences that indicate the
// reason for the finding. It may also optionally have one or more constraints
// that provide details about how serving may be restricted.
export type googleadsgoogleadsv9common_PolicyTopicEntry = {
  // Policy topic this finding refers to. For example, "ALCOHOL",
  // "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible
  // policy topics is not fixed for a particular API version and may change
  // at any time.
  topic?: string;
  // Describes the negative or positive effect this policy will have on serving.
  type: googleadsgoogleadsv9enums_PolicyTopicEntryTypeEnum_PolicyTopicEntryType | undefined;
  // Additional information that explains policy finding
  // (e.g. the brand name for a trademark finding).
  evidences: googleadsgoogleadsv9common_PolicyTopicEvidence[] | undefined;
  // Indicates how serving of this resource may be affected (e.g. not serving
  // in a country).
  constraints: googleadsgoogleadsv9common_PolicyTopicConstraint[] | undefined;
};

// The possible policy topic entry types.
export type googleadsgoogleadsv9enums_PolicyTopicEntryTypeEnum_PolicyTopicEntryType =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The resource will not be served.
  | "PROHIBITED"
  // The resource will not be served under some circumstances.
  | "LIMITED"
  // The resource cannot serve at all because of the current targeting
  // criteria.
  | "FULLY_LIMITED"
  // May be of interest, but does not limit how the resource is served.
  | "DESCRIPTIVE"
  // Could increase coverage beyond normal.
  | "BROADENING"
  // Constrained for all targeted countries, but may serve in other countries
  // through area of interest.
  | "AREA_OF_INTEREST_ONLY";
// Additional information that explains a policy finding.
export type googleadsgoogleadsv9common_PolicyTopicEvidence = {
  // List of websites linked with this resource.
  websiteList?: googleadsgoogleadsv9common_PolicyTopicEvidence_WebsiteList;
  // List of evidence found in the text of a resource.
  textList?: googleadsgoogleadsv9common_PolicyTopicEvidence_TextList;
  // The language the resource was detected to be written in.
  // This is an IETF language tag such as "en-US".
  languageCode?: string;
  // The text in the destination of the resource that is causing a policy
  // finding.
  destinationTextList?: googleadsgoogleadsv9common_PolicyTopicEvidence_DestinationTextList;
  // Mismatch between the destinations of a resource's URLs.
  destinationMismatch?: googleadsgoogleadsv9common_PolicyTopicEvidence_DestinationMismatch;
  // Details when the destination is returning an HTTP error code or isn't
  // functional in all locations for commonly used devices.
  destinationNotWorking?: googleadsgoogleadsv9common_PolicyTopicEvidence_DestinationNotWorking;
};

// A list of websites that caused a policy finding. Used for
// ONE_WEBSITE_PER_AD_GROUP policy topic, for example. In case there are more
// than five websites, only the top five (those that appear in resources the
// most) will be listed here.
export type googleadsgoogleadsv9common_PolicyTopicEvidence_WebsiteList = {
  // Websites that caused the policy finding.
  websites: string[] | undefined;
};

// A list of fragments of text that violated a policy.
export type googleadsgoogleadsv9common_PolicyTopicEvidence_TextList = {
  // The fragments of text from the resource that caused the policy finding.
  texts: string[] | undefined;
};

// A list of strings found in a destination page that caused a policy
// finding.
export type googleadsgoogleadsv9common_PolicyTopicEvidence_DestinationTextList = {
  // List of text found in the resource's destination page.
  destinationTexts: string[] | undefined;
};

// Evidence of mismatches between the URLs of a resource.
export type googleadsgoogleadsv9common_PolicyTopicEvidence_DestinationMismatch = {
  // The set of URLs that did not match each other.
  urlTypes: googleadsgoogleadsv9enums_PolicyTopicEvidenceDestinationMismatchUrlTypeEnum_PolicyTopicEvidenceDestinationMismatchUrlType[] | undefined;
};

// The possible policy topic evidence destination mismatch url types.
export type googleadsgoogleadsv9enums_PolicyTopicEvidenceDestinationMismatchUrlTypeEnum_PolicyTopicEvidenceDestinationMismatchUrlType =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The display url.
  | "DISPLAY_URL"
  // The final url.
  | "FINAL_URL"
  // The final mobile url.
  | "FINAL_MOBILE_URL"
  // The tracking url template, with substituted desktop url.
  | "TRACKING_URL"
  // The tracking url template, with substituted mobile url.
  | "MOBILE_TRACKING_URL";
// Evidence details when the destination is returning an HTTP error
// code or isn't functional in all locations for commonly used devices.
export type googleadsgoogleadsv9common_PolicyTopicEvidence_DestinationNotWorking = {
  // The full URL that didn't work.
  expandedUrl?: string;
  // The type of device that failed to load the URL.
  device: googleadsgoogleadsv9enums_PolicyTopicEvidenceDestinationNotWorkingDeviceEnum_PolicyTopicEvidenceDestinationNotWorkingDevice | undefined;
  // The time the URL was last checked.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  lastCheckedDateTime?: string;
  // The type of DNS error.
  dnsErrorType?: googleadsgoogleadsv9enums_PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum_PolicyTopicEvidenceDestinationNotWorkingDnsErrorType;
  // The HTTP error code.
  httpErrorCode?: number;
};

// The possible policy topic evidence destination not working devices.
export type googleadsgoogleadsv9enums_PolicyTopicEvidenceDestinationNotWorkingDeviceEnum_PolicyTopicEvidenceDestinationNotWorkingDevice =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Landing page doesn't work on desktop device.
  | "DESKTOP"
  // Landing page doesn't work on Android device.
  | "ANDROID"
  // Landing page doesn't work on iOS device.
  | "IOS";
// The possible policy topic evidence destination not working DNS error types.
export type googleadsgoogleadsv9enums_PolicyTopicEvidenceDestinationNotWorkingDnsErrorTypeEnum_PolicyTopicEvidenceDestinationNotWorkingDnsErrorType =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Host name not found in DNS when fetching landing page.
  | "HOSTNAME_NOT_FOUND"
  // Google internal crawler issue when communicating with DNS. This error
  // doesn't mean the landing page doesn't work. Google will recrawl the
  // landing page.
  | "GOOGLE_CRAWLER_DNS_ISSUE";
// Describes the effect on serving that a policy topic entry will have.
export type googleadsgoogleadsv9common_PolicyTopicConstraint = {
  // Countries where the resource cannot serve.
  countryConstraintList?: googleadsgoogleadsv9common_PolicyTopicConstraint_CountryConstraintList;
  // Reseller constraint.
  resellerConstraint?: googleadsgoogleadsv9common_PolicyTopicConstraint_ResellerConstraint;
  // Countries where a certificate is required for serving.
  certificateMissingInCountryList?: googleadsgoogleadsv9common_PolicyTopicConstraint_CountryConstraintList;
  // Countries where the resource's domain is not covered by the
  // certificates associated with it.
  certificateDomainMismatchInCountryList?: googleadsgoogleadsv9common_PolicyTopicConstraint_CountryConstraintList;
};

// A list of countries where a resource's serving is constrained.
export type googleadsgoogleadsv9common_PolicyTopicConstraint_CountryConstraintList = {
  // Total number of countries targeted by the resource.
  totalTargetedCountries?: number;
  // Countries in which serving is restricted.
  countries: googleadsgoogleadsv9common_PolicyTopicConstraint_CountryConstraint[] | undefined;
};

// Indicates that a resource's ability to serve in a particular country is
// constrained.
export type googleadsgoogleadsv9common_PolicyTopicConstraint_CountryConstraint = {
  // Geo target constant resource name of the country in which serving is
  // constrained.
  countryCriterion?: string;
};

// Indicates that a policy topic was constrained due to disapproval of the
// website for reseller purposes.
export type googleadsgoogleadsv9common_PolicyTopicConstraint_ResellerConstraint = {
};

// The possible policy review statuses.
export type googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Currently under review.
  | "REVIEW_IN_PROGRESS"
  // Primary review complete. Other reviews may be continuing.
  | "REVIEWED"
  // The resource has been resubmitted for approval or its policy decision has
  // been appealed.
  | "UNDER_APPEAL"
  // The resource is eligible and may be serving but could still undergo
  // further review.
  | "ELIGIBLE_MAY_SERVE";
// The possible policy approval statuses. When there are several approval
// statuses available the most severe one will be used. The order of severity
// is DISAPPROVED, AREA_OF_INTEREST_ONLY, APPROVED_LIMITED and APPROVED.
export type googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Will not serve.
  | "DISAPPROVED"
  // Serves with restrictions.
  | "APPROVED_LIMITED"
  // Serves without restrictions.
  | "APPROVED"
  // Will not serve in targeted countries, but may serve for users who are
  // searching for information about the targeted countries.
  | "AREA_OF_INTEREST_ONLY";
// A responsive search ad.
// Responsive search ads let you create an ad that adapts to show more text, and
// more relevant messages, to your customers. Enter multiple headlines and
// descriptions when creating a responsive search ad, and over time, Google Ads
// will automatically test different combinations and learn which combinations
// perform best. By adapting your ad's content to more closely match potential
// customers' search terms, responsive search ads may improve your campaign's
// performance.
// More information at https://support.google.com/google-ads/answer/7684791
export type googleadsgoogleadsv9common_ResponsiveSearchAdInfo = {
  // List of text assets for headlines. When the ad serves the headlines will
  // be selected from this list.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for descriptions. When the ad serves the descriptions
  // will be selected from this list.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // First part of text that can be appended to the URL in the ad.
  path1?: string;
  // Second part of text that can be appended to the URL in the ad. This field
  // can only be set when `path1` is also set.
  path2?: string;
};

// A legacy responsive display ad. Ads of this type are labeled 'Responsive ads'
// in the Google Ads UI.
export type googleadsgoogleadsv9common_LegacyResponsiveDisplayAdInfo = {
  // The short version of the ad's headline.
  shortHeadline?: string;
  // The long version of the ad's headline.
  longHeadline?: string;
  // The description of the ad.
  description?: string;
  // The business name in the ad.
  businessName?: string;
  // Advertiser's consent to allow flexible color. When true, the ad may be
  // served with different color if necessary. When false, the ad will be served
  // with the specified colors or a neutral color.
  // The default value is `true`.
  // Must be true if `main_color` and `accent_color` are not set.
  allowFlexibleColor?: boolean;
  // The accent color of the ad in hexadecimal, e.g. #ffffff for white.
  // If one of `main_color` and `accent_color` is set, the other is required as
  // well.
  accentColor?: string;
  // The main color of the ad in hexadecimal, e.g. #ffffff for white.
  // If one of `main_color` and `accent_color` is set, the other is required as
  // well.
  mainColor?: string;
  // The call-to-action text for the ad.
  callToActionText?: string;
  // The MediaFile resource name of the logo image used in the ad.
  logoImage?: string;
  // The MediaFile resource name of the square logo image used in the ad.
  squareLogoImage?: string;
  // The MediaFile resource name of the marketing image used in the ad.
  marketingImage?: string;
  // The MediaFile resource name of the square marketing image used in the ad.
  squareMarketingImage?: string;
  // Specifies which format the ad will be served in. Default is ALL_FORMATS.
  formatSetting: googleadsgoogleadsv9enums_DisplayAdFormatSettingEnum_DisplayAdFormatSetting | undefined;
  // Prefix before price. E.g. 'as low as'.
  pricePrefix?: string;
  // Promotion text used for dynamic formats of responsive ads. For example
  // 'Free two-day shipping'.
  promoText?: string;
};

// Enumerates display ad format settings.
export type googleadsgoogleadsv9enums_DisplayAdFormatSettingEnum_DisplayAdFormatSetting =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Text, image and native formats.
  | "ALL_FORMATS"
  // Text and image formats.
  | "NON_NATIVE"
  // Native format, i.e. the format rendering is controlled by the publisher
  // and not by Google.
  | "NATIVE";
// An app ad.
export type googleadsgoogleadsv9common_AppAdInfo = {
  // Mandatory ad text.
  mandatoryAdText: googleadsgoogleadsv9common_AdTextAsset | undefined;
  // List of text assets for headlines. When the ad serves the headlines will
  // be selected from this list.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for descriptions. When the ad serves the descriptions
  // will be selected from this list.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of image assets that may be displayed with the ad.
  images: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // List of YouTube video assets that may be displayed with the ad.
  youtubeVideos: googleadsgoogleadsv9common_AdVideoAsset[] | undefined;
  // List of media bundle assets that may be used with the ad.
  html5MediaBundles: googleadsgoogleadsv9common_AdMediaBundleAsset[] | undefined;
};

// A media bundle asset used inside an ad.
export type googleadsgoogleadsv9common_AdMediaBundleAsset = {
  // The Asset resource name of this media bundle.
  asset?: string;
};

// A legacy app install ad that only can be used by a few select customers.
export type googleadsgoogleadsv9common_LegacyAppInstallAdInfo = {
  // The ID of the mobile app.
  appId?: string;
  // The app store the mobile app is available in.
  appStore: googleadsgoogleadsv9enums_LegacyAppInstallAdAppStoreEnum_LegacyAppInstallAdAppStore | undefined;
  // The headline of the ad.
  headline?: string;
  // The first description line of the ad.
  description1?: string;
  // The second description line of the ad.
  description2?: string;
};

// App store type in a legacy app install ad.
export type googleadsgoogleadsv9enums_LegacyAppInstallAdAppStoreEnum_LegacyAppInstallAdAppStore =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Apple iTunes.
  | "APPLE_APP_STORE"
  // Google Play.
  | "GOOGLE_PLAY"
  // Windows Store.
  | "WINDOWS_STORE"
  // Windows Phone Store.
  | "WINDOWS_PHONE_STORE"
  // The app is hosted in a Chinese app store.
  | "CN_APP_STORE";
// A responsive display ad.
export type googleadsgoogleadsv9common_ResponsiveDisplayAdInfo = {
  // Marketing images to be used in the ad. Valid image types are GIF,
  // JPEG, and PNG. The minimum size is 600x314 and the aspect ratio must
  // be 1.91:1 (+-1%). At least one `marketing_image` is required. Combined
  // with `square_marketing_images`, the maximum is 15.
  marketingImages: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // Square marketing images to be used in the ad. Valid image types are GIF,
  // JPEG, and PNG. The minimum size is 300x300 and the aspect ratio must
  // be 1:1 (+-1%). At least one square `marketing_image` is required. Combined
  // with `marketing_images`, the maximum is 15.
  squareMarketingImages: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // Logo images to be used in the ad. Valid image types are GIF,
  // JPEG, and PNG. The minimum size is 512x128 and the aspect ratio must
  // be 4:1 (+-1%). Combined with `square_logo_images`, the maximum is 5.
  logoImages: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // Square logo images to be used in the ad. Valid image types are GIF,
  // JPEG, and PNG. The minimum size is 128x128 and the aspect ratio must
  // be 1:1 (+-1%). Combined with `square_logo_images`, the maximum is 5.
  squareLogoImages: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // Short format headlines for the ad. The maximum length is 30 characters.
  // At least 1 and max 5 headlines can be specified.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // A required long format headline. The maximum length is 90 characters.
  longHeadline: googleadsgoogleadsv9common_AdTextAsset | undefined;
  // Descriptive texts for the ad. The maximum length is 90 characters. At
  // least 1 and max 5 headlines can be specified.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // Optional YouTube videos for the ad. A maximum of 5 videos can be specified.
  youtubeVideos: googleadsgoogleadsv9common_AdVideoAsset[] | undefined;
  // The advertiser/brand name. Maximum display width is 25.
  businessName?: string;
  // The main color of the ad in hexadecimal, e.g. #ffffff for white.
  // If one of `main_color` and `accent_color` is set, the other is required as
  // well.
  mainColor?: string;
  // The accent color of the ad in hexadecimal, e.g. #ffffff for white.
  // If one of `main_color` and `accent_color` is set, the other is required as
  // well.
  accentColor?: string;
  // Advertiser's consent to allow flexible color. When true, the ad may be
  // served with different color if necessary. When false, the ad will be served
  // with the specified colors or a neutral color.
  // The default value is `true`.
  // Must be true if `main_color` and `accent_color` are not set.
  allowFlexibleColor?: boolean;
  // The call-to-action text for the ad. Maximum display width is 30.
  callToActionText?: string;
  // Prefix before price. E.g. 'as low as'.
  pricePrefix?: string;
  // Promotion text used for dynamic formats of responsive ads. For example
  // 'Free two-day shipping'.
  promoText?: string;
  // Specifies which format the ad will be served in. Default is ALL_FORMATS.
  formatSetting: googleadsgoogleadsv9enums_DisplayAdFormatSettingEnum_DisplayAdFormatSetting | undefined;
  // Specification for various creative controls.
  controlSpec: googleadsgoogleadsv9common_ResponsiveDisplayAdControlSpec | undefined;
};

// Specification for various creative controls for a responsive display ad.
export type googleadsgoogleadsv9common_ResponsiveDisplayAdControlSpec = {
  // Whether the advertiser has opted into the asset enhancements feature.
  enableAssetEnhancements: boolean | undefined;
  // Whether the advertiser has opted into auto-gen video feature.
  enableAutogenVideo: boolean | undefined;
};

// A local ad.
export type googleadsgoogleadsv9common_LocalAdInfo = {
  // List of text assets for headlines. When the ad serves the headlines will
  // be selected from this list. At least 1 and at most 5 headlines must be
  // specified.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for descriptions. When the ad serves the descriptions
  // will be selected from this list. At least 1 and at most 5 descriptions must
  // be specified.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for call-to-actions. When the ad serves the
  // call-to-actions will be selected from this list. Call-to-actions are
  // optional and at most 5 can be specified.
  callToActions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of marketing image assets that may be displayed with the ad. The
  // images must be 314x600 pixels or 320x320 pixels. At least 1 and at most
  // 20 image assets must be specified.
  marketingImages: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // List of logo image assets that may be displayed with the ad. The images
  // must be 128x128 pixels and not larger than 120KB. At least 1 and at most 5
  // image assets must be specified.
  logoImages: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // List of YouTube video assets that may be displayed with the ad. Videos
  // are optional and at most 20 can be specified.
  videos: googleadsgoogleadsv9common_AdVideoAsset[] | undefined;
  // First part of optional text that can be appended to the URL in the ad.
  path1?: string;
  // Second part of optional text that can be appended to the URL in the ad.
  // This field can only be set when `path1` is also set.
  path2?: string;
};

// A generic type of display ad. The exact ad format is controlled by the
// `display_upload_product_type` field, which determines what kinds of data
// need to be included with the ad.
export type googleadsgoogleadsv9common_DisplayUploadAdInfo = {
  // The product type of this ad. See comments on the enum for details.
  displayUploadProductType: googleadsgoogleadsv9enums_DisplayUploadProductTypeEnum_DisplayUploadProductType | undefined;
  // A media bundle asset to be used in the ad. For information about the
  // media bundle for HTML5_UPLOAD_AD, see
  // https://support.google.com/google-ads/answer/1722096
  // Media bundles that are part of dynamic product types use a special format
  // that needs to be created through the Google Web Designer. See
  // https://support.google.com/webdesigner/answer/7543898 for more
  // information.
  mediaBundle?: googleadsgoogleadsv9common_AdMediaBundleAsset;
};

// Enumerates display upload product types.
export type googleadsgoogleadsv9enums_DisplayUploadProductTypeEnum_DisplayUploadProductType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // HTML5 upload ad. This product type requires the upload_media_bundle
  // field in DisplayUploadAdInfo to be set.
  | "HTML5_UPLOAD_AD"
  // Dynamic HTML5 education ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in an education campaign.
  | "DYNAMIC_HTML5_EDUCATION_AD"
  // Dynamic HTML5 flight ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a flight campaign.
  | "DYNAMIC_HTML5_FLIGHT_AD"
  // Dynamic HTML5 hotel and rental ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a hotel campaign.
  | "DYNAMIC_HTML5_HOTEL_RENTAL_AD"
  // Dynamic HTML5 job ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a job campaign.
  | "DYNAMIC_HTML5_JOB_AD"
  // Dynamic HTML5 local ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a local campaign.
  | "DYNAMIC_HTML5_LOCAL_AD"
  // Dynamic HTML5 real estate ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a real estate campaign.
  | "DYNAMIC_HTML5_REAL_ESTATE_AD"
  // Dynamic HTML5 custom ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a custom campaign.
  | "DYNAMIC_HTML5_CUSTOM_AD"
  // Dynamic HTML5 travel ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a travel campaign.
  | "DYNAMIC_HTML5_TRAVEL_AD"
  // Dynamic HTML5 hotel ad. This product type requires the
  // upload_media_bundle field in DisplayUploadAdInfo to be set. Can only be
  // used in a hotel campaign.
  | "DYNAMIC_HTML5_HOTEL_AD";
// App engagement ads allow you to write text encouraging a specific action in
// the app, like checking in, making a purchase, or booking a flight.
// They allow you to send users to a specific part of your app where they can
// find what they're looking for easier and faster.
export type googleadsgoogleadsv9common_AppEngagementAdInfo = {
  // List of text assets for headlines. When the ad serves the headlines will
  // be selected from this list.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for descriptions. When the ad serves the descriptions
  // will be selected from this list.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of image assets that may be displayed with the ad.
  images: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // List of video assets that may be displayed with the ad.
  videos: googleadsgoogleadsv9common_AdVideoAsset[] | undefined;
};

// A Shopping Comparison Listing ad.
export type googleadsgoogleadsv9common_ShoppingComparisonListingAdInfo = {
  // Headline of the ad. This field is required. Allowed length is between 25
  // and 45 characters.
  headline?: string;
};

// A Smart campaign ad.
export type googleadsgoogleadsv9common_SmartCampaignAdInfo = {
  // List of text assets for headlines. When the ad serves the headlines will
  // be selected from this list. 3 headlines must be specified.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for descriptions. When the ad serves the descriptions
  // will be selected from this list. 2 descriptions must be specified.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
};

// App pre-registration ads link to your app or game listing on Google Play, and
// can run on Google Play, on YouTube (in-stream only), and within other apps
// and mobile websites on the Display Network. It will help capture people’s
// interest in your app or game and generate an early install base for your app
// or game before a launch.
export type googleadsgoogleadsv9common_AppPreRegistrationAdInfo = {
  // List of text assets for headlines. When the ad serves the headlines will
  // be selected from this list.
  headlines: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of text assets for descriptions. When the ad serves the descriptions
  // will be selected from this list.
  descriptions: googleadsgoogleadsv9common_AdTextAsset[] | undefined;
  // List of image asset IDs whose images may be displayed with the ad.
  images: googleadsgoogleadsv9common_AdImageAsset[] | undefined;
  // List of YouTube video asset IDs whose videos may be displayed with the ad.
  youtubeVideos: googleadsgoogleadsv9common_AdVideoAsset[] | undefined;
};

// Response message for an ad mutate.
export type MutateAdsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdResult[] | undefined;
};

// The result for the ad mutate.
export type MutateAdResult = {
  // The resource name returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad with only mutable fields after mutate. The field will only
  // be returned when response_content_type is set to "MUTABLE_RESOURCE".
  ad: googleadsgoogleadsv9resources_Ad | undefined;
};

// Service to manage ads.
export interface AdService {
  // Returns the requested ad in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAd(request: GetAdRequest): Promise<googleadsgoogleadsv9resources_Ad>;
  // Updates ads. Operation statuses are returned. Updating ads is not supported
  // for TextAd, ExpandedDynamicSearchAd, GmailAd and ImageAd.
  // List of thrown errors:
  // [AdCustomizerError]()
  // [AdError]()
  // [AdSharingError]()
  // [AdxError]()
  // [AssetError]()
  // [AssetLinkError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FeedAttributeReferenceError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [FunctionError]()
  // [FunctionParsingError]()
  // [HeaderError]()
  // [IdError]()
  // [ImageError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MediaBundleError]()
  // [MediaFileError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [PolicyFindingError]()
  // [PolicyViolationError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateAds(request: MutateAdsRequest): Promise<MutateAdsResponse>;
}

export function createAdServiceClient(
  handler: RequestHandler
): AdService {
  return {
    GetAd(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Ad>;
    },
    MutateAds(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/ads:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdsResponse>;
    },
  };
}
// Request message for [CarrierConstantService.GetCarrierConstant][google.ads.googleads.v9.services.CarrierConstantService.GetCarrierConstant].
export type GetCarrierConstantRequest = {
  // Required. Resource name of the carrier constant to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch carrier constants.
export interface CarrierConstantService {
  // Returns the requested carrier constant in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCarrierConstant(request: GetCarrierConstantRequest): Promise<googleadsgoogleadsv9resources_CarrierConstant>;
}

export function createCarrierConstantServiceClient(
  handler: RequestHandler
): CarrierConstantService {
  return {
    GetCarrierConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CarrierConstant>;
    },
  };
}
// A carrier criterion that can be used in campaign targeting.
export type googleadsgoogleadsv9resources_CarrierConstant = {
  // Output only. The resource name of the carrier criterion.
  // Carrier criterion resource names have the form:
  // `carrierConstants/{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the carrier criterion.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The full name of the carrier in English.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The country code of the country where the carrier is located, e.g., "AR",
  // "FR", etc.
  //
  // Behaviors: OUTPUT_ONLY
  countryCode?: string;
};

// Request message for [AdGroupService.GetAdGroup][google.ads.googleads.v9.services.AdGroupService.GetAdGroup].
export type GetAdGroupRequest = {
  // Required. The resource name of the ad group to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupService.MutateAdGroups][google.ads.googleads.v9.services.AdGroupService.MutateAdGroups].
export type MutateAdGroupsRequest = {
  // Required. The ID of the customer whose ad groups are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad groups.
  //
  // Behaviors: REQUIRED
  operations: AdGroupOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on an ad group.
export type AdGroupOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new ad group.
  create?: googleadsgoogleadsv9resources_AdGroup;
  // Update operation: The ad group is expected to have a valid resource name.
  update?: googleadsgoogleadsv9resources_AdGroup;
  // Remove operation: A resource name for the removed ad group is expected,
  // in this format:
  // `customers/{customer_id}/adGroups/{ad_group_id}`
  remove?: string;
};

// An ad group.
export type googleadsgoogleadsv9resources_AdGroup = {
  // Immutable. The resource name of the ad group.
  // Ad group resource names have the form:
  // `customers/{customer_id}/adGroups/{ad_group_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the ad group.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the ad group.
  // This field is required and should not be empty when creating new ad
  // groups.
  // It must contain fewer than 255 UTF-8 full-width characters.
  // It must not contain any null (code point 0x0), NL line feed
  // (code point 0xA) or carriage return (code point 0xD) characters.
  name?: string;
  // The status of the ad group.
  status: googleadsgoogleadsv9enums_AdGroupStatusEnum_AdGroupStatus | undefined;
  // Immutable. The type of the ad group.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_AdGroupTypeEnum_AdGroupType | undefined;
  // The ad rotation mode of the ad group.
  adRotationMode: googleadsgoogleadsv9enums_AdGroupAdRotationModeEnum_AdGroupAdRotationMode | undefined;
  // Output only. For draft or experiment ad groups, this field is the resource name of the
  // base ad group from which this ad group was created. If a draft or
  // experiment ad group does not have a base ad group, then this field is null.
  // For base ad groups, this field equals the ad group resource name.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  baseAdGroup?: string;
  // The URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // The list of mappings used to substitute custom parameter tags in a
  // `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // Immutable. The campaign to which the ad group belongs.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // The maximum CPC (cost-per-click) bid.
  cpcBidMicros?: number;
  // The maximum CPM (cost-per-thousand viewable impressions) bid.
  cpmBidMicros?: number;
  // The target CPA (cost-per-acquisition). If the ad group's campaign
  // bidding strategy is TargetCpa or MaximizeConversions (with its target_cpa
  // field set), then this field overrides the target CPA specified in the
  // campaign's bidding strategy.
  // Otherwise, this value is ignored.
  targetCpaMicros?: number;
  // Output only. The CPV (cost-per-view) bid.
  //
  // Behaviors: OUTPUT_ONLY
  cpvBidMicros?: number;
  // Average amount in micros that the advertiser is willing to pay for every
  // thousand times the ad is shown.
  targetCpmMicros?: number;
  // The target ROAS (return-on-ad-spend) override. If the ad group's campaign
  // bidding strategy is TargetRoas or MaximizeConversionValue (with its
  // target_roas field set), then this field overrides the target ROAS specified
  // in the campaign's bidding strategy.
  // Otherwise, this value is ignored.
  targetRoas?: number;
  // The percent cpc bid amount, expressed as a fraction of the advertised price
  // for some good or service. The valid range for the fraction is [0,1) and the
  // value stored here is 1,000,000 * [fraction].
  percentCpcBidMicros?: number;
  // Settings for the Display Campaign Optimizer, initially termed "Explorer".
  explorerAutoOptimizerSetting: googleadsgoogleadsv9common_ExplorerAutoOptimizerSetting | undefined;
  // Allows advertisers to specify a targeting dimension on which to place
  // absolute bids. This is only applicable for campaigns that target only the
  // display network and not search.
  displayCustomBidDimension: googleadsgoogleadsv9enums_TargetingDimensionEnum_TargetingDimension | undefined;
  // URL template for appending params to Final URL.
  finalUrlSuffix?: string;
  // Setting for targeting related features.
  targetingSetting: googleadsgoogleadsv9common_TargetingSetting | undefined;
  // Output only. The effective target CPA (cost-per-acquisition).
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveTargetCpaMicros?: number;
  // Output only. Source of the effective target CPA.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveTargetCpaSource: googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource | undefined;
  // Output only. The effective target ROAS (return-on-ad-spend).
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveTargetRoas?: number;
  // Output only. Source of the effective target ROAS.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveTargetRoasSource: googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource | undefined;
  // Output only. The resource names of labels attached to this ad group.
  //
  // Behaviors: OUTPUT_ONLY
  labels: string[] | undefined;
  // The asset field types that should be excluded from this ad group. Asset
  // links with these field types will not be inherited by this ad group from
  // the upper levels.
  excludedParentAssetFieldTypes: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType[] | undefined;
};

// The possible statuses of an ad group.
export type googleadsgoogleadsv9enums_AdGroupStatusEnum_AdGroupStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The ad group is enabled.
  | "ENABLED"
  // The ad group is paused.
  | "PAUSED"
  // The ad group is removed.
  | "REMOVED";
// Enum listing the possible types of an ad group.
export type googleadsgoogleadsv9enums_AdGroupTypeEnum_AdGroupType =
  // The type has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The default ad group type for Search campaigns.
  | "SEARCH_STANDARD"
  // The default ad group type for Display campaigns.
  | "DISPLAY_STANDARD"
  // The ad group type for Shopping campaigns serving standard product ads.
  | "SHOPPING_PRODUCT_ADS"
  // The default ad group type for Hotel campaigns.
  | "HOTEL_ADS"
  // The type for ad groups in Smart Shopping campaigns.
  | "SHOPPING_SMART_ADS"
  // Short unskippable in-stream video ads.
  | "VIDEO_BUMPER"
  // TrueView (skippable) in-stream video ads.
  | "VIDEO_TRUE_VIEW_IN_STREAM"
  // TrueView in-display video ads.
  | "VIDEO_TRUE_VIEW_IN_DISPLAY"
  // Unskippable in-stream video ads.
  | "VIDEO_NON_SKIPPABLE_IN_STREAM"
  // Outstream video ads.
  | "VIDEO_OUTSTREAM"
  // Ad group type for Dynamic Search Ads ad groups.
  | "SEARCH_DYNAMIC_ADS"
  // The type for ad groups in Shopping Comparison Listing campaigns.
  | "SHOPPING_COMPARISON_LISTING_ADS"
  // The ad group type for Promoted Hotel ad groups.
  | "PROMOTED_HOTEL_ADS"
  // Video responsive ad groups.
  | "VIDEO_RESPONSIVE"
  // Video efficient reach ad groups.
  | "VIDEO_EFFICIENT_REACH"
  // Ad group type for Smart campaigns.
  | "SMART_CAMPAIGN_ADS";
// The possible ad rotation modes of an ad group.
export type googleadsgoogleadsv9enums_AdGroupAdRotationModeEnum_AdGroupAdRotationMode =
  // The ad rotation mode has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Optimize ad group ads based on clicks or conversions.
  | "OPTIMIZE"
  // Rotate evenly forever.
  | "ROTATE_FOREVER";
// Settings for the Display Campaign Optimizer, initially named "Explorer".
// Learn more about
// [automatic targeting](https://support.google.com/google-ads/answer/190596).
export type googleadsgoogleadsv9common_ExplorerAutoOptimizerSetting = {
  // Indicates whether the optimizer is turned on.
  optIn?: boolean;
};

// Enum describing possible targeting dimensions.
export type googleadsgoogleadsv9enums_TargetingDimensionEnum_TargetingDimension =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Keyword criteria, e.g. 'mars cruise'. KEYWORD may be used as a custom bid
  // dimension. Keywords are always a targeting dimension, so may not be set
  // as a target "ALL" dimension with TargetRestriction.
  | "KEYWORD"
  // Audience criteria, which include user list, user interest, custom
  // affinity,  and custom in market.
  | "AUDIENCE"
  // Topic criteria for targeting categories of content, e.g.
  // 'category::Animals>Pets' Used for Display and Video targeting.
  | "TOPIC"
  // Criteria for targeting gender.
  | "GENDER"
  // Criteria for targeting age ranges.
  | "AGE_RANGE"
  // Placement criteria, which include websites like 'www.flowers4sale.com',
  // as well as mobile applications, mobile app categories, YouTube videos,
  // and YouTube channels.
  | "PLACEMENT"
  // Criteria for parental status targeting.
  | "PARENTAL_STATUS"
  // Criteria for income range targeting.
  | "INCOME_RANGE";
// Settings for the targeting-related features, at the campaign and ad group
// levels. For more details about the targeting setting, visit
// https://support.google.com/google-ads/answer/7365594
export type googleadsgoogleadsv9common_TargetingSetting = {
  // The per-targeting-dimension setting to restrict the reach of your campaign
  // or ad group.
  targetRestrictions: googleadsgoogleadsv9common_TargetRestriction[] | undefined;
  // The list of operations changing the target restrictions.
  // Adding a target restriction with a targeting dimension that already exists
  // causes the existing target restriction to be replaced with the new value.
  targetRestrictionOperations: googleadsgoogleadsv9common_TargetRestrictionOperation[] | undefined;
};

// The list of per-targeting-dimension targeting settings.
export type googleadsgoogleadsv9common_TargetRestriction = {
  // The targeting dimension that these settings apply to.
  targetingDimension: googleadsgoogleadsv9enums_TargetingDimensionEnum_TargetingDimension | undefined;
  // Indicates whether to restrict your ads to show only for the criteria you
  // have selected for this targeting_dimension, or to target all values for
  // this targeting_dimension and show ads based on your targeting in other
  // TargetingDimensions. A value of `true` means that these criteria will only
  // apply bid modifiers, and not affect targeting. A value of `false` means
  // that these criteria will restrict targeting as well as applying bid
  // modifiers.
  bidOnly?: boolean;
};

// Operation to be performed on a target restriction list in a mutate.
export type googleadsgoogleadsv9common_TargetRestrictionOperation = {
  // Type of list operation to perform.
  operator: googleadsgoogleadsv9common_TargetRestrictionOperation_Operator | undefined;
  // The target restriction being added to or removed from the list.
  value: googleadsgoogleadsv9common_TargetRestriction | undefined;
};

// The operator.
export type googleadsgoogleadsv9common_TargetRestrictionOperation_Operator =
  // Unspecified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Add the restriction to the existing restrictions.
  | "ADD"
  // Remove the restriction from the existing restrictions.
  | "REMOVE";
// Indicates where a bid or target is defined. For example, an ad group
// criterion may define a cpc bid directly, or it can inherit its cpc bid from
// the ad group.
export type googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Effective bid or target is inherited from campaign bidding strategy.
  | "CAMPAIGN_BIDDING_STRATEGY"
  // The bid or target is defined on the ad group.
  | "AD_GROUP"
  // The bid or target is defined on the ad group criterion.
  | "AD_GROUP_CRITERION";
// Enum describing the possible placements of an asset.
export type googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The asset is linked for use as a headline.
  | "HEADLINE"
  // The asset is linked for use as a description.
  | "DESCRIPTION"
  // The asset is linked for use as mandatory ad text.
  | "MANDATORY_AD_TEXT"
  // The asset is linked for use as a marketing image.
  | "MARKETING_IMAGE"
  // The asset is linked for use as a media bundle.
  | "MEDIA_BUNDLE"
  // The asset is linked for use as a YouTube video.
  | "YOUTUBE_VIDEO"
  // The asset is linked to indicate that a hotels campaign is "Book on
  // Google" enabled.
  | "BOOK_ON_GOOGLE"
  // The asset is linked for use as a Lead Form extension.
  | "LEAD_FORM"
  // The asset is linked for use as a Promotion extension.
  | "PROMOTION"
  // The asset is linked for use as a Callout extension.
  | "CALLOUT"
  // The asset is linked for use as a Structured Snippet extension.
  | "STRUCTURED_SNIPPET"
  // The asset is linked for use as a Sitelink extension.
  | "SITELINK"
  // The asset is linked for use as a Mobile App extension.
  | "MOBILE_APP"
  // The asset is linked for use as a Hotel Callout extension.
  | "HOTEL_CALLOUT"
  // The asset is linked for use as a Call extension.
  | "CALL"
  // The asset is linked for use as a Price extension.
  | "PRICE"
  // The asset is linked for use as a long headline.
  | "LONG_HEADLINE"
  // The asset is linked for use as a business name.
  | "BUSINESS_NAME"
  // The asset is linked for use as a square marketing image.
  | "SQUARE_MARKETING_IMAGE"
  // The asset is linked for use as a portrait marketing image.
  | "PORTRAIT_MARKETING_IMAGE"
  // The asset is linked for use as a logo.
  | "LOGO"
  // The asset is linked for use as a landscape logo.
  | "LANDSCAPE_LOGO"
  // The asset is linked for use as a non YouTube logo.
  | "VIDEO"
  // The asset is linked for use to select a call-to-action.
  | "CALL_TO_ACTION_SELECTION";
// Response message for an ad group mutate.
export type MutateAdGroupsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupResult[] | undefined;
};

// The result for the ad group mutate.
export type MutateAdGroupResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad group with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  adGroup: googleadsgoogleadsv9resources_AdGroup | undefined;
};

// Service to manage ad groups.
export interface AdGroupService {
  // Returns the requested ad group in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroup(request: GetAdGroupRequest): Promise<googleadsgoogleadsv9resources_AdGroup>;
  // Creates, updates, or removes ad groups. Operation statuses are returned.
  // List of thrown errors:
  // [AdGroupError]()
  // [AdxError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BiddingError]()
  // [BiddingStrategyError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MultiplierError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SettingError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateAdGroups(request: MutateAdGroupsRequest): Promise<MutateAdGroupsResponse>;
}

export function createAdGroupServiceClient(
  handler: RequestHandler
): AdGroupService {
  return {
    GetAdGroup(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroup>;
    },
    MutateAdGroups(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroups:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupsResponse>;
    },
  };
}
// Request message for [ExtensionFeedItemService.GetExtensionFeedItem][google.ads.googleads.v9.services.ExtensionFeedItemService.GetExtensionFeedItem].
export type GetExtensionFeedItemRequest = {
  // Required. The resource name of the extension feed item to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [ExtensionFeedItemService.MutateExtensionFeedItems][google.ads.googleads.v9.services.ExtensionFeedItemService.MutateExtensionFeedItems].
export type MutateExtensionFeedItemsRequest = {
  // Required. The ID of the customer whose extension feed items are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual extension feed items.
  //
  // Behaviors: REQUIRED
  operations: ExtensionFeedItemOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on an extension feed item.
export type ExtensionFeedItemOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new extension
  // feed item.
  create?: googleadsgoogleadsv9resources_ExtensionFeedItem;
  // Update operation: The extension feed item is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_ExtensionFeedItem;
  // Remove operation: A resource name for the removed extension feed item
  // is expected, in this format:
  // `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
  remove?: string;
};

// An extension feed item.
export type googleadsgoogleadsv9resources_ExtensionFeedItem = {
  // Immutable. The resource name of the extension feed item.
  // Extension feed item resource names have the form:
  // `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of this feed item. Read-only.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The extension type of the extension feed item.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  extensionType: googleadsgoogleadsv9enums_ExtensionTypeEnum_ExtensionType | undefined;
  // Start time in which this feed item is effective and can begin serving. The
  // time is in the customer's time zone.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  startDateTime?: string;
  // End time in which this feed item is no longer effective and will stop
  // serving. The time is in the customer's time zone.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  endDateTime?: string;
  // List of non-overlapping schedules specifying all time intervals
  // for which the feed item may serve. There can be a maximum of 6 schedules
  // per day.
  adSchedules: googleadsgoogleadsv9common_AdScheduleInfo[] | undefined;
  // The targeted device.
  device: googleadsgoogleadsv9enums_FeedItemTargetDeviceEnum_FeedItemTargetDevice | undefined;
  // The targeted geo target constant.
  targetedGeoTargetConstant?: string;
  // The targeted keyword.
  targetedKeyword: googleadsgoogleadsv9common_KeywordInfo | undefined;
  // Output only. Status of the feed item.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedItemStatusEnum_FeedItemStatus | undefined;
  // Sitelink extension.
  sitelinkFeedItem?: googleadsgoogleadsv9common_SitelinkFeedItem;
  // Structured snippet extension.
  structuredSnippetFeedItem?: googleadsgoogleadsv9common_StructuredSnippetFeedItem;
  // App extension.
  appFeedItem?: googleadsgoogleadsv9common_AppFeedItem;
  // Call extension.
  callFeedItem?: googleadsgoogleadsv9common_CallFeedItem;
  // Callout extension.
  calloutFeedItem?: googleadsgoogleadsv9common_CalloutFeedItem;
  // Text message extension.
  textMessageFeedItem?: googleadsgoogleadsv9common_TextMessageFeedItem;
  // Price extension.
  priceFeedItem?: googleadsgoogleadsv9common_PriceFeedItem;
  // Promotion extension.
  promotionFeedItem?: googleadsgoogleadsv9common_PromotionFeedItem;
  // Output only. Location extension. Locations are synced from a Business Profile into a
  // feed. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  locationFeedItem?: googleadsgoogleadsv9common_LocationFeedItem;
  // Output only. Affiliate location extension. Feed locations are populated by Google Ads
  // based on a chain ID.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  affiliateLocationFeedItem?: googleadsgoogleadsv9common_AffiliateLocationFeedItem;
  // Hotel Callout extension.
  hotelCalloutFeedItem?: googleadsgoogleadsv9common_HotelCalloutFeedItem;
  // Immutable. Advertiser provided image extension.
  //
  // Behaviors: IMMUTABLE
  imageFeedItem?: googleadsgoogleadsv9common_ImageFeedItem;
  // The targeted campaign.
  targetedCampaign?: string;
  // The targeted ad group.
  targetedAdGroup?: string;
};

// Possible data types for an extension in an extension setting.
export type googleadsgoogleadsv9enums_ExtensionTypeEnum_ExtensionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // None.
  | "NONE"
  // App.
  | "APP"
  // Call.
  | "CALL"
  // Callout.
  | "CALLOUT"
  // Message.
  | "MESSAGE"
  // Price.
  | "PRICE"
  // Promotion.
  | "PROMOTION"
  // Sitelink.
  | "SITELINK"
  // Structured snippet.
  | "STRUCTURED_SNIPPET"
  // Location.
  | "LOCATION"
  // Affiliate location.
  | "AFFILIATE_LOCATION"
  // Hotel callout
  | "HOTEL_CALLOUT"
  // Image.
  | "IMAGE";
// Possible data types for a feed item target device.
export type googleadsgoogleadsv9enums_FeedItemTargetDeviceEnum_FeedItemTargetDevice =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Mobile.
  | "MOBILE";
// Possible statuses of a feed item.
export type googleadsgoogleadsv9enums_FeedItemStatusEnum_FeedItemStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed item is enabled.
  | "ENABLED"
  // Feed item has been removed.
  | "REMOVED";
// Represents a sitelink extension.
export type googleadsgoogleadsv9common_SitelinkFeedItem = {
  // URL display text for the sitelink.
  // The length of this string should be between 1 and 25, inclusive.
  linkText?: string;
  // First line of the description for the sitelink.
  // If this value is set, line2 must also be set.
  // The length of this string should be between 0 and 35, inclusive.
  line1?: string;
  // Second line of the description for the sitelink.
  // If this value is set, line1 must also be set.
  // The length of this string should be between 0 and 35, inclusive.
  line2?: string;
  // A list of possible final URLs after all cross domain redirects.
  finalUrls: string[] | undefined;
  // A list of possible final mobile URLs after all cross domain redirects.
  finalMobileUrls: string[] | undefined;
  // URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // A list of mappings to be used for substituting URL custom parameter tags in
  // the tracking_url_template, final_urls, and/or final_mobile_urls.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // Final URL suffix to be appended to landing page URLs served with
  // parallel tracking.
  finalUrlSuffix?: string;
};

// Represents a structured snippet extension.
export type googleadsgoogleadsv9common_StructuredSnippetFeedItem = {
  // The header of the snippet.
  // This string must not be empty.
  header?: string;
  // The values in the snippet.
  // The maximum size of this collection is 10.
  values: string[] | undefined;
};

// Represents an App extension.
export type googleadsgoogleadsv9common_AppFeedItem = {
  // The visible text displayed when the link is rendered in an ad.
  // This string must not be empty, and the length of this string should
  // be between 1 and 25, inclusive.
  linkText?: string;
  // The store-specific ID for the target application.
  // This string must not be empty.
  appId?: string;
  // The application store that the target application belongs to.
  // This field is required.
  appStore: googleadsgoogleadsv9enums_AppStoreEnum_AppStore | undefined;
  // A list of possible final URLs after all cross domain redirects.
  // This list must not be empty.
  finalUrls: string[] | undefined;
  // A list of possible final mobile URLs after all cross domain redirects.
  finalMobileUrls: string[] | undefined;
  // URL template for constructing a tracking URL. Default value is "{lpurl}".
  trackingUrlTemplate?: string;
  // A list of mappings to be used for substituting URL custom parameter tags in
  // the tracking_url_template, final_urls, and/or final_mobile_urls.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // URL template for appending params to landing page URLs served with parallel
  // tracking.
  finalUrlSuffix?: string;
};

// App store type in an app extension.
export type googleadsgoogleadsv9enums_AppStoreEnum_AppStore =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Apple iTunes.
  | "APPLE_ITUNES"
  // Google Play.
  | "GOOGLE_PLAY";
// Represents a Call extension.
export type googleadsgoogleadsv9common_CallFeedItem = {
  // The advertiser's phone number to append to the ad.
  // This string must not be empty.
  phoneNumber?: string;
  // Uppercase two-letter country code of the advertiser's phone number.
  // This string must not be empty.
  countryCode?: string;
  // Indicates whether call tracking is enabled. By default, call tracking is
  // not enabled.
  callTrackingEnabled?: boolean;
  // The conversion action to attribute a call conversion to. If not set a
  // default conversion action is used. This field only has effect if
  // call_tracking_enabled is set to true. Otherwise this field is ignored.
  callConversionAction?: string;
  // If true, disable call conversion tracking. call_conversion_action should
  // not be set if this is true. Optional.
  callConversionTrackingDisabled?: boolean;
  // Enum value that indicates whether this call extension uses its own call
  // conversion setting (or just have call conversion disabled), or following
  // the account level setting.
  callConversionReportingState: googleadsgoogleadsv9enums_CallConversionReportingStateEnum_CallConversionReportingState | undefined;
};

// Represents a callout extension.
export type googleadsgoogleadsv9common_CalloutFeedItem = {
  // The callout text.
  // The length of this string should be between 1 and 25, inclusive.
  calloutText?: string;
};

// An extension that users can click on to send a text message to the
// advertiser.
export type googleadsgoogleadsv9common_TextMessageFeedItem = {
  // The business name to prepend to the message text.
  // This field is required.
  businessName?: string;
  // Uppercase two-letter country code of the advertiser's phone number.
  // This field is required.
  countryCode?: string;
  // The advertiser's phone number the message will be sent to. Required.
  phoneNumber?: string;
  // The text to show in the ad.
  // This field is required.
  text?: string;
  // The message extension_text populated in the messaging app.
  extensionText?: string;
};

// Represents a Price extension.
export type googleadsgoogleadsv9common_PriceFeedItem = {
  // Price extension type of this extension.
  type: googleadsgoogleadsv9enums_PriceExtensionTypeEnum_PriceExtensionType | undefined;
  // Price qualifier for all offers of this price extension.
  priceQualifier: googleadsgoogleadsv9enums_PriceExtensionPriceQualifierEnum_PriceExtensionPriceQualifier | undefined;
  // Tracking URL template for all offers of this price extension.
  trackingUrlTemplate?: string;
  // The code of the language used for this price extension.
  languageCode?: string;
  // The price offerings in this price extension.
  priceOfferings: googleadsgoogleadsv9common_PriceOffer[] | undefined;
  // Tracking URL template for all offers of this price extension.
  finalUrlSuffix?: string;
};

// Price extension type.
export type googleadsgoogleadsv9enums_PriceExtensionTypeEnum_PriceExtensionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The type for showing a list of brands.
  | "BRANDS"
  // The type for showing a list of events.
  | "EVENTS"
  // The type for showing locations relevant to your business.
  | "LOCATIONS"
  // The type for showing sub-regions or districts within a city or region.
  | "NEIGHBORHOODS"
  // The type for showing a collection of product categories.
  | "PRODUCT_CATEGORIES"
  // The type for showing a collection of related product tiers.
  | "PRODUCT_TIERS"
  // The type for showing a collection of services offered by your business.
  | "SERVICES"
  // The type for showing a collection of service categories.
  | "SERVICE_CATEGORIES"
  // The type for showing a collection of related service tiers.
  | "SERVICE_TIERS";
// Enums of price extension price qualifier.
export type googleadsgoogleadsv9enums_PriceExtensionPriceQualifierEnum_PriceExtensionPriceQualifier =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // 'From' qualifier for the price.
  | "FROM"
  // 'Up to' qualifier for the price.
  | "UP_TO"
  // 'Average' qualifier for the price.
  | "AVERAGE";
// Represents one price offer in a price extension.
export type googleadsgoogleadsv9common_PriceOffer = {
  // Header text of this offer.
  header?: string;
  // Description text of this offer.
  description?: string;
  // Price value of this offer.
  price: googleadsgoogleadsv9common_Money | undefined;
  // Price unit for this offer.
  unit: googleadsgoogleadsv9enums_PriceExtensionPriceUnitEnum_PriceExtensionPriceUnit | undefined;
  // A list of possible final URLs after all cross domain redirects.
  finalUrls: string[] | undefined;
  // A list of possible final mobile URLs after all cross domain redirects.
  finalMobileUrls: string[] | undefined;
};

// Represents a price in a particular currency.
export type googleadsgoogleadsv9common_Money = {
  // Three-character ISO 4217 currency code.
  currencyCode?: string;
  // Amount in micros. One million is equivalent to one unit.
  amountMicros?: number;
};

// Price extension price unit.
export type googleadsgoogleadsv9enums_PriceExtensionPriceUnitEnum_PriceExtensionPriceUnit =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Per hour.
  | "PER_HOUR"
  // Per day.
  | "PER_DAY"
  // Per week.
  | "PER_WEEK"
  // Per month.
  | "PER_MONTH"
  // Per year.
  | "PER_YEAR"
  // Per night.
  | "PER_NIGHT";
// Represents a Promotion extension.
export type googleadsgoogleadsv9common_PromotionFeedItem = {
  // A freeform description of what the promotion is targeting.
  // This field is required.
  promotionTarget?: string;
  // Enum that modifies the qualification of the discount.
  discountModifier: googleadsgoogleadsv9enums_PromotionExtensionDiscountModifierEnum_PromotionExtensionDiscountModifier | undefined;
  // Start date of when the promotion is eligible to be redeemed.
  promotionStartDate?: string;
  // Last date when the promotion is eligible to be redeemed.
  promotionEndDate?: string;
  // The occasion the promotion was intended for.
  // If an occasion is set, the redemption window will need to fall within
  // the date range associated with the occasion.
  occasion: googleadsgoogleadsv9enums_PromotionExtensionOccasionEnum_PromotionExtensionOccasion | undefined;
  // A list of possible final URLs after all cross domain redirects.
  // This field is required.
  finalUrls: string[] | undefined;
  // A list of possible final mobile URLs after all cross domain redirects.
  finalMobileUrls: string[] | undefined;
  // URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // A list of mappings to be used for substituting URL custom parameter tags in
  // the tracking_url_template, final_urls, and/or final_mobile_urls.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // URL template for appending params to landing page URLs served with parallel
  // tracking.
  finalUrlSuffix?: string;
  // The language of the promotion.
  // Represented as BCP 47 language tag.
  languageCode?: string;
  // Percentage off discount in the promotion in micros.
  // One million is equivalent to one percent.
  // Either this or money_off_amount is required.
  percentOff?: number;
  // Money amount off for discount in the promotion.
  // Either this or percent_off is required.
  moneyAmountOff?: googleadsgoogleadsv9common_Money;
  // A code the user should use in order to be eligible for the promotion.
  promotionCode?: string;
  // The amount the total order needs to be for the user to be eligible for
  // the promotion.
  ordersOverAmount?: googleadsgoogleadsv9common_Money;
};

// A promotion extension discount modifier.
export type googleadsgoogleadsv9enums_PromotionExtensionDiscountModifierEnum_PromotionExtensionDiscountModifier =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // 'Up to'.
  | "UP_TO";
// A promotion extension occasion.
export type googleadsgoogleadsv9enums_PromotionExtensionOccasionEnum_PromotionExtensionOccasion =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // New Year's.
  | "NEW_YEARS"
  // Chinese New Year.
  | "CHINESE_NEW_YEAR"
  // Valentine's Day.
  | "VALENTINES_DAY"
  // Easter.
  | "EASTER"
  // Mother's Day.
  | "MOTHERS_DAY"
  // Father's Day.
  | "FATHERS_DAY"
  // Labor Day.
  | "LABOR_DAY"
  // Back To School.
  | "BACK_TO_SCHOOL"
  // Halloween.
  | "HALLOWEEN"
  // Black Friday.
  | "BLACK_FRIDAY"
  // Cyber Monday.
  | "CYBER_MONDAY"
  // Christmas.
  | "CHRISTMAS"
  // Boxing Day.
  | "BOXING_DAY"
  // Independence Day in any country.
  | "INDEPENDENCE_DAY"
  // National Day in any country.
  | "NATIONAL_DAY"
  // End of any season.
  | "END_OF_SEASON"
  // Winter Sale.
  | "WINTER_SALE"
  // Summer sale.
  | "SUMMER_SALE"
  // Fall Sale.
  | "FALL_SALE"
  // Spring Sale.
  | "SPRING_SALE"
  // Ramadan.
  | "RAMADAN"
  // Eid al-Fitr.
  | "EID_AL_FITR"
  // Eid al-Adha.
  | "EID_AL_ADHA"
  // Singles Day.
  | "SINGLES_DAY"
  // Women's Day.
  | "WOMENS_DAY"
  // Holi.
  | "HOLI"
  // Parent's Day.
  | "PARENTS_DAY"
  // St. Nicholas Day.
  | "ST_NICHOLAS_DAY"
  // Carnival.
  | "CARNIVAL"
  // Epiphany, also known as Three Kings' Day.
  | "EPIPHANY"
  // Rosh Hashanah.
  | "ROSH_HASHANAH"
  // Passover.
  | "PASSOVER"
  // Hanukkah.
  | "HANUKKAH"
  // Diwali.
  | "DIWALI"
  // Navratri.
  | "NAVRATRI"
  // Available in Thai: Songkran.
  | "SONGKRAN"
  // Available in Japanese: Year-end Gift.
  | "YEAR_END_GIFT";
// Represents a location extension.
export type googleadsgoogleadsv9common_LocationFeedItem = {
  // The name of the business.
  businessName?: string;
  // Line 1 of the business address.
  addressLine1?: string;
  // Line 2 of the business address.
  addressLine2?: string;
  // City of the business address.
  city?: string;
  // Province of the business address.
  province?: string;
  // Postal code of the business address.
  postalCode?: string;
  // Country code of the business address.
  countryCode?: string;
  // Phone number of the business.
  phoneNumber?: string;
};

// Represents an affiliate location extension.
export type googleadsgoogleadsv9common_AffiliateLocationFeedItem = {
  // The name of the business.
  businessName?: string;
  // Line 1 of the business address.
  addressLine1?: string;
  // Line 2 of the business address.
  addressLine2?: string;
  // City of the business address.
  city?: string;
  // Province of the business address.
  province?: string;
  // Postal code of the business address.
  postalCode?: string;
  // Country code of the business address.
  countryCode?: string;
  // Phone number of the business.
  phoneNumber?: string;
  // Id of the retail chain that is advertised as a seller of your product.
  chainId?: number;
  // Name of chain.
  chainName?: string;
};

// Represents a hotel callout extension.
export type googleadsgoogleadsv9common_HotelCalloutFeedItem = {
  // The callout text.
  // The length of this string should be between 1 and 25, inclusive.
  text?: string;
  // The language of the hotel callout text.
  // IETF BCP 47 compliant language code.
  languageCode?: string;
};

// Represents an advertiser provided image extension.
export type googleadsgoogleadsv9common_ImageFeedItem = {
  // Required. Resource name of the image asset.
  //
  // Behaviors: REQUIRED
  imageAsset: string | undefined;
};

// Response message for an extension feed item mutate.
export type MutateExtensionFeedItemsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateExtensionFeedItemResult[] | undefined;
};

// The result for the extension feed item mutate.
export type MutateExtensionFeedItemResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated extension feed item with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  extensionFeedItem: googleadsgoogleadsv9resources_ExtensionFeedItem | undefined;
};

// Service to manage extension feed items.
export interface ExtensionFeedItemService {
  // Returns the requested extension feed item in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetExtensionFeedItem(request: GetExtensionFeedItemRequest): Promise<googleadsgoogleadsv9resources_ExtensionFeedItem>;
  // Creates, updates, or removes extension feed items. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CountryCodeError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [ExtensionFeedItemError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [ImageError]()
  // [InternalError]()
  // [LanguageCodeError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [OperationAccessDeniedError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateExtensionFeedItems(request: MutateExtensionFeedItemsRequest): Promise<MutateExtensionFeedItemsResponse>;
}

export function createExtensionFeedItemServiceClient(
  handler: RequestHandler
): ExtensionFeedItemService {
  return {
    GetExtensionFeedItem(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ExtensionFeedItem>;
    },
    MutateExtensionFeedItems(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/extensionFeedItems:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateExtensionFeedItemsResponse>;
    },
  };
}
// Request message for [AgeRangeViewService.GetAgeRangeView][google.ads.googleads.v9.services.AgeRangeViewService.GetAgeRangeView].
export type GetAgeRangeViewRequest = {
  // Required. The resource name of the age range view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage age range views.
export interface AgeRangeViewService {
  // Returns the requested age range view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAgeRangeView(request: GetAgeRangeViewRequest): Promise<googleadsgoogleadsv9resources_AgeRangeView>;
}

export function createAgeRangeViewServiceClient(
  handler: RequestHandler
): AgeRangeViewService {
  return {
    GetAgeRangeView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AgeRangeView>;
    },
  };
}
// An age range view.
export type googleadsgoogleadsv9resources_AgeRangeView = {
  // Output only. The resource name of the age range view.
  // Age range view resource names have the form:
  // `customers/{customer_id}/ageRangeViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for
// [ConversionGoalCampaignConfigService.MutateConversionGoalCampaignConfig][].
export type MutateConversionGoalCampaignConfigsRequest = {
  // Required. The ID of the customer whose custom conversion goals are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual conversion goal campaign
  // config.
  //
  // Behaviors: REQUIRED
  operations: ConversionGoalCampaignConfigOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (update) on a conversion goal campaign config.
export type ConversionGoalCampaignConfigOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The conversion goal campaign config is expected to have
  // a valid resource name.
  update?: googleadsgoogleadsv9resources_ConversionGoalCampaignConfig;
};

// Conversion goal settings for a Campaign.
export type googleadsgoogleadsv9resources_ConversionGoalCampaignConfig = {
  // Immutable. The resource name of the conversion goal campaign config.
  // Conversion goal campaign config resource names have the form:
  // `customers/{customer_id}/conversionGoalCampaignConfigs/{campaign_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign with which this conversion goal campaign config is associated.
  //
  // Behaviors: IMMUTABLE
  campaign: string | undefined;
  // The level of goal config the campaign is using.
  goalConfigLevel: googleadsgoogleadsv9enums_GoalConfigLevelEnum_GoalConfigLevel | undefined;
  // The custom conversion goal the campaign is using for optimization.
  customConversionGoal: string | undefined;
};

// The possible goal config levels. Campaigns automatically inherit the
// effective conversion account's customer goals unless they have been
// configured with their own set of campaign goals.
export type googleadsgoogleadsv9enums_GoalConfigLevelEnum_GoalConfigLevel =
  // The goal config level has not been specified.
  | "UNSPECIFIED"
  // The goal config level is not known in this version.
  | "UNKNOWN"
  // The goal config is defined at the customer level.
  | "CUSTOMER"
  // The goal config is defined at the campaign level.
  | "CAMPAIGN";
// Response message for a conversion goal campaign config mutate.
export type MutateConversionGoalCampaignConfigsResponse = {
  // All results for the mutate.
  results: MutateConversionGoalCampaignConfigResult[] | undefined;
};

// The result for the conversion goal campaign config mutate.
export type MutateConversionGoalCampaignConfigResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated ConversionGoalCampaignConfig with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  conversionGoalCampaignConfig: googleadsgoogleadsv9resources_ConversionGoalCampaignConfig | undefined;
};

// Service to manage conversion goal campaign config.
export interface ConversionGoalCampaignConfigService {
  // Creates, updates or removes conversion goal campaign config. Operation
  // statuses are returned.
  MutateConversionGoalCampaignConfigs(request: MutateConversionGoalCampaignConfigsRequest): Promise<MutateConversionGoalCampaignConfigsResponse>;
}

export function createConversionGoalCampaignConfigServiceClient(
  handler: RequestHandler
): ConversionGoalCampaignConfigService {
  return {
    MutateConversionGoalCampaignConfigs(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/conversionGoalCampaignConfigs:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateConversionGoalCampaignConfigsResponse>;
    },
  };
}
// Request message for
// [CustomerConversionGoalService.MutateCustomerConversionGoals][google.ads.googleads.v9.services.CustomerConversionGoalService.MutateCustomerConversionGoals].
export type MutateCustomerConversionGoalsRequest = {
  // Required. The ID of the customer whose customer conversion goals are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customer conversion goal.
  //
  // Behaviors: REQUIRED
  operations: CustomerConversionGoalOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (update) on a customer conversion goal.
export type CustomerConversionGoalOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The customer conversion goal is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_CustomerConversionGoal;
};

// Biddability control for conversion actions with a matching category and
// origin.
export type googleadsgoogleadsv9resources_CustomerConversionGoal = {
  // Immutable. The resource name of the customer conversion goal.
  // Customer conversion goal resource names have the form:
  // `customers/{customer_id}/customerConversionGoals/{category}~{origin}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // The conversion category of this customer conversion goal. Only
  // conversion actions that have this category will be included in this goal.
  category: googleadsgoogleadsv9enums_ConversionActionCategoryEnum_ConversionActionCategory | undefined;
  // The conversion origin of this customer conversion goal. Only
  // conversion actions that have this conversion origin will be included in
  // this goal.
  origin: googleadsgoogleadsv9enums_ConversionOriginEnum_ConversionOrigin | undefined;
  // The biddability of the customer conversion goal.
  biddable: boolean | undefined;
};

// Response message for a customer conversion goal mutate.
export type MutateCustomerConversionGoalsResponse = {
  // All results for the mutate.
  results: MutateCustomerConversionGoalResult[] | undefined;
};

// The result for the customer conversion goal mutate.
export type MutateCustomerConversionGoalResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage customer conversion goal.
export interface CustomerConversionGoalService {
  // Creates, updates or removes customer conversion goals. Operation statuses
  // are returned.
  MutateCustomerConversionGoals(request: MutateCustomerConversionGoalsRequest): Promise<MutateCustomerConversionGoalsResponse>;
}

export function createCustomerConversionGoalServiceClient(
  handler: RequestHandler
): CustomerConversionGoalService {
  return {
    MutateCustomerConversionGoals(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerConversionGoals:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerConversionGoalsResponse>;
    },
  };
}
// Request message for [SharedCriterionService.GetSharedCriterion][google.ads.googleads.v9.services.SharedCriterionService.GetSharedCriterion].
export type GetSharedCriterionRequest = {
  // Required. The resource name of the shared criterion to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [SharedCriterionService.MutateSharedCriteria][google.ads.googleads.v9.services.SharedCriterionService.MutateSharedCriteria].
export type MutateSharedCriteriaRequest = {
  // Required. The ID of the customer whose shared criteria are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual shared criteria.
  //
  // Behaviors: REQUIRED
  operations: SharedCriterionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on an shared criterion.
export type SharedCriterionOperation = {
  // Create operation: No resource name is expected for the new shared
  // criterion.
  create?: googleadsgoogleadsv9resources_SharedCriterion;
  // Remove operation: A resource name for the removed shared criterion is
  // expected, in this format:
  // `customers/{customer_id}/sharedCriteria/{shared_set_id}~{criterion_id}`
  remove?: string;
};

// A criterion belonging to a shared set.
export type googleadsgoogleadsv9resources_SharedCriterion = {
  // Immutable. The resource name of the shared criterion.
  // Shared set resource names have the form:
  // `customers/{customer_id}/sharedCriteria/{shared_set_id}~{criterion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The shared set to which the shared criterion belongs.
  //
  // Behaviors: IMMUTABLE
  sharedSet?: string;
  // Output only. The ID of the criterion.
  // This field is ignored for mutates.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // Output only. The type of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_CriterionTypeEnum_CriterionType | undefined;
  // Immutable. Keyword.
  //
  // Behaviors: IMMUTABLE
  keyword?: googleadsgoogleadsv9common_KeywordInfo;
  // Immutable. YouTube Video.
  //
  // Behaviors: IMMUTABLE
  youtubeVideo?: googleadsgoogleadsv9common_YouTubeVideoInfo;
  // Immutable. YouTube Channel.
  //
  // Behaviors: IMMUTABLE
  youtubeChannel?: googleadsgoogleadsv9common_YouTubeChannelInfo;
  // Immutable. Placement.
  //
  // Behaviors: IMMUTABLE
  placement?: googleadsgoogleadsv9common_PlacementInfo;
  // Immutable. Mobile App Category.
  //
  // Behaviors: IMMUTABLE
  mobileAppCategory?: googleadsgoogleadsv9common_MobileAppCategoryInfo;
  // Immutable. Mobile application.
  //
  // Behaviors: IMMUTABLE
  mobileApplication?: googleadsgoogleadsv9common_MobileApplicationInfo;
};

// Response message for a shared criterion mutate.
export type MutateSharedCriteriaResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateSharedCriterionResult[] | undefined;
};

// The result for the shared criterion mutate.
export type MutateSharedCriterionResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated shared criterion with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  sharedCriterion: googleadsgoogleadsv9resources_SharedCriterion | undefined;
};

// Service to manage shared criteria.
export interface SharedCriterionService {
  // Returns the requested shared criterion in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetSharedCriterion(request: GetSharedCriterionRequest): Promise<googleadsgoogleadsv9resources_SharedCriterion>;
  // Creates or removes shared criteria. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateSharedCriteria(request: MutateSharedCriteriaRequest): Promise<MutateSharedCriteriaResponse>;
}

export function createSharedCriterionServiceClient(
  handler: RequestHandler
): SharedCriterionService {
  return {
    GetSharedCriterion(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_SharedCriterion>;
    },
    MutateSharedCriteria(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/sharedCriteria:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateSharedCriteriaResponse>;
    },
  };
}
// Request message for [CampaignSharedSetService.GetCampaignSharedSet][google.ads.googleads.v9.services.CampaignSharedSetService.GetCampaignSharedSet].
export type GetCampaignSharedSetRequest = {
  // Required. The resource name of the campaign shared set to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignSharedSetService.MutateCampaignSharedSets][google.ads.googleads.v9.services.CampaignSharedSetService.MutateCampaignSharedSets].
export type MutateCampaignSharedSetsRequest = {
  // Required. The ID of the customer whose campaign shared sets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign shared sets.
  //
  // Behaviors: REQUIRED
  operations: CampaignSharedSetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on an campaign shared set.
export type CampaignSharedSetOperation = {
  // Create operation: No resource name is expected for the new campaign
  // shared set.
  create?: googleadsgoogleadsv9resources_CampaignSharedSet;
  // Remove operation: A resource name for the removed campaign shared set is
  // expected, in this format:
  // `customers/{customer_id}/campaignSharedSets/{campaign_id}~{shared_set_id}`
  remove?: string;
};

// CampaignSharedSets are used for managing the shared sets associated with a
// campaign.
export type googleadsgoogleadsv9resources_CampaignSharedSet = {
  // Immutable. The resource name of the campaign shared set.
  // Campaign shared set resource names have the form:
  // `customers/{customer_id}/campaignSharedSets/{campaign_id}~{shared_set_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign to which the campaign shared set belongs.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // Immutable. The shared set associated with the campaign. This may be a negative keyword
  // shared set of another customer. This customer should be a manager of the
  // other customer, otherwise the campaign shared set will exist but have no
  // serving effect. Only negative keyword shared sets can be associated with
  // Shopping campaigns. Only negative placement shared sets can be associated
  // with Display mobile app campaigns.
  //
  // Behaviors: IMMUTABLE
  sharedSet?: string;
  // Output only. The status of this campaign shared set. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CampaignSharedSetStatusEnum_CampaignSharedSetStatus | undefined;
};

// Enum listing the possible campaign shared set statuses.
export type googleadsgoogleadsv9enums_CampaignSharedSetStatusEnum_CampaignSharedSetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The campaign shared set is enabled.
  | "ENABLED"
  // The campaign shared set is removed and can no longer be used.
  | "REMOVED";
// Response message for a campaign shared set mutate.
export type MutateCampaignSharedSetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignSharedSetResult[] | undefined;
};

// The result for the campaign shared set mutate.
export type MutateCampaignSharedSetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign shared set with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignSharedSet: googleadsgoogleadsv9resources_CampaignSharedSet | undefined;
};

// Service to manage campaign shared sets.
export interface CampaignSharedSetService {
  // Returns the requested campaign shared set in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignSharedSet(request: GetCampaignSharedSetRequest): Promise<googleadsgoogleadsv9resources_CampaignSharedSet>;
  // Creates or removes campaign shared sets. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignSharedSetError]()
  // [ContextError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateCampaignSharedSets(request: MutateCampaignSharedSetsRequest): Promise<MutateCampaignSharedSetsResponse>;
}

export function createCampaignSharedSetServiceClient(
  handler: RequestHandler
): CampaignSharedSetService {
  return {
    GetCampaignSharedSet(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignSharedSet>;
    },
    MutateCampaignSharedSets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignSharedSets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignSharedSetsResponse>;
    },
  };
}
// Request message for [KeywordThemeConstantService.GetKeywordThemeConstant][google.ads.googleads.v9.services.KeywordThemeConstantService.GetKeywordThemeConstant].
export type GetKeywordThemeConstantRequest = {
  // Required. The resource name of the keyword theme constant to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [KeywordThemeConstantService.SuggestKeywordThemeConstants][google.ads.googleads.v9.services.KeywordThemeConstantService.SuggestKeywordThemeConstants].
export type SuggestKeywordThemeConstantsRequest = {
  // The query text of a keyword theme that will be used to map to similar
  // keyword themes. E.g. "plumber" or "roofer".
  queryText: string | undefined;
  // Upper-case, two-letter country code as defined by ISO-3166. This for
  // refining the scope of the query, default to 'US' if not set.
  countryCode: string | undefined;
  // The two letter language code for get corresponding keyword theme for
  // refining the scope of the query, default to 'en' if not set.
  languageCode: string | undefined;
};

// Response message for
// [KeywordThemeConstantService.SuggestKeywordThemeConstants][google.ads.googleads.v9.services.KeywordThemeConstantService.SuggestKeywordThemeConstants].
export type SuggestKeywordThemeConstantsResponse = {
  // Smart Campaign keyword theme suggestions.
  keywordThemeConstants: googleadsgoogleadsv9resources_KeywordThemeConstant[] | undefined;
};

// A Smart Campaign keyword theme constant.
export type googleadsgoogleadsv9resources_KeywordThemeConstant = {
  // Output only. The resource name of the keyword theme constant.
  // Keyword theme constant resource names have the form:
  // `keywordThemeConstants/{keyword_theme_id}~{sub_keyword_theme_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ISO-3166 Alpha-2 country code of the constant, eg. "US".
  // To display and query matching purpose, the keyword theme needs to be
  // localized.
  //
  // Behaviors: OUTPUT_ONLY
  countryCode?: string;
  // Output only. The ISO-639-1 language code with 2 letters of the constant, eg. "en".
  // To display and query matching purpose, the keyword theme needs to be
  // localized.
  //
  // Behaviors: OUTPUT_ONLY
  languageCode?: string;
  // Output only. The display name of the keyword theme or sub keyword theme.
  //
  // Behaviors: OUTPUT_ONLY
  displayName?: string;
};

// Service to fetch Smart Campaign keyword themes.
export interface KeywordThemeConstantService {
  // Returns the requested keyword theme constant in full detail.
  GetKeywordThemeConstant(request: GetKeywordThemeConstantRequest): Promise<googleadsgoogleadsv9resources_KeywordThemeConstant>;
  // Returns KeywordThemeConstant suggestions by keyword themes.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  SuggestKeywordThemeConstants(request: SuggestKeywordThemeConstantsRequest): Promise<SuggestKeywordThemeConstantsResponse>;
}

export function createKeywordThemeConstantServiceClient(
  handler: RequestHandler
): KeywordThemeConstantService {
  return {
    GetKeywordThemeConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordThemeConstant>;
    },
    SuggestKeywordThemeConstants(request) {
      const path = `v9/keywordThemeConstants:suggest`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SuggestKeywordThemeConstantsResponse>;
    },
  };
}
// Request message for
// [CampaignCriterionSimulationService.GetCampaignCriterionSimulation][google.ads.googleads.v9.services.CampaignCriterionSimulationService.GetCampaignCriterionSimulation].
export type GetCampaignCriterionSimulationRequest = {
  // Required. The resource name of the campaign criterion simulation to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch campaign criterion simulations.
export interface CampaignCriterionSimulationService {
  // Returns the requested campaign criterion simulation in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignCriterionSimulation(request: GetCampaignCriterionSimulationRequest): Promise<googleadsgoogleadsv9resources_CampaignCriterionSimulation>;
}

export function createCampaignCriterionSimulationServiceClient(
  handler: RequestHandler
): CampaignCriterionSimulationService {
  return {
    GetCampaignCriterionSimulation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignCriterionSimulation>;
    },
  };
}
// A campaign criterion simulation. Supported combinations of advertising
// channel type, criterion ids, simulation type and simulation modification
// method is detailed below respectively.
// 1. SEARCH - 30000,30001,30002 - BID_MODIFIER - UNIFORM
// 2. DISPLAY - 30001 - BID_MODIFIER - UNIFORM
export type googleadsgoogleadsv9resources_CampaignCriterionSimulation = {
  // Output only. The resource name of the campaign criterion simulation.
  // Campaign criterion simulation resource names have the form:
  // `customers/{customer_id}/campaignCriterionSimulations/{campaign_id}~{criterion_id}~{type}~{modification_method}~{start_date}~{end_date}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Campaign ID of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  campaignId?: number;
  // Output only. Criterion ID of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // Output only. The field that the simulation modifies.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_SimulationTypeEnum_SimulationType | undefined;
  // Output only. How the simulation modifies the field.
  //
  // Behaviors: OUTPUT_ONLY
  modificationMethod: googleadsgoogleadsv9enums_SimulationModificationMethodEnum_SimulationModificationMethod | undefined;
  // Output only. First day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  startDate?: string;
  // Output only. Last day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  endDate?: string;
  // Output only. Simulation points if the simulation type is BID_MODIFIER.
  //
  // Behaviors: OUTPUT_ONLY
  bidModifierPointList?: googleadsgoogleadsv9common_BidModifierSimulationPointList;
};

// A container for simulation points for simulations of type BID_MODIFIER.
export type googleadsgoogleadsv9common_BidModifierSimulationPointList = {
  // Projected metrics for a series of bid modifier amounts.
  points: googleadsgoogleadsv9common_BidModifierSimulationPoint[] | undefined;
};

// Projected metrics for a specific bid modifier amount.
export type googleadsgoogleadsv9common_BidModifierSimulationPoint = {
  // The simulated bid modifier upon which projected metrics are based.
  bidModifier?: number;
  // Projected number of biddable conversions.
  // Only search advertising channel type supports this field.
  biddableConversions?: number;
  // Projected total value of biddable conversions.
  // Only search advertising channel type supports this field.
  biddableConversionsValue?: number;
  // Projected number of clicks.
  clicks?: number;
  // Projected cost in micros.
  costMicros?: number;
  // Projected number of impressions.
  impressions?: number;
  // Projected number of top slot impressions.
  // Only search advertising channel type supports this field.
  topSlotImpressions?: number;
  // Projected number of biddable conversions for the parent resource.
  // Only search advertising channel type supports this field.
  parentBiddableConversions?: number;
  // Projected total value of biddable conversions for the parent resource.
  // Only search advertising channel type supports this field.
  parentBiddableConversionsValue?: number;
  // Projected number of clicks for the parent resource.
  parentClicks?: number;
  // Projected cost in micros for the parent resource.
  parentCostMicros?: number;
  // Projected number of impressions for the parent resource.
  parentImpressions?: number;
  // Projected number of top slot impressions for the parent resource.
  // Only search advertising channel type supports this field.
  parentTopSlotImpressions?: number;
  // Projected minimum daily budget that must be available to the parent
  // resource to realize this simulation.
  parentRequiredBudgetMicros?: number;
};

// Request message for [FeedMappingService.GetFeedMapping][google.ads.googleads.v9.services.FeedMappingService.GetFeedMapping].
export type GetFeedMappingRequest = {
  // Required. The resource name of the feed mapping to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [FeedMappingService.MutateFeedMappings][google.ads.googleads.v9.services.FeedMappingService.MutateFeedMappings].
export type MutateFeedMappingsRequest = {
  // Required. The ID of the customer whose feed mappings are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual feed mappings.
  //
  // Behaviors: REQUIRED
  operations: FeedMappingOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on a feed mapping.
export type FeedMappingOperation = {
  // Create operation: No resource name is expected for the new feed mapping.
  create?: googleadsgoogleadsv9resources_FeedMapping;
  // Remove operation: A resource name for the removed feed mapping is
  // expected, in this format:
  // `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
  remove?: string;
};

// A feed mapping.
export type googleadsgoogleadsv9resources_FeedMapping = {
  // Immutable. The resource name of the feed mapping.
  // Feed mapping resource names have the form:
  // `customers/{customer_id}/feedMappings/{feed_id}~{feed_mapping_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The feed of this feed mapping.
  //
  // Behaviors: IMMUTABLE
  feed?: string;
  // Immutable. Feed attributes to field mappings. These mappings are a one-to-many
  // relationship meaning that 1 feed attribute can be used to populate
  // multiple placeholder fields, but 1 placeholder field can only draw
  // data from 1 feed attribute. Ad Customizer is an exception, 1 placeholder
  // field can be mapped to multiple feed attributes. Required.
  //
  // Behaviors: IMMUTABLE
  attributeFieldMappings: googleadsgoogleadsv9resources_AttributeFieldMapping[] | undefined;
  // Output only. Status of the feed mapping.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedMappingStatusEnum_FeedMappingStatus | undefined;
  // Immutable. The placeholder type of this mapping (i.e., if the mapping maps feed
  // attributes to placeholder fields).
  //
  // Behaviors: IMMUTABLE
  placeholderType?: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType;
  // Immutable. The criterion type of this mapping (i.e., if the mapping maps feed
  // attributes to criterion fields).
  //
  // Behaviors: IMMUTABLE
  criterionType?: googleadsgoogleadsv9enums_FeedMappingCriterionTypeEnum_FeedMappingCriterionType;
};

// Maps from feed attribute id to a placeholder or criterion field id.
export type googleadsgoogleadsv9resources_AttributeFieldMapping = {
  // Immutable. Feed attribute from which to map.
  //
  // Behaviors: IMMUTABLE
  feedAttributeId?: number;
  // Output only. The placeholder field ID. If a placeholder field enum is not published in
  // the current API version, then this field will be populated and the field
  // oneof will be empty.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  fieldId?: number;
  // Immutable. Sitelink Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  sitelinkField?: googleadsgoogleadsv9enums_SitelinkPlaceholderFieldEnum_SitelinkPlaceholderField;
  // Immutable. Call Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  callField?: googleadsgoogleadsv9enums_CallPlaceholderFieldEnum_CallPlaceholderField;
  // Immutable. App Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  appField?: googleadsgoogleadsv9enums_AppPlaceholderFieldEnum_AppPlaceholderField;
  // Output only. Location Placeholder Fields. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  locationField?: googleadsgoogleadsv9enums_LocationPlaceholderFieldEnum_LocationPlaceholderField;
  // Output only. Affiliate Location Placeholder Fields. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  affiliateLocationField?: googleadsgoogleadsv9enums_AffiliateLocationPlaceholderFieldEnum_AffiliateLocationPlaceholderField;
  // Immutable. Callout Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  calloutField?: googleadsgoogleadsv9enums_CalloutPlaceholderFieldEnum_CalloutPlaceholderField;
  // Immutable. Structured Snippet Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  structuredSnippetField?: googleadsgoogleadsv9enums_StructuredSnippetPlaceholderFieldEnum_StructuredSnippetPlaceholderField;
  // Immutable. Message Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  messageField?: googleadsgoogleadsv9enums_MessagePlaceholderFieldEnum_MessagePlaceholderField;
  // Immutable. Price Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  priceField?: googleadsgoogleadsv9enums_PricePlaceholderFieldEnum_PricePlaceholderField;
  // Immutable. Promotion Placeholder Fields.
  //
  // Behaviors: IMMUTABLE
  promotionField?: googleadsgoogleadsv9enums_PromotionPlaceholderFieldEnum_PromotionPlaceholderField;
  // Immutable. Ad Customizer Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  adCustomizerField?: googleadsgoogleadsv9enums_AdCustomizerPlaceholderFieldEnum_AdCustomizerPlaceholderField;
  // Immutable. Dynamic Search Ad Page Feed Fields.
  //
  // Behaviors: IMMUTABLE
  dsaPageFeedField?: googleadsgoogleadsv9enums_DsaPageFeedCriterionFieldEnum_DsaPageFeedCriterionField;
  // Immutable. Location Target Fields.
  //
  // Behaviors: IMMUTABLE
  locationExtensionTargetingField?: googleadsgoogleadsv9enums_LocationExtensionTargetingCriterionFieldEnum_LocationExtensionTargetingCriterionField;
  // Immutable. Education Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  educationField?: googleadsgoogleadsv9enums_EducationPlaceholderFieldEnum_EducationPlaceholderField;
  // Immutable. Flight Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  flightField?: googleadsgoogleadsv9enums_FlightPlaceholderFieldEnum_FlightPlaceholderField;
  // Immutable. Custom Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  customField?: googleadsgoogleadsv9enums_CustomPlaceholderFieldEnum_CustomPlaceholderField;
  // Immutable. Hotel Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  hotelField?: googleadsgoogleadsv9enums_HotelPlaceholderFieldEnum_HotelPlaceholderField;
  // Immutable. Real Estate Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  realEstateField?: googleadsgoogleadsv9enums_RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField;
  // Immutable. Travel Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  travelField?: googleadsgoogleadsv9enums_TravelPlaceholderFieldEnum_TravelPlaceholderField;
  // Immutable. Local Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  localField?: googleadsgoogleadsv9enums_LocalPlaceholderFieldEnum_LocalPlaceholderField;
  // Immutable. Job Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  jobField?: googleadsgoogleadsv9enums_JobPlaceholderFieldEnum_JobPlaceholderField;
  // Immutable. Image Placeholder Fields
  //
  // Behaviors: IMMUTABLE
  imageField?: googleadsgoogleadsv9enums_ImagePlaceholderFieldEnum_ImagePlaceholderField;
};

// Possible values for Sitelink placeholder fields.
export type googleadsgoogleadsv9enums_SitelinkPlaceholderFieldEnum_SitelinkPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The link text for your sitelink.
  | "TEXT"
  // Data Type: STRING. First line of the sitelink description.
  | "LINE_1"
  // Data Type: STRING. Second line of the sitelink description.
  | "LINE_2"
  // Data Type: URL_LIST. Final URLs for the sitelink when using Upgraded
  // URLs.
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final Mobile URLs for the sitelink when using
  // Upgraded URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the sitelink when using Upgraded
  // URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Final URL suffix for sitelink when using parallel
  // tracking.
  | "FINAL_URL_SUFFIX";
// Possible values for Call placeholder fields.
export type googleadsgoogleadsv9enums_CallPlaceholderFieldEnum_CallPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The advertiser's phone number to append to the ad.
  | "PHONE_NUMBER"
  // Data Type: STRING. Uppercase two-letter country code of the advertiser's
  // phone number.
  | "COUNTRY_CODE"
  // Data Type: BOOLEAN. Indicates whether call tracking is enabled. Default:
  // true.
  | "TRACKED"
  // Data Type: INT64. The ID of an AdCallMetricsConversion object. This
  // object contains the phoneCallDurationfield which is the minimum duration
  // (in seconds) of a call to be considered a conversion.
  | "CONVERSION_TYPE_ID"
  // Data Type: STRING. Indicates whether this call extension uses its own
  // call conversion setting or follows the account level setting.
  // Valid values are: USE_ACCOUNT_LEVEL_CALL_CONVERSION_ACTION and
  // USE_RESOURCE_LEVEL_CALL_CONVERSION_ACTION.
  | "CONVERSION_REPORTING_STATE";
// Possible values for App placeholder fields.
export type googleadsgoogleadsv9enums_AppPlaceholderFieldEnum_AppPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: INT64. The application store that the target application
  // belongs to. Valid values are: 1 = Apple iTunes Store; 2 = Google Play
  // Store.
  | "STORE"
  // Data Type: STRING. The store-specific ID for the target application.
  | "ID"
  // Data Type: STRING. The visible text displayed when the link is rendered
  // in an ad.
  | "LINK_TEXT"
  // Data Type: STRING. The destination URL of the in-app link.
  | "URL"
  // Data Type: URL_LIST. Final URLs for the in-app link when using Upgraded
  // URLs.
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final Mobile URLs for the in-app link when using
  // Upgraded URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the in-app link when using Upgraded
  // URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Final URL suffix for the in-app link when using
  // parallel tracking.
  | "FINAL_URL_SUFFIX";
// Possible values for Location placeholder fields.
export type googleadsgoogleadsv9enums_LocationPlaceholderFieldEnum_LocationPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The name of the business.
  | "BUSINESS_NAME"
  // Data Type: STRING. Line 1 of the business address.
  | "ADDRESS_LINE_1"
  // Data Type: STRING. Line 2 of the business address.
  | "ADDRESS_LINE_2"
  // Data Type: STRING. City of the business address.
  | "CITY"
  // Data Type: STRING. Province of the business address.
  | "PROVINCE"
  // Data Type: STRING. Postal code of the business address.
  | "POSTAL_CODE"
  // Data Type: STRING. Country code of the business address.
  | "COUNTRY_CODE"
  // Data Type: STRING. Phone number of the business.
  | "PHONE_NUMBER";
// Possible values for Affiliate Location placeholder fields.
export type googleadsgoogleadsv9enums_AffiliateLocationPlaceholderFieldEnum_AffiliateLocationPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The name of the business.
  | "BUSINESS_NAME"
  // Data Type: STRING. Line 1 of the business address.
  | "ADDRESS_LINE_1"
  // Data Type: STRING. Line 2 of the business address.
  | "ADDRESS_LINE_2"
  // Data Type: STRING. City of the business address.
  | "CITY"
  // Data Type: STRING. Province of the business address.
  | "PROVINCE"
  // Data Type: STRING. Postal code of the business address.
  | "POSTAL_CODE"
  // Data Type: STRING. Country code of the business address.
  | "COUNTRY_CODE"
  // Data Type: STRING. Phone number of the business.
  | "PHONE_NUMBER"
  // Data Type: STRING. Language code of the business.
  | "LANGUAGE_CODE"
  // Data Type: INT64. ID of the chain.
  | "CHAIN_ID"
  // Data Type: STRING. Name of the chain.
  | "CHAIN_NAME";
// Possible values for Callout placeholder fields.
export type googleadsgoogleadsv9enums_CalloutPlaceholderFieldEnum_CalloutPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Callout text.
  | "CALLOUT_TEXT";
// Possible values for Structured Snippet placeholder fields.
export type googleadsgoogleadsv9enums_StructuredSnippetPlaceholderFieldEnum_StructuredSnippetPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The category of snippet of your products/services.
  // Must match exactly one of the predefined structured snippets headers.
  // For a list, visit
  // https://developers.google.com/adwords/api/docs/appendix/structured-snippet-headers
  | "HEADER"
  // Data Type: STRING_LIST. Text values that describe your products/services.
  // All text must be family safe. Special or non-ASCII characters are not
  // permitted. A snippet can be at most 25 characters.
  | "SNIPPETS";
// Possible values for Message placeholder fields.
export type googleadsgoogleadsv9enums_MessagePlaceholderFieldEnum_MessagePlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The name of your business.
  | "BUSINESS_NAME"
  // Data Type: STRING. Country code of phone number.
  | "COUNTRY_CODE"
  // Data Type: STRING. A phone number that's capable of sending and receiving
  // text messages.
  | "PHONE_NUMBER"
  // Data Type: STRING. The text that will go in your click-to-message ad.
  | "MESSAGE_EXTENSION_TEXT"
  // Data Type: STRING. The message text automatically shows in people's
  // messaging apps when they tap to send you a message.
  | "MESSAGE_TEXT";
// Possible values for Price placeholder fields.
export type googleadsgoogleadsv9enums_PricePlaceholderFieldEnum_PricePlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The type of your price feed. Must match one of the
  // predefined price feed type exactly.
  | "TYPE"
  // Data Type: STRING. The qualifier of each price. Must match one of the
  // predefined price qualifiers exactly.
  | "PRICE_QUALIFIER"
  // Data Type: URL. Tracking template for the price feed when using Upgraded
  // URLs.
  | "TRACKING_TEMPLATE"
  // Data Type: STRING. Language of the price feed. Must match one of the
  // available available locale codes exactly.
  | "LANGUAGE"
  // Data Type: STRING. Final URL suffix for the price feed when using
  // parallel tracking.
  | "FINAL_URL_SUFFIX"
  // Data Type: STRING. The header of item 1 of the table.
  | "ITEM_1_HEADER"
  // Data Type: STRING. The description of item 1 of the table.
  | "ITEM_1_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 1 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_1_PRICE"
  // Data Type: STRING. The price unit of item 1 of the table. Must match one
  // of the predefined price units.
  | "ITEM_1_UNIT"
  // Data Type: URL_LIST. The final URLs of item 1 of the table when using
  // Upgraded URLs.
  | "ITEM_1_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 1 of the table when
  // using Upgraded URLs.
  | "ITEM_1_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 2 of the table.
  | "ITEM_2_HEADER"
  // Data Type: STRING. The description of item 2 of the table.
  | "ITEM_2_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 2 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_2_PRICE"
  // Data Type: STRING. The price unit of item 2 of the table. Must match one
  // of the predefined price units.
  | "ITEM_2_UNIT"
  // Data Type: URL_LIST. The final URLs of item 2 of the table when using
  // Upgraded URLs.
  | "ITEM_2_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 2 of the table when
  // using Upgraded URLs.
  | "ITEM_2_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 3 of the table.
  | "ITEM_3_HEADER"
  // Data Type: STRING. The description of item 3 of the table.
  | "ITEM_3_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 3 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_3_PRICE"
  // Data Type: STRING. The price unit of item 3 of the table. Must match one
  // of the predefined price units.
  | "ITEM_3_UNIT"
  // Data Type: URL_LIST. The final URLs of item 3 of the table when using
  // Upgraded URLs.
  | "ITEM_3_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 3 of the table when
  // using Upgraded URLs.
  | "ITEM_3_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 4 of the table.
  | "ITEM_4_HEADER"
  // Data Type: STRING. The description of item 4 of the table.
  | "ITEM_4_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 4 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_4_PRICE"
  // Data Type: STRING. The price unit of item 4 of the table. Must match one
  // of the predefined price units.
  | "ITEM_4_UNIT"
  // Data Type: URL_LIST. The final URLs of item 4 of the table when using
  // Upgraded URLs.
  | "ITEM_4_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 4 of the table when
  // using Upgraded URLs.
  | "ITEM_4_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 5 of the table.
  | "ITEM_5_HEADER"
  // Data Type: STRING. The description of item 5 of the table.
  | "ITEM_5_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 5 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_5_PRICE"
  // Data Type: STRING. The price unit of item 5 of the table. Must match one
  // of the predefined price units.
  | "ITEM_5_UNIT"
  // Data Type: URL_LIST. The final URLs of item 5 of the table when using
  // Upgraded URLs.
  | "ITEM_5_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 5 of the table when
  // using Upgraded URLs.
  | "ITEM_5_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 6 of the table.
  | "ITEM_6_HEADER"
  // Data Type: STRING. The description of item 6 of the table.
  | "ITEM_6_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 6 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_6_PRICE"
  // Data Type: STRING. The price unit of item 6 of the table. Must match one
  // of the predefined price units.
  | "ITEM_6_UNIT"
  // Data Type: URL_LIST. The final URLs of item 6 of the table when using
  // Upgraded URLs.
  | "ITEM_6_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 6 of the table when
  // using Upgraded URLs.
  | "ITEM_6_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 7 of the table.
  | "ITEM_7_HEADER"
  // Data Type: STRING. The description of item 7 of the table.
  | "ITEM_7_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 7 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_7_PRICE"
  // Data Type: STRING. The price unit of item 7 of the table. Must match one
  // of the predefined price units.
  | "ITEM_7_UNIT"
  // Data Type: URL_LIST. The final URLs of item 7 of the table when using
  // Upgraded URLs.
  | "ITEM_7_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 7 of the table when
  // using Upgraded URLs.
  | "ITEM_7_FINAL_MOBILE_URLS"
  // Data Type: STRING. The header of item 8 of the table.
  | "ITEM_8_HEADER"
  // Data Type: STRING. The description of item 8 of the table.
  | "ITEM_8_DESCRIPTION"
  // Data Type: MONEY. The price (money with currency) of item 8 of the table,
  // e.g., 30 USD. The currency must match one of the available currencies.
  | "ITEM_8_PRICE"
  // Data Type: STRING. The price unit of item 8 of the table. Must match one
  // of the predefined price units.
  | "ITEM_8_UNIT"
  // Data Type: URL_LIST. The final URLs of item 8 of the table when using
  // Upgraded URLs.
  | "ITEM_8_FINAL_URLS"
  // Data Type: URL_LIST. The final mobile URLs of item 8 of the table when
  // using Upgraded URLs.
  | "ITEM_8_FINAL_MOBILE_URLS";
// Possible values for Promotion placeholder fields.
export type googleadsgoogleadsv9enums_PromotionPlaceholderFieldEnum_PromotionPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. The text that appears on the ad when the extension is
  // shown.
  | "PROMOTION_TARGET"
  // Data Type: STRING. Allows you to add "up to" phrase to the promotion,
  // in case you have variable promotion rates.
  | "DISCOUNT_MODIFIER"
  // Data Type: INT64. Takes a value in micros, where 1 million micros
  // represents 1%, and is shown as a percentage when rendered.
  | "PERCENT_OFF"
  // Data Type: MONEY. Requires a currency and an amount of money.
  | "MONEY_AMOUNT_OFF"
  // Data Type: STRING. A string that the user enters to get the discount.
  | "PROMOTION_CODE"
  // Data Type: MONEY. A minimum spend before the user qualifies for the
  // promotion.
  | "ORDERS_OVER_AMOUNT"
  // Data Type: DATE. The start date of the promotion.
  | "PROMOTION_START"
  // Data Type: DATE. The end date of the promotion.
  | "PROMOTION_END"
  // Data Type: STRING. Describes the associated event for the promotion using
  // one of the PromotionExtensionOccasion enum values, for example NEW_YEARS.
  | "OCCASION"
  // Data Type: URL_LIST. Final URLs to be used in the ad when using Upgraded
  // URLs.
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. A string represented by a language code for the
  // promotion.
  | "LANGUAGE"
  // Data Type: STRING. Final URL suffix for the ad when using parallel
  // tracking.
  | "FINAL_URL_SUFFIX";
// Possible values for Ad Customizers placeholder fields.
export type googleadsgoogleadsv9enums_AdCustomizerPlaceholderFieldEnum_AdCustomizerPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: INT64. Integer value to be inserted.
  | "INTEGER"
  // Data Type: STRING. Price value to be inserted.
  | "PRICE"
  // Data Type: DATE_TIME. Date value to be inserted.
  | "DATE"
  // Data Type: STRING. String value to be inserted.
  | "STRING";
// Possible values for Dynamic Search Ad Page Feed criterion fields.
export type googleadsgoogleadsv9enums_DsaPageFeedCriterionFieldEnum_DsaPageFeedCriterionField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: URL or URL_LIST. URL of the web page you want to target.
  | "PAGE_URL"
  // Data Type: STRING_LIST. The labels that will help you target ads within
  // your page feed.
  | "LABEL";
// Possible values for Location Extension Targeting criterion fields.
export type googleadsgoogleadsv9enums_LocationExtensionTargetingCriterionFieldEnum_LocationExtensionTargetingCriterionField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Line 1 of the business address.
  | "ADDRESS_LINE_1"
  // Data Type: STRING. Line 2 of the business address.
  | "ADDRESS_LINE_2"
  // Data Type: STRING. City of the business address.
  | "CITY"
  // Data Type: STRING. Province of the business address.
  | "PROVINCE"
  // Data Type: STRING. Postal code of the business address.
  | "POSTAL_CODE"
  // Data Type: STRING. Country code of the business address.
  | "COUNTRY_CODE";
// Possible values for Education placeholder fields.
export type googleadsgoogleadsv9enums_EducationPlaceholderFieldEnum_EducationPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. Combination of PROGRAM ID and LOCATION ID
  // must be unique per offer.
  | "PROGRAM_ID"
  // Data Type: STRING. Combination of PROGRAM ID and LOCATION ID must be
  // unique per offer.
  | "LOCATION_ID"
  // Data Type: STRING. Required. Main headline with program name to be shown
  // in dynamic ad.
  | "PROGRAM_NAME"
  // Data Type: STRING. Area of study that can be shown in dynamic ad.
  | "AREA_OF_STUDY"
  // Data Type: STRING. Description of program that can be shown in dynamic
  // ad.
  | "PROGRAM_DESCRIPTION"
  // Data Type: STRING. Name of school that can be shown in dynamic ad.
  | "SCHOOL_NAME"
  // Data Type: STRING. Complete school address, including postal code.
  | "ADDRESS"
  // Data Type: URL. Image to be displayed in ads.
  | "THUMBNAIL_IMAGE_URL"
  // Data Type: URL. Alternative hosted file of image to be used in the ad.
  | "ALTERNATIVE_THUMBNAIL_IMAGE_URL"
  // Data Type: URL_LIST. Required. Final URLs to be used in ad when using
  // Upgraded URLs; the more specific the better (e.g. the individual URL of a
  // specific program and its location).
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended program IDs to show together
  // with this item.
  | "SIMILAR_PROGRAM_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Flight placeholder fields.
export type googleadsgoogleadsv9enums_FlightPlaceholderFieldEnum_FlightPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. Destination id. Example: PAR, LON.
  // For feed items that only have destination id, destination id must be a
  // unique key. For feed items that have both destination id and origin id,
  // then the combination must be a unique key.
  | "DESTINATION_ID"
  // Data Type: STRING. Origin id. Example: PAR, LON.
  // Optional. Combination of destination id and origin id must be unique per
  // offer.
  | "ORIGIN_ID"
  // Data Type: STRING. Required. Main headline with product name to be shown
  // in dynamic ad.
  | "FLIGHT_DESCRIPTION"
  // Data Type: STRING. Shorter names are recommended.
  | "ORIGIN_NAME"
  // Data Type: STRING. Shorter names are recommended.
  | "DESTINATION_NAME"
  // Data Type: STRING. Price to be shown in the ad.
  // Example: "100.00 USD"
  | "FLIGHT_PRICE"
  // Data Type: STRING. Formatted price to be shown in the ad.
  // Example: "Starting at $100.00 USD", "$80 - $100"
  | "FORMATTED_PRICE"
  // Data Type: STRING. Sale price to be shown in the ad.
  // Example: "80.00 USD"
  | "FLIGHT_SALE_PRICE"
  // Data Type: STRING. Formatted sale price to be shown in the ad.
  // Example: "On sale for $80.00", "$60 - $80"
  | "FORMATTED_SALE_PRICE"
  // Data Type: URL. Image to be displayed in the ad.
  | "IMAGE_URL"
  // Data Type: URL_LIST. Required. Final URLs for the ad when using Upgraded
  // URLs. User will be redirected to these URLs when they click on an ad, or
  // when they click on a specific flight for ads that show multiple
  // flights.
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended destination IDs to show
  // together with this item.
  | "SIMILAR_DESTINATION_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Custom placeholder fields.
export type googleadsgoogleadsv9enums_CustomPlaceholderFieldEnum_CustomPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. Combination ID and ID2 must be unique per
  // offer.
  | "ID"
  // Data Type: STRING. Combination ID and ID2 must be unique per offer.
  | "ID2"
  // Data Type: STRING. Required. Main headline with product name to be shown
  // in dynamic ad.
  | "ITEM_TITLE"
  // Data Type: STRING. Optional text to be shown in the image ad.
  | "ITEM_SUBTITLE"
  // Data Type: STRING. Optional description of the product to be shown in the
  // ad.
  | "ITEM_DESCRIPTION"
  // Data Type: STRING. Full address of your offer or service, including
  // postal code. This will be used to identify the closest product to the
  // user when there are multiple offers in the feed that are relevant to the
  // user.
  | "ITEM_ADDRESS"
  // Data Type: STRING. Price to be shown in the ad.
  // Example: "100.00 USD"
  | "PRICE"
  // Data Type: STRING. Formatted price to be shown in the ad.
  // Example: "Starting at $100.00 USD", "$80 - $100"
  | "FORMATTED_PRICE"
  // Data Type: STRING. Sale price to be shown in the ad.
  // Example: "80.00 USD"
  | "SALE_PRICE"
  // Data Type: STRING. Formatted sale price to be shown in the ad.
  // Example: "On sale for $80.00", "$60 - $80"
  | "FORMATTED_SALE_PRICE"
  // Data Type: URL. Image to be displayed in the ad. Highly recommended for
  // image ads.
  | "IMAGE_URL"
  // Data Type: STRING. Used as a recommendation engine signal to serve items
  // in the same category.
  | "ITEM_CATEGORY"
  // Data Type: URL_LIST. Final URLs for the ad when using Upgraded
  // URLs. User will be redirected to these URLs when they click on an ad, or
  // when they click on a specific product for ads that have multiple
  // products.
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended IDs to show together with
  // this item.
  | "SIMILAR_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Hotel placeholder fields.
export type googleadsgoogleadsv9enums_HotelPlaceholderFieldEnum_HotelPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. Unique ID.
  | "PROPERTY_ID"
  // Data Type: STRING. Required. Main headline with property name to be shown
  // in dynamic ad.
  | "PROPERTY_NAME"
  // Data Type: STRING. Name of destination to be shown in dynamic ad.
  | "DESTINATION_NAME"
  // Data Type: STRING. Description of destination to be shown in dynamic ad.
  | "DESCRIPTION"
  // Data Type: STRING. Complete property address, including postal code.
  | "ADDRESS"
  // Data Type: STRING. Price to be shown in the ad.
  // Example: "100.00 USD"
  | "PRICE"
  // Data Type: STRING. Formatted price to be shown in the ad.
  // Example: "Starting at $100.00 USD", "$80 - $100"
  | "FORMATTED_PRICE"
  // Data Type: STRING. Sale price to be shown in the ad.
  // Example: "80.00 USD"
  | "SALE_PRICE"
  // Data Type: STRING. Formatted sale price to be shown in the ad.
  // Example: "On sale for $80.00", "$60 - $80"
  | "FORMATTED_SALE_PRICE"
  // Data Type: URL. Image to be displayed in the ad.
  | "IMAGE_URL"
  // Data Type: STRING. Category of property used to group like items together
  // for recommendation engine.
  | "CATEGORY"
  // Data Type: INT64. Star rating (1 to 5) used to group like items
  // together for recommendation engine.
  | "STAR_RATING"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: URL_LIST. Required. Final URLs for the ad when using Upgraded
  // URLs. User will be redirected to these URLs when they click on an ad, or
  // when they click on a specific flight for ads that show multiple
  // flights.
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended property IDs to show together
  // with this item.
  | "SIMILAR_PROPERTY_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Real Estate placeholder fields.
export type googleadsgoogleadsv9enums_RealEstatePlaceholderFieldEnum_RealEstatePlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Unique ID.
  | "LISTING_ID"
  // Data Type: STRING. Main headline with listing name to be shown in dynamic
  // ad.
  | "LISTING_NAME"
  // Data Type: STRING. City name to be shown in dynamic ad.
  | "CITY_NAME"
  // Data Type: STRING. Description of listing to be shown in dynamic ad.
  | "DESCRIPTION"
  // Data Type: STRING. Complete listing address, including postal code.
  | "ADDRESS"
  // Data Type: STRING. Price to be shown in the ad.
  // Example: "100.00 USD"
  | "PRICE"
  // Data Type: STRING. Formatted price to be shown in the ad.
  // Example: "Starting at $100.00 USD", "$80 - $100"
  | "FORMATTED_PRICE"
  // Data Type: URL. Image to be displayed in the ad.
  | "IMAGE_URL"
  // Data Type: STRING. Type of property (house, condo, apartment, etc.) used
  // to group like items together for recommendation engine.
  | "PROPERTY_TYPE"
  // Data Type: STRING. Type of listing (resale, rental, foreclosure, etc.)
  // used to group like items together for recommendation engine.
  | "LISTING_TYPE"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: URL_LIST. Final URLs to be used in ad when using Upgraded
  // URLs; the more specific the better (e.g. the individual URL of a specific
  // listing and its location).
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended listing IDs to show together
  // with this item.
  | "SIMILAR_LISTING_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Travel placeholder fields.
export type googleadsgoogleadsv9enums_TravelPlaceholderFieldEnum_TravelPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. Destination id. Example: PAR, LON.
  // For feed items that only have destination id, destination id must be a
  // unique key. For feed items that have both destination id and origin id,
  // then the combination must be a unique key.
  | "DESTINATION_ID"
  // Data Type: STRING. Origin id. Example: PAR, LON.
  // Combination of DESTINATION_ID and ORIGIN_ID must be
  // unique per offer.
  | "ORIGIN_ID"
  // Data Type: STRING. Required. Main headline with name to be shown in
  // dynamic ad.
  | "TITLE"
  // Data Type: STRING. The destination name. Shorter names are recommended.
  | "DESTINATION_NAME"
  // Data Type: STRING. Origin name. Shorter names are recommended.
  | "ORIGIN_NAME"
  // Data Type: STRING. Price to be shown in the ad. Highly recommended for
  // dynamic ads.
  // Example: "100.00 USD"
  | "PRICE"
  // Data Type: STRING. Formatted price to be shown in the ad.
  // Example: "Starting at $100.00 USD", "$80 - $100"
  | "FORMATTED_PRICE"
  // Data Type: STRING. Sale price to be shown in the ad.
  // Example: "80.00 USD"
  | "SALE_PRICE"
  // Data Type: STRING. Formatted sale price to be shown in the ad.
  // Example: "On sale for $80.00", "$60 - $80"
  | "FORMATTED_SALE_PRICE"
  // Data Type: URL. Image to be displayed in the ad.
  | "IMAGE_URL"
  // Data Type: STRING. Category of travel offer used to group like items
  // together for recommendation engine.
  | "CATEGORY"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: STRING. Address of travel offer, including postal code.
  | "DESTINATION_ADDRESS"
  // Data Type: URL_LIST. Required. Final URLs to be used in ad, when using
  // Upgraded URLs; the more specific the better (e.g. the individual URL of a
  // specific travel offer and its location).
  | "FINAL_URL"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended destination IDs to show
  // together with this item.
  | "SIMILAR_DESTINATION_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Local placeholder fields.
export type googleadsgoogleadsv9enums_LocalPlaceholderFieldEnum_LocalPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. Unique ID.
  | "DEAL_ID"
  // Data Type: STRING. Required. Main headline with local deal title to be
  // shown in dynamic ad.
  | "DEAL_NAME"
  // Data Type: STRING. Local deal subtitle to be shown in dynamic ad.
  | "SUBTITLE"
  // Data Type: STRING. Description of local deal to be shown in dynamic ad.
  | "DESCRIPTION"
  // Data Type: STRING. Price to be shown in the ad. Highly recommended for
  // dynamic ads. Example: "100.00 USD"
  | "PRICE"
  // Data Type: STRING. Formatted price to be shown in the ad.
  // Example: "Starting at $100.00 USD", "$80 - $100"
  | "FORMATTED_PRICE"
  // Data Type: STRING. Sale price to be shown in the ad.
  // Example: "80.00 USD"
  | "SALE_PRICE"
  // Data Type: STRING. Formatted sale price to be shown in the ad.
  // Example: "On sale for $80.00", "$60 - $80"
  | "FORMATTED_SALE_PRICE"
  // Data Type: URL. Image to be displayed in the ad.
  | "IMAGE_URL"
  // Data Type: STRING. Complete property address, including postal code.
  | "ADDRESS"
  // Data Type: STRING. Category of local deal used to group like items
  // together for recommendation engine.
  | "CATEGORY"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: URL_LIST. Required. Final URLs to be used in ad when using
  // Upgraded URLs; the more specific the better (e.g. the individual URL of a
  // specific local deal and its location).
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended local deal IDs to show
  // together with this item.
  | "SIMILAR_DEAL_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Job placeholder fields.
export type googleadsgoogleadsv9enums_JobPlaceholderFieldEnum_JobPlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: STRING. Required. If only JOB_ID is specified, then it must be
  // unique. If both JOB_ID and LOCATION_ID are specified, then the
  // pair must be unique.
  // ID) pair must be unique.
  | "JOB_ID"
  // Data Type: STRING. Combination of JOB_ID and LOCATION_ID must be unique
  // per offer.
  | "LOCATION_ID"
  // Data Type: STRING. Required. Main headline with job title to be shown in
  // dynamic ad.
  | "TITLE"
  // Data Type: STRING. Job subtitle to be shown in dynamic ad.
  | "SUBTITLE"
  // Data Type: STRING. Description of job to be shown in dynamic ad.
  | "DESCRIPTION"
  // Data Type: URL. Image to be displayed in the ad. Highly recommended for
  // image ads.
  | "IMAGE_URL"
  // Data Type: STRING. Category of property used to group like items together
  // for recommendation engine.
  | "CATEGORY"
  // Data Type: STRING_LIST. Keywords used for product retrieval.
  | "CONTEXTUAL_KEYWORDS"
  // Data Type: STRING. Complete property address, including postal code.
  | "ADDRESS"
  // Data Type: STRING. Salary or salary range of job to be shown in dynamic
  // ad.
  | "SALARY"
  // Data Type: URL_LIST. Required. Final URLs to be used in ad when using
  // Upgraded URLs; the more specific the better (e.g. the individual URL of a
  // specific job and its location).
  | "FINAL_URLS"
  // Data Type: URL_LIST. Final mobile URLs for the ad when using Upgraded
  // URLs.
  | "FINAL_MOBILE_URLS"
  // Data Type: URL. Tracking template for the ad when using Upgraded URLs.
  | "TRACKING_URL"
  // Data Type: STRING. Android app link. Must be formatted as:
  // android-app://{package_id}/{scheme}/{host_path}.
  // The components are defined as follows:
  // package_id: app ID as specified in Google Play.
  // scheme: the scheme to pass to the application. Can be HTTP, or a custom
  // scheme.
  // host_path: identifies the specific content within your application.
  | "ANDROID_APP_LINK"
  // Data Type: STRING_LIST. List of recommended job IDs to show together with
  // this item.
  | "SIMILAR_JOB_IDS"
  // Data Type: STRING. iOS app link.
  | "IOS_APP_LINK"
  // Data Type: INT64. iOS app store ID.
  | "IOS_APP_STORE_ID";
// Possible values for Advertiser Provided Image placeholder fields.
export type googleadsgoogleadsv9enums_ImagePlaceholderFieldEnum_ImagePlaceholderField =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Data Type: INT64. The asset ID of the image.
  | "ASSET_ID";
// Possible statuses of a feed mapping.
export type googleadsgoogleadsv9enums_FeedMappingStatusEnum_FeedMappingStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed mapping is enabled.
  | "ENABLED"
  // Feed mapping has been removed.
  | "REMOVED";
// Possible placeholder types for a feed mapping.
export type googleadsgoogleadsv9enums_FeedMappingCriterionTypeEnum_FeedMappingCriterionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Allows campaign targeting at locations within a location feed.
  | "LOCATION_EXTENSION_TARGETING"
  // Allows url targeting for your dynamic search ads within a page feed.
  | "DSA_PAGE_FEED";
// Response message for a feed mapping mutate.
export type MutateFeedMappingsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateFeedMappingResult[] | undefined;
};

// The result for the feed mapping mutate.
export type MutateFeedMappingResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated feed mapping with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  feedMapping: googleadsgoogleadsv9resources_FeedMapping | undefined;
};

// Service to manage feed mappings.
export interface FeedMappingService {
  // Returns the requested feed mapping in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeedMapping(request: GetFeedMappingRequest): Promise<googleadsgoogleadsv9resources_FeedMapping>;
  // Creates or removes feed mappings. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FeedMappingError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateFeedMappings(request: MutateFeedMappingsRequest): Promise<MutateFeedMappingsResponse>;
}

export function createFeedMappingServiceClient(
  handler: RequestHandler
): FeedMappingService {
  return {
    GetFeedMapping(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_FeedMapping>;
    },
    MutateFeedMappings(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/feedMappings:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateFeedMappingsResponse>;
    },
  };
}
// Request message for [MobileDeviceConstantService.GetMobileDeviceConstant][google.ads.googleads.v9.services.MobileDeviceConstantService.GetMobileDeviceConstant].
export type GetMobileDeviceConstantRequest = {
  // Required. Resource name of the mobile device to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch mobile device constants.
export interface MobileDeviceConstantService {
  // Returns the requested mobile device constant in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetMobileDeviceConstant(request: GetMobileDeviceConstantRequest): Promise<googleadsgoogleadsv9resources_MobileDeviceConstant>;
}

export function createMobileDeviceConstantServiceClient(
  handler: RequestHandler
): MobileDeviceConstantService {
  return {
    GetMobileDeviceConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_MobileDeviceConstant>;
    },
  };
}
// A mobile device constant.
export type googleadsgoogleadsv9resources_MobileDeviceConstant = {
  // Output only. The resource name of the mobile device constant.
  // Mobile device constant resource names have the form:
  // `mobileDeviceConstants/{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the mobile device constant.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The name of the mobile device.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The manufacturer of the mobile device.
  //
  // Behaviors: OUTPUT_ONLY
  manufacturerName?: string;
  // Output only. The operating system of the mobile device.
  //
  // Behaviors: OUTPUT_ONLY
  operatingSystemName?: string;
  // Output only. The type of mobile device.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_MobileDeviceTypeEnum_MobileDeviceType | undefined;
};

// The type of mobile device.
export type googleadsgoogleadsv9enums_MobileDeviceTypeEnum_MobileDeviceType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Mobile phones.
  | "MOBILE"
  // Tablets.
  | "TABLET";
// Request message for [DetailPlacementViewService.GetDetailPlacementView][google.ads.googleads.v9.services.DetailPlacementViewService.GetDetailPlacementView].
export type GetDetailPlacementViewRequest = {
  // Required. The resource name of the Detail Placement view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Detail Placement views.
export interface DetailPlacementViewService {
  // Returns the requested Detail Placement view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetDetailPlacementView(request: GetDetailPlacementViewRequest): Promise<googleadsgoogleadsv9resources_DetailPlacementView>;
}

export function createDetailPlacementViewServiceClient(
  handler: RequestHandler
): DetailPlacementViewService {
  return {
    GetDetailPlacementView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_DetailPlacementView>;
    },
  };
}
// A view with metrics aggregated by ad group and URL or YouTube video.
export type googleadsgoogleadsv9resources_DetailPlacementView = {
  // Output only. The resource name of the detail placement view.
  // Detail placement view resource names have the form:
  // `customers/{customer_id}/detailPlacementViews/{ad_group_id}~{base64_placement}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The automatic placement string at detail level, e. g. website URL, mobile
  // application ID, or a YouTube video ID.
  //
  // Behaviors: OUTPUT_ONLY
  placement?: string;
  // Output only. The display name is URL name for websites, YouTube video name for YouTube
  // videos, and translated mobile app name for mobile apps.
  //
  // Behaviors: OUTPUT_ONLY
  displayName?: string;
  // Output only. URL of the group placement, e.g. domain, link to the mobile application in
  // app store, or a YouTube channel URL.
  //
  // Behaviors: OUTPUT_ONLY
  groupPlacementTargetUrl?: string;
  // Output only. URL of the placement, e.g. website, link to the mobile application in app
  // store, or a YouTube video URL.
  //
  // Behaviors: OUTPUT_ONLY
  targetUrl?: string;
  // Output only. Type of the placement, e.g. Website, YouTube Video, and Mobile Application.
  //
  // Behaviors: OUTPUT_ONLY
  placementType: googleadsgoogleadsv9enums_PlacementTypeEnum_PlacementType | undefined;
};

// Possible placement types for a feed mapping.
export type googleadsgoogleadsv9enums_PlacementTypeEnum_PlacementType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Websites(e.g. 'www.flowers4sale.com').
  | "WEBSITE"
  // Mobile application categories(e.g. 'Games').
  | "MOBILE_APP_CATEGORY"
  // mobile applications(e.g. 'mobileapp::2-com.whatsthewordanswers').
  | "MOBILE_APPLICATION"
  // YouTube videos(e.g. 'youtube.com/video/wtLJPvx7-ys').
  | "YOUTUBE_VIDEO"
  // YouTube channels(e.g. 'youtube.com::L8ZULXASCc1I_oaOT0NaOQ').
  | "YOUTUBE_CHANNEL";
// Request message for [CampaignAssetSetService.MutateCampaignAssetSets][google.ads.googleads.v9.services.CampaignAssetSetService.MutateCampaignAssetSets].
export type MutateCampaignAssetSetsRequest = {
  // Required. The ID of the customer whose campaign asset sets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign asset sets.
  //
  // Behaviors: REQUIRED
  operations: CampaignAssetSetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on a campaign asset set.
export type CampaignAssetSetOperation = {
  // Create operation: No resource name is expected for the new campaign asset
  // set.
  create?: googleadsgoogleadsv9resources_CampaignAssetSet;
  // Remove operation: A resource name for the removed campaign asset set is
  // expected, in this format:
  // `customers/{customer_id}/campaignAssetSets/{campaign_id}~{asset_set_id}`
  remove?: string;
};

// CampaignAssetSet is the linkage between a campaign and an asset set.
// Adding a CampaignAssetSet links an asset set with a campaign.
export type googleadsgoogleadsv9resources_CampaignAssetSet = {
  // Immutable. The resource name of the campaign asset set.
  // Asset set asset resource names have the form:
  // `customers/{customer_id}/campaignAssetSets/{campaign_id}~{asset_set_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign to which this asset set is linked.
  //
  // Behaviors: IMMUTABLE
  campaign: string | undefined;
  // Immutable. The asset set which is linked to the campaign.
  //
  // Behaviors: IMMUTABLE
  assetSet: string | undefined;
  // Output only. The status of the campaign asset set asset. Read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_AssetSetLinkStatusEnum_AssetSetLinkStatus | undefined;
};

// The possible statuses of he linkage between asset set and its container.
export type googleadsgoogleadsv9enums_AssetSetLinkStatusEnum_AssetSetLinkStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The linkage between asset set and its container is enabled.
  | "ENABLED"
  // The linkage between asset set and its container is removed.
  | "REMOVED";
// Response message for a campaign asset set mutate.
export type MutateCampaignAssetSetsResponse = {
  // All results for the mutate.
  results: MutateCampaignAssetSetResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the campaign asset set mutate.
export type MutateCampaignAssetSetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign asset set with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignAssetSet: googleadsgoogleadsv9resources_CampaignAssetSet | undefined;
};

// Service to manage campaign asset set
export interface CampaignAssetSetService {
  // Creates, updates or removes campaign asset sets. Operation statuses are
  // returned.
  MutateCampaignAssetSets(request: MutateCampaignAssetSetsRequest): Promise<MutateCampaignAssetSetsResponse>;
}

export function createCampaignAssetSetServiceClient(
  handler: RequestHandler
): CampaignAssetSetService {
  return {
    MutateCampaignAssetSets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignAssetSets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignAssetSetsResponse>;
    },
  };
}
// Request message for [CustomerManagerLinkService.GetCustomerManagerLink][google.ads.googleads.v9.services.CustomerManagerLinkService.GetCustomerManagerLink].
export type GetCustomerManagerLinkRequest = {
  // Required. The resource name of the CustomerManagerLink to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomerManagerLinkService.MutateCustomerManagerLink][google.ads.googleads.v9.services.CustomerManagerLinkService.MutateCustomerManagerLink].
export type MutateCustomerManagerLinkRequest = {
  // Required. The ID of the customer whose customer manager links are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customer manager links.
  //
  // Behaviors: REQUIRED
  operations: CustomerManagerLinkOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Updates the status of a CustomerManagerLink.
// The following actions are possible:
// 1. Update operation with status ACTIVE accepts a pending invitation.
// 2. Update operation with status REFUSED declines a pending invitation.
// 3. Update operation with status INACTIVE terminates link to manager.
export type CustomerManagerLinkOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The link is expected to have a valid resource name.
  update?: googleadsgoogleadsv9resources_CustomerManagerLink;
};

// Represents customer-manager link relationship.
export type googleadsgoogleadsv9resources_CustomerManagerLink = {
  // Immutable. Name of the resource.
  // CustomerManagerLink resource names have the form:
  // `customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The manager customer linked to the customer.
  //
  // Behaviors: OUTPUT_ONLY
  managerCustomer?: string;
  // Output only. ID of the customer-manager link. This field is read only.
  //
  // Behaviors: OUTPUT_ONLY
  managerLinkId?: number;
  // Status of the link between the customer and the manager.
  status: googleadsgoogleadsv9enums_ManagerLinkStatusEnum_ManagerLinkStatus | undefined;
};

// Request message for [CustomerManagerLinkService.MoveManagerLink][google.ads.googleads.v9.services.CustomerManagerLinkService.MoveManagerLink].
export type MoveManagerLinkRequest = {
  // Required. The ID of the client customer that is being moved.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The resource name of the previous CustomerManagerLink.
  // The resource name has the form:
  // `customers/{customer_id}/customerManagerLinks/{manager_customer_id}~{manager_link_id}`
  //
  // Behaviors: REQUIRED
  previousCustomerManagerLink: string | undefined;
  // Required. The resource name of the new manager customer that the client wants to move
  // to. Customer resource names have the format: "customers/{customer_id}"
  //
  // Behaviors: REQUIRED
  newManager: string | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a CustomerManagerLink mutate.
export type MutateCustomerManagerLinkResponse = {
  // A result that identifies the resource affected by the mutate request.
  results: MutateCustomerManagerLinkResult[] | undefined;
};

// The result for the customer manager link mutate.
export type MutateCustomerManagerLinkResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Response message for a CustomerManagerLink moveManagerLink.
export type MoveManagerLinkResponse = {
  // Returned for successful operations. Represents a CustomerManagerLink
  // resource of the newly created link between client customer and new manager
  // customer.
  resourceName: string | undefined;
};

// Service to manage customer-manager links.
export interface CustomerManagerLinkService {
  // Returns the requested CustomerManagerLink in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerManagerLink(request: GetCustomerManagerLinkRequest): Promise<googleadsgoogleadsv9resources_CustomerManagerLink>;
  // Creates or updates customer manager links. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [ManagerLinkError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerManagerLink(request: MutateCustomerManagerLinkRequest): Promise<MutateCustomerManagerLinkResponse>;
  // Moves a client customer to a new manager customer.
  // This simplifies the complex request that requires two operations to move
  // a client customer to a new manager. i.e:
  // 1. Update operation with Status INACTIVE (previous manager) and,
  // 2. Update operation with Status ACTIVE (new manager).
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MoveManagerLink(request: MoveManagerLinkRequest): Promise<MoveManagerLinkResponse>;
}

export function createCustomerManagerLinkServiceClient(
  handler: RequestHandler
): CustomerManagerLinkService {
  return {
    GetCustomerManagerLink(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerManagerLink>;
    },
    MutateCustomerManagerLink(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerManagerLinks:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerManagerLinkResponse>;
    },
    MoveManagerLink(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerManagerLinks:moveManagerLink`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MoveManagerLinkResponse>;
    },
  };
}
// Request message for
// [CustomerUserAccessInvitation.GetCustomerUserAccessInvitation][]
export type GetCustomerUserAccessInvitationRequest = {
  // Required. Resource name of the access invitation.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [CustomerUserAccessInvitation.MutateCustomerUserAccessInvitation][]
export type MutateCustomerUserAccessInvitationRequest = {
  // Required. The ID of the customer whose access invitation is being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on the access invitation
  //
  // Behaviors: REQUIRED
  operation: CustomerUserAccessInvitationOperation | undefined;
};

// A single operation (create or remove) on customer user access invitation.
export type CustomerUserAccessInvitationOperation = {
  // Create operation: No resource name is expected for the new access
  // invitation.
  create?: googleadsgoogleadsv9resources_CustomerUserAccessInvitation;
  // Remove operation: A resource name for the revoke invitation is
  // expected, in this format:
  // `customers/{customer_id}/customerUserAccessInvitations/{invitation_id}`
  remove?: string;
};

// Represent an invitation to a new user on this customer account.
export type googleadsgoogleadsv9resources_CustomerUserAccessInvitation = {
  // Immutable. Name of the resource.
  // Resource names have the form:
  // `customers/{customer_id}/customerUserAccessInvitations/{invitation_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the invitation.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  invitationId: number | undefined;
  // Immutable. Access role of the user.
  //
  // Behaviors: IMMUTABLE
  accessRole: googleadsgoogleadsv9enums_AccessRoleEnum_AccessRole | undefined;
  // Immutable. Email address the invitation was sent to.
  // This can differ from the email address of the account
  // that accepts the invite.
  //
  // Behaviors: IMMUTABLE
  emailAddress: string | undefined;
  // Output only. Time invitation was created.
  // This field is read-only.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  //
  // Behaviors: OUTPUT_ONLY
  creationDateTime: string | undefined;
  // Output only. Invitation status of the user.
  //
  // Behaviors: OUTPUT_ONLY
  invitationStatus: googleadsgoogleadsv9enums_AccessInvitationStatusEnum_AccessInvitationStatus | undefined;
};

// Possible access invitation status of a user
export type googleadsgoogleadsv9enums_AccessInvitationStatusEnum_AccessInvitationStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The initial state of an invitation, before being acted upon by anyone.
  | "PENDING"
  // Invitation process was terminated by the email recipient. No new user was
  // created.
  | "DECLINED"
  // Invitation URLs expired without being acted upon. No new user can be
  // created.  Invitations expire 20 days after creation.
  | "EXPIRED";
// Response message for access invitation mutate.
export type MutateCustomerUserAccessInvitationResponse = {
  // Result for the mutate.
  result: MutateCustomerUserAccessInvitationResult | undefined;
};

// The result for the access invitation mutate.
export type MutateCustomerUserAccessInvitationResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// This service manages the access invitation extended to users for a given
// customer.
export interface CustomerUserAccessInvitationService {
  // Returns the requested access invitation in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerUserAccessInvitation(request: GetCustomerUserAccessInvitationRequest): Promise<googleadsgoogleadsv9resources_CustomerUserAccessInvitation>;
  // Creates or removes an access invitation.
  // List of thrown errors:
  // [AccessInvitationError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerUserAccessInvitation(request: MutateCustomerUserAccessInvitationRequest): Promise<MutateCustomerUserAccessInvitationResponse>;
}

export function createCustomerUserAccessInvitationServiceClient(
  handler: RequestHandler
): CustomerUserAccessInvitationService {
  return {
    GetCustomerUserAccessInvitation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerUserAccessInvitation>;
    },
    MutateCustomerUserAccessInvitation(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerUserAccessInvitations:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerUserAccessInvitationResponse>;
    },
  };
}
// Request message for
// [ConversionValueRuleSetService.GetConversionValueRuleSet][google.ads.googleads.v9.services.ConversionValueRuleSetService.GetConversionValueRuleSet].
export type GetConversionValueRuleSetRequest = {
  // Required. The resource name of the conversion value rule set to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [ConversionValueRuleSetService.MutateConversionValueRuleSets][google.ads.googleads.v9.services.ConversionValueRuleSetService.MutateConversionValueRuleSets].
export type MutateConversionValueRuleSetsRequest = {
  // Required. The ID of the customer whose conversion value rule sets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual conversion value rule sets.
  //
  // Behaviors: REQUIRED
  operations: ConversionValueRuleSetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, update, remove) on a conversion value rule set.
export type ConversionValueRuleSetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new conversion
  // value rule set.
  create?: googleadsgoogleadsv9resources_ConversionValueRuleSet;
  // Update operation: The conversion value rule set is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_ConversionValueRuleSet;
  // Remove operation: A resource name for the removed conversion value rule
  // set is expected, in this format:
  // `customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}`
  remove?: string;
};

// A conversion value rule set
export type googleadsgoogleadsv9resources_ConversionValueRuleSet = {
  // Immutable. The resource name of the conversion value rule set.
  // Conversion value rule set resource names have the form:
  // `customers/{customer_id}/conversionValueRuleSets/{conversion_value_rule_set_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the conversion value rule set.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Resource names of rules within the rule set.
  conversionValueRules: string[] | undefined;
  // Defines dimensions for Value Rule conditions. The condition types of value
  // rules within this value rule set must be of these dimensions. The first
  // entry in this list is the primary dimension of the included value rules.
  // When using value rule primary dimension segmentation, conversion values
  // will be segmented into the values adjusted by value rules and the original
  // values, if some value rules apply.
  dimensions: googleadsgoogleadsv9enums_ValueRuleSetDimensionEnum_ValueRuleSetDimension[] | undefined;
  // Output only. The resource name of the conversion value rule set's owner customer.
  // When the value rule set is inherited from a manager
  // customer, owner_customer will be the resource name of the manager whereas
  // the customer in the resource_name will be of the requesting serving
  // customer.
  // ** Read-only **
  //
  // Behaviors: OUTPUT_ONLY
  ownerCustomer: string | undefined;
  // Defines the scope where the conversion value rule set is attached.
  attachmentType: googleadsgoogleadsv9enums_ValueRuleSetAttachmentTypeEnum_ValueRuleSetAttachmentType | undefined;
  // The resource name of the campaign when the conversion value rule
  // set is attached to a campaign.
  campaign: string | undefined;
  // Output only. The status of the conversion value rule set.
  // ** Read-only **
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_ConversionValueRuleSetStatusEnum_ConversionValueRuleSetStatus | undefined;
};

// Possible dimensions of a conversion value rule set.
export type googleadsgoogleadsv9enums_ValueRuleSetDimensionEnum_ValueRuleSetDimension =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Dimension for geo location.
  | "GEO_LOCATION"
  // Dimension for device type.
  | "DEVICE"
  // Dimension for audience.
  | "AUDIENCE";
// Possible level where a value rule set is attached.
export type googleadsgoogleadsv9enums_ValueRuleSetAttachmentTypeEnum_ValueRuleSetAttachmentType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Attached to the customer.
  | "CUSTOMER"
  // Attached to a campaign.
  | "CAMPAIGN";
// Possible statuses of a conversion value rule set.
export type googleadsgoogleadsv9enums_ConversionValueRuleSetStatusEnum_ConversionValueRuleSetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conversion Value Rule Set is enabled and can be applied.
  | "ENABLED"
  // Conversion Value Rule Set is permanently deleted and can't be applied.
  | "REMOVED"
  // Conversion Value Rule Set is paused and won't be applied. It can be
  // enabled again.
  | "PAUSED";
// Response message for
// [ConversionValueRuleSetService.MutateConversionValueRuleSets][google.ads.googleads.v9.services.ConversionValueRuleSetService.MutateConversionValueRuleSets].
export type MutateConversionValueRuleSetsResponse = {
  // All results for the mutate.
  results: MutateConversionValueRuleSetResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the conversion value rule set mutate.
export type MutateConversionValueRuleSetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated conversion value rule set with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  conversionValueRuleSet: googleadsgoogleadsv9resources_ConversionValueRuleSet | undefined;
};

// Service to manage conversion value rule sets.
export interface ConversionValueRuleSetService {
  // Returns the requested conversion value rule set.
  GetConversionValueRuleSet(request: GetConversionValueRuleSetRequest): Promise<googleadsgoogleadsv9resources_ConversionValueRuleSet>;
  // Creates, updates or removes conversion value rule sets. Operation statuses
  // are returned.
  MutateConversionValueRuleSets(request: MutateConversionValueRuleSetsRequest): Promise<MutateConversionValueRuleSetsResponse>;
}

export function createConversionValueRuleSetServiceClient(
  handler: RequestHandler
): ConversionValueRuleSetService {
  return {
    GetConversionValueRuleSet(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ConversionValueRuleSet>;
    },
    MutateConversionValueRuleSets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/conversionValueRuleSets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateConversionValueRuleSetsResponse>;
    },
  };
}
// Request message for
// [AccessibleBiddingStrategyService.GetAccessibleBiddingStrategy][google.ads.googleads.v9.services.AccessibleBiddingStrategyService.GetAccessibleBiddingStrategy].
export type GetAccessibleBiddingStrategyRequest = {
  // Required. The resource name of the accessible bidding strategy to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to read accessible bidding strategies.
export interface AccessibleBiddingStrategyService {
  // Returns the requested accessible bidding strategy in full detail.
  GetAccessibleBiddingStrategy(request: GetAccessibleBiddingStrategyRequest): Promise<googleadsgoogleadsv9resources_AccessibleBiddingStrategy>;
}

export function createAccessibleBiddingStrategyServiceClient(
  handler: RequestHandler
): AccessibleBiddingStrategyService {
  return {
    GetAccessibleBiddingStrategy(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AccessibleBiddingStrategy>;
    },
  };
}
// Represents a view of BiddingStrategies owned by and shared with the customer.
// In contrast to BiddingStrategy, this resource includes strategies owned by
// managers of the customer and shared with this customer - in addition to
// strategies owned by this customer. This resource does not provide metrics and
// only exposes a limited subset of the BiddingStrategy attributes.
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy = {
  // Output only. The resource name of the accessible bidding strategy.
  // AccessibleBiddingStrategy resource names have the form:
  // `customers/{customer_id}/accessibleBiddingStrategies/{bidding_strategy_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the bidding strategy.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Output only. The name of the bidding strategy.
  //
  // Behaviors: OUTPUT_ONLY
  name: string | undefined;
  // Output only. The type of the bidding strategy.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_BiddingStrategyTypeEnum_BiddingStrategyType | undefined;
  // Output only. The ID of the Customer which owns the bidding strategy.
  //
  // Behaviors: OUTPUT_ONLY
  ownerCustomerId: number | undefined;
  // Output only. descriptive_name of the Customer which owns the bidding strategy.
  //
  // Behaviors: OUTPUT_ONLY
  ownerDescriptiveName: string | undefined;
  // Output only. An automated bidding strategy to help get the most conversion value for
  // your campaigns while spending your budget.
  //
  // Behaviors: OUTPUT_ONLY
  maximizeConversionValue?: googleadsgoogleadsv9resources_AccessibleBiddingStrategy_MaximizeConversionValue;
  // Output only. An automated bidding strategy to help get the most conversions for your
  // campaigns while spending your budget.
  //
  // Behaviors: OUTPUT_ONLY
  maximizeConversions?: googleadsgoogleadsv9resources_AccessibleBiddingStrategy_MaximizeConversions;
  // Output only. A bidding strategy that sets bids to help get as many conversions as
  // possible at the target cost-per-acquisition (CPA) you set.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpa?: googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetCpa;
  // Output only. A bidding strategy that automatically optimizes towards a desired
  // percentage of impressions.
  //
  // Behaviors: OUTPUT_ONLY
  targetImpressionShare?: googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetImpressionShare;
  // Output only. A bidding strategy that helps you maximize revenue while averaging a
  // specific target Return On Ad Spend (ROAS).
  //
  // Behaviors: OUTPUT_ONLY
  targetRoas?: googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetRoas;
  // Output only. A bid strategy that sets your bids to help get as many clicks as
  // possible within your budget.
  //
  // Behaviors: OUTPUT_ONLY
  targetSpend?: googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetSpend;
};

// Enum describing possible bidding strategy types.
export type googleadsgoogleadsv9enums_BiddingStrategyTypeEnum_BiddingStrategyType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Commission is an automatic bidding strategy in which the advertiser pays
  // a certain portion of the conversion value.
  | "COMMISSION"
  // Enhanced CPC is a bidding strategy that raises bids for clicks
  // that seem more likely to lead to a conversion and lowers
  // them for clicks where they seem less likely.
  | "ENHANCED_CPC"
  // Used for return value only. Indicates that a campaign does not have a
  // bidding strategy. This prevents the campaign from serving. For example,
  // a campaign may be attached to a manager bidding strategy and the serving
  // account is subsequently unlinked from the manager account. In this case
  // the campaign will automatically be detached from the now inaccessible
  // manager bidding strategy and transition to the INVALID bidding strategy
  // type.
  | "INVALID"
  // Manual click based bidding where user pays per click.
  | "MANUAL_CPC"
  // Manual impression based bidding
  // where user pays per thousand impressions.
  | "MANUAL_CPM"
  // A bidding strategy that pays a configurable amount per video view.
  | "MANUAL_CPV"
  // A bidding strategy that automatically maximizes number of conversions
  // given a daily budget.
  | "MAXIMIZE_CONVERSIONS"
  // An automated bidding strategy that automatically sets bids to maximize
  // revenue while spending your budget.
  | "MAXIMIZE_CONVERSION_VALUE"
  // Page-One Promoted bidding scheme, which sets max cpc bids to
  // target impressions on page one or page one promoted slots on google.com.
  // This enum value is deprecated.
  | "PAGE_ONE_PROMOTED"
  // Percent Cpc is bidding strategy where bids are a fraction of the
  // advertised price for some good or service.
  | "PERCENT_CPC"
  // Target CPA is an automated bid strategy that sets bids
  // to help get as many conversions as possible
  // at the target cost-per-acquisition (CPA) you set.
  | "TARGET_CPA"
  // Target CPM is an automated bid strategy that sets bids to help get
  // as many impressions as possible at the target cost per one thousand
  // impressions (CPM) you set.
  | "TARGET_CPM"
  // An automated bidding strategy that sets bids so that a certain percentage
  // of search ads are shown at the top of the first page (or other targeted
  // location).
  | "TARGET_IMPRESSION_SHARE"
  // Target Outrank Share is an automated bidding strategy that sets bids
  // based on the target fraction of auctions where the advertiser
  // should outrank a specific competitor.
  // This enum value is deprecated.
  | "TARGET_OUTRANK_SHARE"
  // Target ROAS is an automated bidding strategy
  // that helps you maximize revenue while averaging
  // a specific target Return On Average Spend (ROAS).
  | "TARGET_ROAS"
  // Target Spend is an automated bid strategy that sets your bids
  // to help get as many clicks as possible within your budget.
  | "TARGET_SPEND";
// An automated bidding strategy to help get the most conversion value for
// your campaigns while spending your budget.
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy_MaximizeConversionValue = {
  // Output only. The target return on ad spend (ROAS) option. If set, the bid strategy
  // will maximize revenue while averaging the target return on ad spend. If
  // the target ROAS is high, the bid strategy may not be able to spend the
  // full budget. If the target ROAS is not set, the bid strategy will aim to
  // achieve the highest possible ROAS for the budget.
  //
  // Behaviors: OUTPUT_ONLY
  targetRoas: number | undefined;
};

// An automated bidding strategy to help get the most conversions for your
// campaigns while spending your budget.
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy_MaximizeConversions = {
  // Output only. The target cost per acquisition (CPA) option. This is the average amount
  // that you would like to spend per acquisition.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpa: number | undefined;
};

// An automated bid strategy that sets bids to help get as many conversions as
// possible at the target cost-per-acquisition (CPA) you set.
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetCpa = {
  // Output only. Average CPA target.
  // This target should be greater than or equal to minimum billable unit
  // based on the currency for the account.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpaMicros?: number;
};

// An automated bidding strategy that sets bids so that a certain percentage
// of search ads are shown at the top of the first page (or other targeted
// location).
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetImpressionShare = {
  // Output only. The targeted location on the search results page.
  //
  // Behaviors: OUTPUT_ONLY
  location: googleadsgoogleadsv9enums_TargetImpressionShareLocationEnum_TargetImpressionShareLocation | undefined;
  // The desired fraction of ads to be shown in the targeted location in
  // micros. E.g. 1% equals 10,000.
  locationFractionMicros?: number;
  // Output only. The highest CPC bid the automated bidding system is permitted to specify.
  // This is a required field entered by the advertiser that sets the ceiling
  // and specified in local micros.
  //
  // Behaviors: OUTPUT_ONLY
  cpcBidCeilingMicros?: number;
};

// Enum describing possible goals.
export type googleadsgoogleadsv9enums_TargetImpressionShareLocationEnum_TargetImpressionShareLocation =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Any location on the web page.
  | "ANYWHERE_ON_PAGE"
  // Top box of ads.
  | "TOP_OF_PAGE"
  // Top slot in the top box of ads.
  | "ABSOLUTE_TOP_OF_PAGE";
// An automated bidding strategy that helps you maximize revenue while
// averaging a specific target return on ad spend (ROAS).
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetRoas = {
  // Output only. The desired revenue (based on conversion data) per unit of spend.
  //
  // Behaviors: OUTPUT_ONLY
  targetRoas?: number;
};

// An automated bid strategy that sets your bids to help get as many clicks
// as possible within your budget.
export type googleadsgoogleadsv9resources_AccessibleBiddingStrategy_TargetSpend = {
  // Output only. The spend target under which to maximize clicks.
  // A TargetSpend bidder will attempt to spend the smaller of this value
  // or the natural throttling spend amount.
  // If not specified, the budget is used as the spend target.
  // This field is deprecated and should no longer be used. See
  // https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
  // for details.
  //
  // Behaviors: OUTPUT_ONLY
  targetSpendMicros?: number;
  // Output only. Maximum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  //
  // Behaviors: OUTPUT_ONLY
  cpcBidCeilingMicros?: number;
};

// Request message for [CampaignLabelService.GetCampaignLabel][google.ads.googleads.v9.services.CampaignLabelService.GetCampaignLabel].
export type GetCampaignLabelRequest = {
  // Required. The resource name of the campaign-label relationship to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignLabelService.MutateCampaignLabels][google.ads.googleads.v9.services.CampaignLabelService.MutateCampaignLabels].
export type MutateCampaignLabelsRequest = {
  // Required. ID of the customer whose campaign-label relationships are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on campaign-label relationships.
  //
  // Behaviors: REQUIRED
  operations: CampaignLabelOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, remove) on a campaign-label relationship.
export type CampaignLabelOperation = {
  // Create operation: No resource name is expected for the new campaign-label
  // relationship.
  create?: googleadsgoogleadsv9resources_CampaignLabel;
  // Remove operation: A resource name for the campaign-label relationship
  // being removed, in this format:
  // `customers/{customer_id}/campaignLabels/{campaign_id}~{label_id}`
  remove?: string;
};

// Represents a relationship between a campaign and a label.
export type googleadsgoogleadsv9resources_CampaignLabel = {
  // Immutable. Name of the resource.
  // Campaign label resource names have the form:
  // `customers/{customer_id}/campaignLabels/{campaign_id}~{label_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign to which the label is attached.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // Immutable. The label assigned to the campaign.
  //
  // Behaviors: IMMUTABLE
  label?: string;
};

// Response message for a campaign labels mutate.
export type MutateCampaignLabelsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignLabelResult[] | undefined;
};

// The result for a campaign label mutate.
export type MutateCampaignLabelResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage labels on campaigns.
export interface CampaignLabelService {
  // Returns the requested campaign-label relationship in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignLabel(request: GetCampaignLabelRequest): Promise<googleadsgoogleadsv9resources_CampaignLabel>;
  // Creates and removes campaign-label relationships.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [LabelError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCampaignLabels(request: MutateCampaignLabelsRequest): Promise<MutateCampaignLabelsResponse>;
}

export function createCampaignLabelServiceClient(
  handler: RequestHandler
): CampaignLabelService {
  return {
    GetCampaignLabel(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignLabel>;
    },
    MutateCampaignLabels(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignLabels:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignLabelsResponse>;
    },
  };
}
// Request message for
// [AdGroupCriterionCustomizerService.MutateAdGroupCriterionCustomizers][google.ads.googleads.v9.services.AdGroupCriterionCustomizerService.MutateAdGroupCriterionCustomizers].
export type MutateAdGroupCriterionCustomizersRequest = {
  // Required. The ID of the customer whose ad group criterion customizers are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad group criterion
  // customizers.
  //
  // Behaviors: REQUIRED
  operations: AdGroupCriterionCustomizerOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on an customizer attribute.
export type AdGroupCriterionCustomizerOperation = {
  // Create operation: No resource name is expected for the new ad group
  // criterion customizer.
  create?: googleadsgoogleadsv9resources_AdGroupCriterionCustomizer;
  // Remove operation: A resource name for the removed ad group criterion
  // customizer is expected, in this format:
  // `customers/{customer_id}/adGroupCriterionCustomizers/{ad_group_id}~{criterion_id}~{customizer_attribute_id}`
  remove?: string;
};

// A customizer value for the associated CustomizerAttribute at the
// AdGroupCriterion level.
export type googleadsgoogleadsv9resources_AdGroupCriterionCustomizer = {
  // Immutable. The resource name of the ad group criterion customizer.
  // Ad group criterion customizer resource names have the form:
  // `customers/{customer_id}/adGroupCriterionCustomizers/{ad_group_id}~{criterion_id}~{customizer_attribute_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group criterion to which the customizer attribute is linked.
  // It must be a keyword criterion.
  //
  // Behaviors: IMMUTABLE
  adGroupCriterion?: string;
  // Required. Immutable. The customizer attribute which is linked to the ad group criterion.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  customizerAttribute: string | undefined;
  // Output only. The status of the ad group criterion customizer.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CustomizerValueStatusEnum_CustomizerValueStatus | undefined;
  // Required. The value to associate with the customizer attribute at this level. The
  // value must be of the type specified for the CustomizerAttribute.
  //
  // Behaviors: REQUIRED
  value: googleadsgoogleadsv9common_CustomizerValue | undefined;
};

// The possible statuses of a customizer value.
export type googleadsgoogleadsv9enums_CustomizerValueStatusEnum_CustomizerValueStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  | "UNKNOWN"
  // The customizer value is enabled.
  | "ENABLED"
  // The customizer value is removed.
  | "REMOVED";
// A customizer value that is referenced in customizer linkage entities
// like CustomerCustomizer, CampaignCustomizer, etc.
export type googleadsgoogleadsv9common_CustomizerValue = {
  // Required. The data type for the customizer value. It must match the attribute type.
  // The string_value content must match the constraints associated with the
  // type.
  //
  // Behaviors: REQUIRED
  type: googleadsgoogleadsv9enums_CustomizerAttributeTypeEnum_CustomizerAttributeType | undefined;
  // Required. Value to insert in creative text. Customizer values of all types are stored
  // as string to make formatting unambiguous.
  //
  // Behaviors: REQUIRED
  stringValue: string | undefined;
};

// The possible types of a customizer attribute.
export type googleadsgoogleadsv9enums_CustomizerAttributeTypeEnum_CustomizerAttributeType =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  | "UNKNOWN"
  // Text customizer.
  | "TEXT"
  // Number customizer.
  | "NUMBER"
  // Price customizer consisting of a number and a currency.
  | "PRICE"
  // Percentage customizer consisting of a number and a '%'.
  | "PERCENT";
// Response message for an ad group criterion customizer mutate.
export type MutateAdGroupCriterionCustomizersResponse = {
  // All results for the mutate.
  results: MutateAdGroupCriterionCustomizerResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the ad group criterion customizer mutate.
export type MutateAdGroupCriterionCustomizerResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated AdGroupCriterionCustomizer with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  adGroupCriterionCustomizer: googleadsgoogleadsv9resources_AdGroupCriterionCustomizer | undefined;
};

// Service to manage ad group criterion customizer
export interface AdGroupCriterionCustomizerService {
  // Creates, updates or removes ad group criterion customizers. Operation
  // statuses are returned.
  MutateAdGroupCriterionCustomizers(request: MutateAdGroupCriterionCustomizersRequest): Promise<MutateAdGroupCriterionCustomizersResponse>;
}

export function createAdGroupCriterionCustomizerServiceClient(
  handler: RequestHandler
): AdGroupCriterionCustomizerService {
  return {
    MutateAdGroupCriterionCustomizers(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/AdGroupCriterionCustomizers:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupCriterionCustomizersResponse>;
    },
  };
}
// Request message for [KeywordPlanIdeaService.GenerateKeywordIdeas][google.ads.googleads.v9.services.KeywordPlanIdeaService.GenerateKeywordIdeas].
export type GenerateKeywordIdeasRequest = {
  // The ID of the customer with the recommendation.
  customerId: string | undefined;
  // The resource name of the language to target.
  // Required
  language?: string;
  // The resource names of the location to target.
  // Max 10
  geoTargetConstants: string[] | undefined;
  // If true, adult keywords will be included in response.
  // The default value is false.
  includeAdultKeywords: boolean | undefined;
  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. To request next page of results use the
  // value obtained from `next_page_token` in the previous response.
  // The request fields must match across pages.
  pageToken: string | undefined;
  // Number of results to retrieve in a single page.
  // A maximum of 10,000 results may be returned, if the page_size
  // exceeds this, it is ignored.
  // If unspecified, at most 10,000 results will be returned.
  // The server may decide to further limit the number of returned resources.
  // If the response contains fewer than 10,000 results it may not be assumed
  // as last page of results.
  pageSize: number | undefined;
  // Targeting network.
  keywordPlanNetwork: googleadsgoogleadsv9enums_KeywordPlanNetworkEnum_KeywordPlanNetwork | undefined;
  // The keyword annotations to include in response.
  keywordAnnotation: googleadsgoogleadsv9enums_KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation[] | undefined;
  // The aggregate fields to include in response.
  aggregateMetrics: googleadsgoogleadsv9common_KeywordPlanAggregateMetrics | undefined;
  // The options for historical metrics data.
  historicalMetricsOptions: googleadsgoogleadsv9common_HistoricalMetricsOptions | undefined;
  // A Keyword and a specific Url to generate ideas from
  // e.g. cars, www.example.com/cars.
  keywordAndUrlSeed?: KeywordAndUrlSeed;
  // A Keyword or phrase to generate ideas from, e.g. cars.
  keywordSeed?: KeywordSeed;
  // A specific url to generate ideas from, e.g. www.example.com/cars.
  urlSeed?: UrlSeed;
  // The site to generate ideas from, e.g. www.example.com.
  siteSeed?: SiteSeed;
};

// Enumerates keyword plan forecastable network types.
export type googleadsgoogleadsv9enums_KeywordPlanNetworkEnum_KeywordPlanNetwork =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Google Search.
  | "GOOGLE_SEARCH"
  // Google Search + Search partners.
  | "GOOGLE_SEARCH_AND_PARTNERS";
// Enumerates keyword plan annotations that can be requested.
export type googleadsgoogleadsv9enums_KeywordPlanKeywordAnnotationEnum_KeywordPlanKeywordAnnotation =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Return the keyword concept and concept group data.
  | "KEYWORD_CONCEPT";
// The aggregate metrics specification of the request.
export type googleadsgoogleadsv9common_KeywordPlanAggregateMetrics = {
  // The list of aggregate metrics to fetch data.
  aggregateMetricTypes: googleadsgoogleadsv9enums_KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType[] | undefined;
};

// Aggregate fields.
export type googleadsgoogleadsv9enums_KeywordPlanAggregateMetricTypeEnum_KeywordPlanAggregateMetricType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // The device breakdown of aggregate search volume.
  | "DEVICE";
// Historical metrics options.
export type googleadsgoogleadsv9common_HistoricalMetricsOptions = {
  // The year month range for historical metrics. If not specified the searches
  // will be returned for past 12 months.
  // Searches data is available for the past 4 years. If the search volume is
  // not available for the entire year_month_range provided, the subset of the
  // year month range for which search volume is available will be returned.
  yearMonthRange?: googleadsgoogleadsv9common_YearMonthRange;
};

// The year month range inclusive of the start and end months.
// Eg: A year month range to represent Jan 2020 would be: (Jan 2020, Jan 2020).
export type googleadsgoogleadsv9common_YearMonthRange = {
  // The inclusive start year month.
  start: googleadsgoogleadsv9common_YearMonth | undefined;
  // The inclusive end year month.
  end: googleadsgoogleadsv9common_YearMonth | undefined;
};

// Year month.
export type googleadsgoogleadsv9common_YearMonth = {
  // The year (e.g. 2020).
  year: number | undefined;
  // The month of the year. (e.g. FEBRUARY).
  month: googleadsgoogleadsv9enums_MonthOfYearEnum_MonthOfYear | undefined;
};

// Enumerates months of the year, e.g., "January".
export type googleadsgoogleadsv9enums_MonthOfYearEnum_MonthOfYear =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // January.
  | "JANUARY"
  // February.
  | "FEBRUARY"
  // March.
  | "MARCH"
  // April.
  | "APRIL"
  // May.
  | "MAY"
  // June.
  | "JUNE"
  // July.
  | "JULY"
  // August.
  | "AUGUST"
  // September.
  | "SEPTEMBER"
  // October.
  | "OCTOBER"
  // November.
  | "NOVEMBER"
  // December.
  | "DECEMBER";
// Keyword And Url Seed
export type KeywordAndUrlSeed = {
  // The URL to crawl in order to generate keyword ideas.
  url?: string;
  // Requires at least one keyword.
  keywords: string[] | undefined;
};

// Keyword Seed
export type KeywordSeed = {
  // Requires at least one keyword.
  keywords: string[] | undefined;
};

// Url Seed
export type UrlSeed = {
  // The URL to crawl in order to generate keyword ideas.
  url?: string;
};

// Site Seed
export type SiteSeed = {
  // The domain name of the site. If the customer requesting the ideas doesn't
  // own the site provided only public information is returned.
  site?: string;
};

// Response message for [KeywordPlanIdeaService.GenerateKeywordIdeas][google.ads.googleads.v9.services.KeywordPlanIdeaService.GenerateKeywordIdeas].
export type GenerateKeywordIdeaResponse = {
  // Results of generating keyword ideas.
  results: GenerateKeywordIdeaResult[] | undefined;
  // The aggregate metrics for all keyword ideas.
  aggregateMetricResults: googleadsgoogleadsv9common_KeywordPlanAggregateMetricResults | undefined;
  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request.
  // `next_page_token` is not returned for the last page.
  nextPageToken: string | undefined;
  // Total number of results available.
  totalSize: number | undefined;
};

// The result of generating keyword ideas.
export type GenerateKeywordIdeaResult = {
  // Text of the keyword idea.
  // As in Keyword Plan historical metrics, this text may not be an actual
  // keyword, but the canonical form of multiple keywords.
  // See KeywordPlanKeywordHistoricalMetrics message in KeywordPlanService.
  text?: string;
  // The historical metrics for the keyword.
  keywordIdeaMetrics: googleadsgoogleadsv9common_KeywordPlanHistoricalMetrics | undefined;
  // The annotations for the keyword.
  // The annotation data is only provided if requested.
  keywordAnnotations: googleadsgoogleadsv9common_KeywordAnnotations | undefined;
};

// Historical metrics specific to the targeting options selected.
// Targeting options include geographies, network, etc.
// Refer to https://support.google.com/google-ads/answer/3022575 for more
// details.
export type googleadsgoogleadsv9common_KeywordPlanHistoricalMetrics = {
  // Approximate number of monthly searches on this query averaged
  // for the past 12 months.
  avgMonthlySearches?: number;
  // Approximate number of searches on this query for the past twelve months.
  monthlySearchVolumes: googleadsgoogleadsv9common_MonthlySearchVolume[] | undefined;
  // The competition level for the query.
  competition: googleadsgoogleadsv9enums_KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel | undefined;
  // The competition index for the query in the range [0, 100].
  // Shows how competitive ad placement is for a keyword.
  // The level of competition from 0-100 is determined by the number of ad slots
  // filled divided by the total number of ad slots available. If not enough
  // data is available, null is returned.
  competitionIndex?: number;
  // Top of page bid low range (20th percentile) in micros for the keyword.
  lowTopOfPageBidMicros?: number;
  // Top of page bid high range (80th percentile) in micros for the keyword.
  highTopOfPageBidMicros?: number;
};

// Monthly search volume.
export type googleadsgoogleadsv9common_MonthlySearchVolume = {
  // The year of the search volume (e.g. 2020).
  year?: number;
  // The month of the search volume.
  month: googleadsgoogleadsv9enums_MonthOfYearEnum_MonthOfYear | undefined;
  // Approximate number of searches for the month.
  // A null value indicates the search volume is unavailable for
  // that month.
  monthlySearches?: number;
};

// Competition level of a keyword.
export type googleadsgoogleadsv9enums_KeywordPlanCompetitionLevelEnum_KeywordPlanCompetitionLevel =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Low competition. The Competition Index range for this is [0, 33].
  | "LOW"
  // Medium competition. The Competition Index range for this is [34, 66].
  | "MEDIUM"
  // High competition. The Competition Index range for this is [67, 100].
  | "HIGH";
// The Annotations for the Keyword plan keywords.
export type googleadsgoogleadsv9common_KeywordAnnotations = {
  // The list of concepts for the keyword.
  concepts: googleadsgoogleadsv9common_KeywordConcept[] | undefined;
};

// The concept for the keyword.
export type googleadsgoogleadsv9common_KeywordConcept = {
  // The concept name for the keyword in the concept_group.
  name: string | undefined;
  // The concept group of the concept details.
  conceptGroup: googleadsgoogleadsv9common_ConceptGroup | undefined;
};

// The concept group for the keyword concept.
export type googleadsgoogleadsv9common_ConceptGroup = {
  // The concept group name.
  name: string | undefined;
  // The concept group type.
  type: googleadsgoogleadsv9enums_KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType | undefined;
};

// Enumerates keyword plan concept group types.
export type googleadsgoogleadsv9enums_KeywordPlanConceptGroupTypeEnum_KeywordPlanConceptGroupType =
  // The concept group classification different from brand/non-brand.
  // This is a catch all bucket for all classifications that are none of the
  // below.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // The concept group classification is based on BRAND.
  | "BRAND"
  // The concept group classification based on BRAND, that didn't fit well
  // with the BRAND classifications. These are generally outliers and can have
  // very few keywords in this type of classification.
  | "OTHER_BRANDS"
  // These concept group classification is not based on BRAND. This is
  // returned for generic keywords that don't have a brand association.
  | "NON_BRAND";
// The aggregated historical metrics for keyword plan keywords.
export type googleadsgoogleadsv9common_KeywordPlanAggregateMetricResults = {
  // The aggregate searches for all the keywords segmented by device
  // for the specified time.
  // Supports the following device types: MOBILE, TABLET, DESKTOP.
  // This is only set when KeywordPlanAggregateMetricTypeEnum.DEVICE is set
  // in the KeywordPlanAggregateMetrics field in the request.
  deviceSearches: googleadsgoogleadsv9common_KeywordPlanDeviceSearches[] | undefined;
};

// The total searches for the device type during the specified time period.
export type googleadsgoogleadsv9common_KeywordPlanDeviceSearches = {
  // The device type.
  device: googleadsgoogleadsv9enums_DeviceEnum_Device | undefined;
  // The total searches for the device.
  searchCount?: number;
};

// Service to generate keyword ideas.
export interface KeywordPlanIdeaService {
  // Returns a list of keyword ideas.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanIdeaError]()
  // [QuotaError]()
  // [RequestError]()
  GenerateKeywordIdeas(request: GenerateKeywordIdeasRequest): Promise<GenerateKeywordIdeaResponse>;
}

export function createKeywordPlanIdeaServiceClient(
  handler: RequestHandler
): KeywordPlanIdeaService {
  return {
    GenerateKeywordIdeas(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:generateKeywordIdeas`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateKeywordIdeaResponse>;
    },
  };
}
// Request message for [HotelPerformanceViewService.GetHotelPerformanceView][google.ads.googleads.v9.services.HotelPerformanceViewService.GetHotelPerformanceView].
export type GetHotelPerformanceViewRequest = {
  // Required. Resource name of the Hotel Performance View to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage Hotel Performance Views.
export interface HotelPerformanceViewService {
  // Returns the requested Hotel Performance View in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetHotelPerformanceView(request: GetHotelPerformanceViewRequest): Promise<googleadsgoogleadsv9resources_HotelPerformanceView>;
}

export function createHotelPerformanceViewServiceClient(
  handler: RequestHandler
): HotelPerformanceViewService {
  return {
    GetHotelPerformanceView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_HotelPerformanceView>;
    },
  };
}
// A hotel performance view.
export type googleadsgoogleadsv9resources_HotelPerformanceView = {
  // Output only. The resource name of the hotel performance view.
  // Hotel performance view resource names have the form:
  // `customers/{customer_id}/hotelPerformanceView`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [KeywordViewService.GetKeywordView][google.ads.googleads.v9.services.KeywordViewService.GetKeywordView].
export type GetKeywordViewRequest = {
  // Required. The resource name of the keyword view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage keyword views.
export interface KeywordViewService {
  // Returns the requested keyword view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetKeywordView(request: GetKeywordViewRequest): Promise<googleadsgoogleadsv9resources_KeywordView>;
}

export function createKeywordViewServiceClient(
  handler: RequestHandler
): KeywordViewService {
  return {
    GetKeywordView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordView>;
    },
  };
}
// A keyword view.
export type googleadsgoogleadsv9resources_KeywordView = {
  // Output only. The resource name of the keyword view.
  // Keyword view resource names have the form:
  // `customers/{customer_id}/keywordViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [FeedItemSetLinkService.GetFeedItemSetLinks][].
export type GetFeedItemSetLinkRequest = {
  // Required. The resource name of the feed item set link to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [FeedItemSetLinkService.MutateFeedItemSetLinks][google.ads.googleads.v9.services.FeedItemSetLinkService.MutateFeedItemSetLinks].
export type MutateFeedItemSetLinksRequest = {
  // Required. The ID of the customer whose feed item set links are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual feed item set links.
  //
  // Behaviors: REQUIRED
  operations: FeedItemSetLinkOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, update, remove) on a feed item set link.
export type FeedItemSetLinkOperation = {
  // Create operation: No resource name is expected for the
  // new feed item set link.
  create?: googleadsgoogleadsv9resources_FeedItemSetLink;
  // Remove operation: A resource name for the removed feed item set link is
  // expected, in this format:
  // `customers/{customer_id}/feedItemSetLinks/{feed_id}_{feed_item_set_id}_{feed_item_id}`
  remove?: string;
};

// Represents a link between a FeedItem and a FeedItemSet.
export type googleadsgoogleadsv9resources_FeedItemSetLink = {
  // Immutable. The resource name of the feed item set link.
  // Feed item set link resource names have the form:
  // `customers/{customer_id}/feedItemSetLinks/{feed_id}~{feed_item_set_id}~{feed_item_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The linked FeedItem.
  //
  // Behaviors: IMMUTABLE
  feedItem: string | undefined;
  // Immutable. The linked FeedItemSet.
  //
  // Behaviors: IMMUTABLE
  feedItemSet: string | undefined;
};

// Response message for a feed item set link mutate.
export type MutateFeedItemSetLinksResponse = {
  // All results for the mutate.
  results: MutateFeedItemSetLinkResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the feed item set link mutate.
export type MutateFeedItemSetLinkResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage feed item set links.
export interface FeedItemSetLinkService {
  // Returns the requested feed item set link in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeedItemSetLink(request: GetFeedItemSetLinkRequest): Promise<googleadsgoogleadsv9resources_FeedItemSetLink>;
  // Creates, updates, or removes feed item set links.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateFeedItemSetLinks(request: MutateFeedItemSetLinksRequest): Promise<MutateFeedItemSetLinksResponse>;
}

export function createFeedItemSetLinkServiceClient(
  handler: RequestHandler
): FeedItemSetLinkService {
  return {
    GetFeedItemSetLink(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_FeedItemSetLink>;
    },
    MutateFeedItemSetLinks(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/feedItemSetLinks:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateFeedItemSetLinksResponse>;
    },
  };
}
// Request message for
// [AccountBudgetService.GetAccountBudget][google.ads.googleads.v9.services.AccountBudgetService.GetAccountBudget].
export type GetAccountBudgetRequest = {
  // Required. The resource name of the account-level budget to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// A service for fetching an account-level budget.
// Account-level budgets are mutated by creating proposal resources.
export interface AccountBudgetService {
  // Returns an account-level budget in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAccountBudget(request: GetAccountBudgetRequest): Promise<googleadsgoogleadsv9resources_AccountBudget>;
}

export function createAccountBudgetServiceClient(
  handler: RequestHandler
): AccountBudgetService {
  return {
    GetAccountBudget(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AccountBudget>;
    },
  };
}
// An account-level budget. It contains information about the budget itself,
// as well as the most recently approved changes to the budget and proposed
// changes that are pending approval. The proposed changes that are pending
// approval, if any, are found in 'pending_proposal'.  Effective details about
// the budget are found in fields prefixed 'approved_', 'adjusted_' and those
// without a prefix.  Since some effective details may differ from what the user
// had originally requested (e.g. spending limit), these differences are
// juxtaposed via 'proposed_', 'approved_', and possibly 'adjusted_' fields.
// This resource is mutated using AccountBudgetProposal and cannot be mutated
// directly. A budget may have at most one pending proposal at any given time.
// It is read through pending_proposal.
// Once approved, a budget may be subject to adjustments, such as credit
// adjustments.  Adjustments create differences between the 'approved' and
// 'adjusted' fields, which would otherwise be identical.
export type googleadsgoogleadsv9resources_AccountBudget = {
  // Output only. The resource name of the account-level budget.
  // AccountBudget resource names have the form:
  // `customers/{customer_id}/accountBudgets/{account_budget_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the account-level budget.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The resource name of the billing setup associated with this account-level
  // budget.  BillingSetup resource names have the form:
  // `customers/{customer_id}/billingSetups/{billing_setup_id}`
  //
  // Behaviors: OUTPUT_ONLY
  billingSetup?: string;
  // Output only. The status of this account-level budget.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_AccountBudgetStatusEnum_AccountBudgetStatus | undefined;
  // Output only. The name of the account-level budget.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The proposed start time of the account-level budget in
  // yyyy-MM-dd HH:mm:ss format.  If a start time type of NOW was proposed,
  // this is the time of request.
  //
  // Behaviors: OUTPUT_ONLY
  proposedStartDateTime?: string;
  // Output only. The approved start time of the account-level budget in yyyy-MM-dd HH:mm:ss
  // format.
  // For example, if a new budget is approved after the proposed start time,
  // the approved start time is the time of approval.
  //
  // Behaviors: OUTPUT_ONLY
  approvedStartDateTime?: string;
  // Output only. The total adjustments amount.
  // An example of an adjustment is courtesy credits.
  //
  // Behaviors: OUTPUT_ONLY
  totalAdjustmentsMicros: number | undefined;
  // Output only. The value of Ads that have been served, in micros.
  // This includes overdelivery costs, in which case a credit might be
  // automatically applied to the budget (see total_adjustments_micros).
  //
  // Behaviors: OUTPUT_ONLY
  amountServedMicros: number | undefined;
  // Output only. A purchase order number is a value that helps users reference this budget
  // in their monthly invoices.
  //
  // Behaviors: OUTPUT_ONLY
  purchaseOrderNumber?: string;
  // Output only. Notes associated with the budget.
  //
  // Behaviors: OUTPUT_ONLY
  notes?: string;
  // Output only. The pending proposal to modify this budget, if applicable.
  //
  // Behaviors: OUTPUT_ONLY
  pendingProposal: googleadsgoogleadsv9resources_AccountBudget_PendingAccountBudgetProposal | undefined;
  // Output only. The proposed end time in yyyy-MM-dd HH:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  proposedEndDateTime?: string;
  // Output only. The proposed end time as a well-defined type, e.g. FOREVER.
  //
  // Behaviors: OUTPUT_ONLY
  proposedEndTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Output only. The approved end time in yyyy-MM-dd HH:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  approvedEndDateTime?: string;
  // Output only. The approved end time as a well-defined type, e.g. FOREVER.
  //
  // Behaviors: OUTPUT_ONLY
  approvedEndTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Output only. The proposed spending limit in micros.  One million is equivalent to
  // one unit.
  //
  // Behaviors: OUTPUT_ONLY
  proposedSpendingLimitMicros?: number;
  // Output only. The proposed spending limit as a well-defined type, e.g. INFINITE.
  //
  // Behaviors: OUTPUT_ONLY
  proposedSpendingLimitType?: googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType;
  // Output only. The approved spending limit in micros.  One million is equivalent to
  // one unit.  This will only be populated if the proposed spending limit
  // is finite, and will always be greater than or equal to the
  // proposed spending limit.
  //
  // Behaviors: OUTPUT_ONLY
  approvedSpendingLimitMicros?: number;
  // Output only. The approved spending limit as a well-defined type, e.g. INFINITE.  This
  // will only be populated if the approved spending limit is INFINITE.
  //
  // Behaviors: OUTPUT_ONLY
  approvedSpendingLimitType?: googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType;
  // Output only. The adjusted spending limit in micros.  One million is equivalent to
  // one unit.
  // If the approved spending limit is finite, the adjusted
  // spending limit may vary depending on the types of adjustments applied
  // to this budget, if applicable.
  // The different kinds of adjustments are described here:
  // https://support.google.com/google-ads/answer/1704323
  // For example, a debit adjustment reduces how much the account is
  // allowed to spend.
  //
  // Behaviors: OUTPUT_ONLY
  adjustedSpendingLimitMicros?: number;
  // Output only. The adjusted spending limit as a well-defined type, e.g. INFINITE.
  // This will only be populated if the adjusted spending limit is INFINITE,
  // which is guaranteed to be true if the approved spending limit is
  // INFINITE.
  //
  // Behaviors: OUTPUT_ONLY
  adjustedSpendingLimitType?: googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType;
};

// The possible statuses of an AccountBudget.
export type googleadsgoogleadsv9enums_AccountBudgetStatusEnum_AccountBudgetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The account budget is pending approval.
  | "PENDING"
  // The account budget has been approved.
  | "APPROVED"
  // The account budget has been cancelled by the user.
  | "CANCELLED";
// A pending proposal associated with the enclosing account-level budget,
// if applicable.
export type googleadsgoogleadsv9resources_AccountBudget_PendingAccountBudgetProposal = {
  // Output only. The resource name of the proposal.
  // AccountBudgetProposal resource names have the form:
  // `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}`
  //
  // Behaviors: OUTPUT_ONLY
  accountBudgetProposal?: string;
  // Output only. The type of this proposal, e.g. END to end the budget associated
  // with this proposal.
  //
  // Behaviors: OUTPUT_ONLY
  proposalType: googleadsgoogleadsv9enums_AccountBudgetProposalTypeEnum_AccountBudgetProposalType | undefined;
  // Output only. The name to assign to the account-level budget.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The start time in yyyy-MM-dd HH:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  startDateTime?: string;
  // Output only. A purchase order number is a value that helps users reference this budget
  // in their monthly invoices.
  //
  // Behaviors: OUTPUT_ONLY
  purchaseOrderNumber?: string;
  // Output only. Notes associated with this budget.
  //
  // Behaviors: OUTPUT_ONLY
  notes?: string;
  // Output only. The time when this account-level budget proposal was created.
  // Formatted as yyyy-MM-dd HH:mm:ss.
  //
  // Behaviors: OUTPUT_ONLY
  creationDateTime?: string;
  // Output only. The end time in yyyy-MM-dd HH:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  endDateTime?: string;
  // Output only. The end time as a well-defined type, e.g. FOREVER.
  //
  // Behaviors: OUTPUT_ONLY
  endTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Output only. The spending limit in micros.  One million is equivalent to
  // one unit.
  //
  // Behaviors: OUTPUT_ONLY
  spendingLimitMicros?: number;
  // Output only. The spending limit as a well-defined type, e.g. INFINITE.
  //
  // Behaviors: OUTPUT_ONLY
  spendingLimitType?: googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType;
};

// The possible types of an AccountBudgetProposal.
export type googleadsgoogleadsv9enums_AccountBudgetProposalTypeEnum_AccountBudgetProposalType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Identifies a request to create a new budget.
  | "CREATE"
  // Identifies a request to edit an existing budget.
  | "UPDATE"
  // Identifies a request to end a budget that has already started.
  | "END"
  // Identifies a request to remove a budget that hasn't started yet.
  | "REMOVE";
// The possible time types used by certain resources as an alternative to
// absolute timestamps.
export type googleadsgoogleadsv9enums_TimeTypeEnum_TimeType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // As soon as possible.
  | "NOW"
  // An infinite point in the future.
  | "FOREVER";
// The possible spending limit types used by certain resources as an
// alternative to absolute money values in micros.
export type googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Infinite, indicates unlimited spending power.
  | "INFINITE";
// Request message for fetching the invoices of a given billing setup that were
// issued during a given month.
export type ListInvoicesRequest = {
  // Required. The ID of the customer to fetch invoices for.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The billing setup resource name of the requested invoices.
  // `customers/{customer_id}/billingSetups/{billing_setup_id}`
  //
  // Behaviors: REQUIRED
  billingSetup: string | undefined;
  // Required. The issue year to retrieve invoices, in yyyy format. Only
  // invoices issued in 2019 or later can be retrieved.
  //
  // Behaviors: REQUIRED
  issueYear: string | undefined;
  // Required. The issue month to retrieve invoices.
  //
  // Behaviors: REQUIRED
  issueMonth: googleadsgoogleadsv9enums_MonthOfYearEnum_MonthOfYear | undefined;
};

// Response message for [InvoiceService.ListInvoices][google.ads.googleads.v9.services.InvoiceService.ListInvoices].
export type ListInvoicesResponse = {
  // The list of invoices that match the billing setup and time period.
  invoices: googleadsgoogleadsv9resources_Invoice[] | undefined;
};

// An invoice. All invoice information is snapshotted to match the PDF invoice.
// For invoices older than the launch of InvoiceService, the snapshotted
// information may not match the PDF invoice.
export type googleadsgoogleadsv9resources_Invoice = {
  // Output only. The resource name of the invoice. Multiple customers can share a given
  // invoice, so multiple resource names may point to the same invoice.
  // Invoice resource names have the form:
  // `customers/{customer_id}/invoices/{invoice_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the invoice. It appears on the invoice PDF as "Invoice number".
  //
  // Behaviors: OUTPUT_ONLY
  id?: string;
  // Output only. The type of invoice.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_InvoiceTypeEnum_InvoiceType | undefined;
  // Output only. The resource name of this invoice’s billing setup.
  // `customers/{customer_id}/billingSetups/{billing_setup_id}`
  //
  // Behaviors: OUTPUT_ONLY
  billingSetup?: string;
  // Output only. A 16 digit ID used to identify the payments account associated with the
  // billing setup, e.g. "1234-5678-9012-3456". It appears on the invoice PDF as
  // "Billing Account Number".
  //
  // Behaviors: OUTPUT_ONLY
  paymentsAccountId?: string;
  // Output only. A 12 digit ID used to identify the payments profile associated with the
  // billing setup, e.g. "1234-5678-9012". It appears on the invoice PDF as
  // "Billing ID".
  //
  // Behaviors: OUTPUT_ONLY
  paymentsProfileId?: string;
  // Output only. The issue date in yyyy-mm-dd format. It appears on the invoice PDF as
  // either "Issue date" or "Invoice date".
  //
  // Behaviors: OUTPUT_ONLY
  issueDate?: string;
  // Output only. The due date in yyyy-mm-dd format.
  //
  // Behaviors: OUTPUT_ONLY
  dueDate?: string;
  // Output only. The service period date range of this invoice. The end date is inclusive.
  //
  // Behaviors: OUTPUT_ONLY
  serviceDateRange: googleadsgoogleadsv9common_DateRange | undefined;
  // Output only. The currency code. All costs are returned in this currency. A subset of the
  // currency codes derived from the ISO 4217 standard is supported.
  //
  // Behaviors: OUTPUT_ONLY
  currencyCode?: string;
  // Output only. The pretax subtotal amount of invoice level adjustments, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  adjustmentsSubtotalAmountMicros: number | undefined;
  // Output only. The sum of taxes on the invoice level adjustments, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  adjustmentsTaxAmountMicros: number | undefined;
  // Output only. The total amount of invoice level adjustments, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  adjustmentsTotalAmountMicros: number | undefined;
  // Output only. The pretax subtotal amount of invoice level regulatory costs, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  regulatoryCostsSubtotalAmountMicros: number | undefined;
  // Output only. The sum of taxes on the invoice level regulatory costs, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  regulatoryCostsTaxAmountMicros: number | undefined;
  // Output only. The total amount of invoice level regulatory costs, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  regulatoryCostsTotalAmountMicros: number | undefined;
  // Output only. The pretax subtotal amount, in micros. This equals the
  // sum of the AccountBudgetSummary subtotal amounts,
  // Invoice.adjustments_subtotal_amount_micros, and
  // Invoice.regulatory_costs_subtotal_amount_micros.
  // Starting with v6, the Invoice.regulatory_costs_subtotal_amount_micros is no
  // longer included.
  //
  // Behaviors: OUTPUT_ONLY
  subtotalAmountMicros?: number;
  // Output only. The sum of all taxes on the invoice, in micros. This equals the sum of the
  // AccountBudgetSummary tax amounts, plus taxes not associated with a specific
  // account budget.
  //
  // Behaviors: OUTPUT_ONLY
  taxAmountMicros?: number;
  // Output only. The total amount, in micros. This equals the sum of
  // Invoice.subtotal_amount_micros and Invoice.tax_amount_micros.
  // Starting with v6, Invoice.regulatory_costs_subtotal_amount_micros is
  // also added as it is no longer already included in
  // Invoice.tax_amount_micros.
  //
  // Behaviors: OUTPUT_ONLY
  totalAmountMicros?: number;
  // Output only. The resource name of the original invoice corrected, wrote off, or canceled
  // by this invoice, if applicable. If `corrected_invoice` is set,
  // `replaced_invoices` will not be set.
  // Invoice resource names have the form:
  // `customers/{customer_id}/invoices/{invoice_id}`
  //
  // Behaviors: OUTPUT_ONLY
  correctedInvoice?: string;
  // Output only. The resource name of the original invoice(s) being rebilled or replaced by
  // this invoice, if applicable. There might be multiple replaced invoices due
  // to invoice consolidation. The replaced invoices may not belong to the same
  // payments account. If `replaced_invoices` is set, `corrected_invoice` will
  // not be set.
  // Invoice resource names have the form:
  // `customers/{customer_id}/invoices/{invoice_id}`
  //
  // Behaviors: OUTPUT_ONLY
  replacedInvoices: string[] | undefined;
  // Output only. The URL to a PDF copy of the invoice. Users need to pass in their OAuth
  // token to request the PDF with this URL.
  //
  // Behaviors: OUTPUT_ONLY
  pdfUrl?: string;
  // Output only. The list of summarized account budget information associated with this
  // invoice.
  //
  // Behaviors: OUTPUT_ONLY
  accountBudgetSummaries: googleadsgoogleadsv9resources_Invoice_AccountBudgetSummary[] | undefined;
};

// The possible type of invoices.
export type googleadsgoogleadsv9enums_InvoiceTypeEnum_InvoiceType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // An invoice with a negative amount. The account receives a credit.
  | "CREDIT_MEMO"
  // An invoice with a positive amount. The account owes a balance.
  | "INVOICE";
// A date range.
export type googleadsgoogleadsv9common_DateRange = {
  // The start date, in yyyy-mm-dd format. This date is inclusive.
  startDate?: string;
  // The end date, in yyyy-mm-dd format. This date is inclusive.
  endDate?: string;
};

// Represents a summarized account budget billable cost.
export type googleadsgoogleadsv9resources_Invoice_AccountBudgetSummary = {
  // Output only. The resource name of the customer associated with this account budget.
  // This contains the customer ID, which appears on the invoice PDF as
  // "Account ID".
  // Customer resource names have the form:
  // `customers/{customer_id}`
  //
  // Behaviors: OUTPUT_ONLY
  customer?: string;
  // Output only. The descriptive name of the account budget’s customer. It appears on the
  // invoice PDF as "Account".
  //
  // Behaviors: OUTPUT_ONLY
  customerDescriptiveName?: string;
  // Output only. The resource name of the account budget associated with this summarized
  // billable cost.
  // AccountBudget resource names have the form:
  // `customers/{customer_id}/accountBudgets/{account_budget_id}`
  //
  // Behaviors: OUTPUT_ONLY
  accountBudget?: string;
  // Output only. The name of the account budget. It appears on the invoice PDF as "Account
  // budget".
  //
  // Behaviors: OUTPUT_ONLY
  accountBudgetName?: string;
  // Output only. The purchase order number of the account budget. It appears on the
  // invoice PDF as "Purchase order".
  //
  // Behaviors: OUTPUT_ONLY
  purchaseOrderNumber?: string;
  // Output only. The pretax subtotal amount attributable to this budget during the service
  // period, in micros.
  //
  // Behaviors: OUTPUT_ONLY
  subtotalAmountMicros?: number;
  // Output only. The tax amount attributable to this budget during the service period, in
  // micros.
  //
  // Behaviors: OUTPUT_ONLY
  taxAmountMicros?: number;
  // Output only. The total amount attributable to this budget during the service period,
  // in micros. This equals the sum of the account budget subtotal amount and
  // the account budget tax amount.
  //
  // Behaviors: OUTPUT_ONLY
  totalAmountMicros?: number;
  // Output only. The billable activity date range of the account budget, within the
  // service date range of this invoice. The end date is inclusive. This can
  // be different from the account budget's start and end time.
  //
  // Behaviors: OUTPUT_ONLY
  billableActivityDateRange: googleadsgoogleadsv9common_DateRange | undefined;
};

// A service to fetch invoices issued for a billing setup during a given month.
export interface InvoiceService {
  // Returns all invoices associated with a billing setup, for a given month.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [InvoiceError]()
  // [QuotaError]()
  // [RequestError]()
  ListInvoices(request: ListInvoicesRequest): Promise<ListInvoicesResponse>;
}

export function createInvoiceServiceClient(
  handler: RequestHandler
): InvoiceService {
  return {
    ListInvoices(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/invoices`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      if (request.billingSetup) {
        queryParams.push("billingSetup=" + encodeURIComponent(request.billingSetup.toString()));
      }
      if (request.issueYear) {
        queryParams.push("issueYear=" + encodeURIComponent(request.issueYear.toString()));
      }
      if (request.issueMonth) {
        queryParams.push("issueMonth=" + encodeURIComponent(request.issueMonth.toString()));
      }
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListInvoicesResponse>;
    },
  };
}
// Request message for [AssetService.GetAsset][google.ads.googleads.v9.services.AssetService.GetAsset]
export type GetAssetRequest = {
  // Required. The resource name of the asset to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AssetService.MutateAssets][google.ads.googleads.v9.services.AssetService.MutateAssets]
export type MutateAssetsRequest = {
  // Required. The ID of the customer whose assets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual assets.
  //
  // Behaviors: REQUIRED
  operations: AssetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation to create an asset. Supported asset types are
// YoutubeVideoAsset, MediaBundleAsset, ImageAsset, and LeadFormAsset. TextAsset
// should be created with Ad inline.
export type AssetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new asset.
  create?: googleadsgoogleadsv9resources_Asset;
  // Update operation: The asset is expected to have a valid resource name in
  // this format:
  // `customers/{customer_id}/assets/{asset_id}`
  update?: googleadsgoogleadsv9resources_Asset;
};

// Asset is a part of an ad which can be shared across multiple ads.
// It can be an image (ImageAsset), a video (YoutubeVideoAsset), etc.
// Assets are immutable and cannot be removed. To stop an asset from serving,
// remove the asset from the entity that is using it.
export type googleadsgoogleadsv9resources_Asset = {
  // Immutable. The resource name of the asset.
  // Asset resource names have the form:
  // `customers/{customer_id}/assets/{asset_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the asset.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Optional name of the asset.
  name?: string;
  // Output only. Type of the asset.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_AssetTypeEnum_AssetType | undefined;
  // A list of possible final URLs after all cross domain redirects.
  finalUrls: string[] | undefined;
  // A list of possible final mobile URLs after all cross domain redirects.
  finalMobileUrls: string[] | undefined;
  // URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // A list of mappings to be used for substituting URL custom parameter tags in
  // the tracking_url_template, final_urls, and/or final_mobile_urls.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // URL template for appending params to landing page URLs served with parallel
  // tracking.
  finalUrlSuffix?: string;
  // Output only. Policy information for the asset.
  //
  // Behaviors: OUTPUT_ONLY
  policySummary: googleadsgoogleadsv9resources_AssetPolicySummary | undefined;
  // Immutable. A YouTube video asset.
  //
  // Behaviors: IMMUTABLE
  youtubeVideoAsset?: googleadsgoogleadsv9common_YoutubeVideoAsset;
  // Immutable. A media bundle asset.
  //
  // Behaviors: IMMUTABLE
  mediaBundleAsset?: googleadsgoogleadsv9common_MediaBundleAsset;
  // Output only. An image asset.
  //
  // Behaviors: OUTPUT_ONLY
  imageAsset?: googleadsgoogleadsv9common_ImageAsset;
  // Immutable. A text asset.
  //
  // Behaviors: IMMUTABLE
  textAsset?: googleadsgoogleadsv9common_TextAsset;
  // A lead form asset.
  leadFormAsset?: googleadsgoogleadsv9common_LeadFormAsset;
  // A book on google asset.
  bookOnGoogleAsset?: googleadsgoogleadsv9common_BookOnGoogleAsset;
  // A promotion asset.
  promotionAsset?: googleadsgoogleadsv9common_PromotionAsset;
  // A callout asset.
  calloutAsset?: googleadsgoogleadsv9common_CalloutAsset;
  // A structured snippet asset.
  structuredSnippetAsset?: googleadsgoogleadsv9common_StructuredSnippetAsset;
  // A sitelink asset.
  sitelinkAsset?: googleadsgoogleadsv9common_SitelinkAsset;
  // A page feed asset.
  pageFeedAsset?: googleadsgoogleadsv9common_PageFeedAsset;
  // A dynamic education asset.
  dynamicEducationAsset?: googleadsgoogleadsv9common_DynamicEducationAsset;
  // A mobile app asset.
  mobileAppAsset?: googleadsgoogleadsv9common_MobileAppAsset;
  // A hotel callout asset.
  hotelCalloutAsset?: googleadsgoogleadsv9common_HotelCalloutAsset;
  // A call asset.
  callAsset?: googleadsgoogleadsv9common_CallAsset;
  // A price asset.
  priceAsset?: googleadsgoogleadsv9common_PriceAsset;
  // Immutable. A call to action asset.
  //
  // Behaviors: IMMUTABLE
  callToActionAsset?: googleadsgoogleadsv9common_CallToActionAsset;
};

// Enum describing possible types of asset.
export type googleadsgoogleadsv9enums_AssetTypeEnum_AssetType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // YouTube video asset.
  | "YOUTUBE_VIDEO"
  // Media bundle asset.
  | "MEDIA_BUNDLE"
  // Image asset.
  | "IMAGE"
  // Text asset.
  | "TEXT"
  // Lead form asset.
  | "LEAD_FORM"
  // Book on Google asset.
  | "BOOK_ON_GOOGLE"
  // Promotion asset.
  | "PROMOTION"
  // Callout asset.
  | "CALLOUT"
  // Structured Snippet asset.
  | "STRUCTURED_SNIPPET"
  // Sitelink asset.
  | "SITELINK"
  // Page Feed asset.
  | "PAGE_FEED"
  // Dynamic Education asset.
  | "DYNAMIC_EDUCATION"
  // Mobile app asset.
  | "MOBILE_APP"
  // Hotel callout asset.
  | "HOTEL_CALLOUT"
  // Call asset.
  | "CALL"
  // Price asset.
  | "PRICE"
  // Call to action asset.
  | "CALL_TO_ACTION";
// Contains policy information for an asset.
export type googleadsgoogleadsv9resources_AssetPolicySummary = {
  // Output only. The list of policy findings for this asset.
  //
  // Behaviors: OUTPUT_ONLY
  policyTopicEntries: googleadsgoogleadsv9common_PolicyTopicEntry[] | undefined;
  // Output only. Where in the review process this asset is.
  //
  // Behaviors: OUTPUT_ONLY
  reviewStatus: googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus | undefined;
  // Output only. The overall approval status of this asset, calculated based on the status
  // of its individual policy topic entries.
  //
  // Behaviors: OUTPUT_ONLY
  approvalStatus: googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus | undefined;
};

// A YouTube asset.
export type googleadsgoogleadsv9common_YoutubeVideoAsset = {
  // YouTube video id. This is the 11 character string value used in the
  // YouTube video URL.
  youtubeVideoId?: string;
  // YouTube video title.
  youtubeVideoTitle: string | undefined;
};

// A MediaBundle asset.
export type googleadsgoogleadsv9common_MediaBundleAsset = {
  // Media bundle (ZIP file) asset data. The format of the uploaded ZIP file
  // depends on the ad field where it will be used. For more information on the
  // format, see the documentation of the ad field where you plan on using the
  // MediaBundleAsset. This field is mutate only.
  data?: string;
};

// An Image asset.
export type googleadsgoogleadsv9common_ImageAsset = {
  // The raw bytes data of an image. This field is mutate only.
  data?: string;
  // File size of the image asset in bytes.
  fileSize?: number;
  // MIME type of the image asset.
  mimeType: googleadsgoogleadsv9enums_MimeTypeEnum_MimeType | undefined;
  // Metadata for this image at its original size.
  fullSize: googleadsgoogleadsv9common_ImageDimension | undefined;
};

// Metadata for an image at a certain size, either original or resized.
export type googleadsgoogleadsv9common_ImageDimension = {
  // Height of the image.
  heightPixels?: number;
  // Width of the image.
  widthPixels?: number;
  // A URL that returns the image with this height and width.
  url?: string;
};

// A Text asset.
export type googleadsgoogleadsv9common_TextAsset = {
  // Text content of the text asset.
  text?: string;
};

// A Lead Form asset.
export type googleadsgoogleadsv9common_LeadFormAsset = {
  // Required. The name of the business being advertised.
  //
  // Behaviors: REQUIRED
  businessName: string | undefined;
  // Required. Pre-defined display text that encourages user to expand the form.
  //
  // Behaviors: REQUIRED
  callToActionType: googleadsgoogleadsv9enums_LeadFormCallToActionTypeEnum_LeadFormCallToActionType | undefined;
  // Required. Text giving a clear value proposition of what users expect once they expand
  // the form.
  //
  // Behaviors: REQUIRED
  callToActionDescription: string | undefined;
  // Required. Headline of the expanded form to describe what the form is asking for or
  // facilitating.
  //
  // Behaviors: REQUIRED
  headline: string | undefined;
  // Required. Detailed description of the expanded form to describe what the form is
  // asking for or facilitating.
  //
  // Behaviors: REQUIRED
  description: string | undefined;
  // Required. Link to a page describing the policy on how the collected data is handled
  // by the advertiser/business.
  //
  // Behaviors: REQUIRED
  privacyPolicyUrl: string | undefined;
  // Headline of text shown after form submission that describes how the
  // advertiser will follow up with the user.
  postSubmitHeadline?: string;
  // Detailed description shown after form submission that describes how the
  // advertiser will follow up with the user.
  postSubmitDescription?: string;
  // Ordered list of input fields.
  fields: googleadsgoogleadsv9common_LeadFormField[] | undefined;
  // Configured methods for collected lead data to be delivered to advertiser.
  // Only one method typed as WebhookDelivery can be configured.
  deliveryMethods: googleadsgoogleadsv9common_LeadFormDeliveryMethod[] | undefined;
  // Pre-defined display text that encourages user action after the form is
  // submitted.
  postSubmitCallToActionType: googleadsgoogleadsv9enums_LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType | undefined;
  // Asset resource name of the background image. The minimum size is 600x314
  // and the aspect ratio must be 1.91:1 (+-1%).
  backgroundImageAsset?: string;
  // Desired intent for the lead form, e.g. more volume or more qualified.
  desiredIntent: googleadsgoogleadsv9enums_LeadFormDesiredIntentEnum_LeadFormDesiredIntent | undefined;
  // Custom disclosure shown along with Google disclaimer on the lead form.
  // Accessible to allowed customers only.
  customDisclosure?: string;
};

// Enum describing the type of call-to-action phrases in a lead form.
export type googleadsgoogleadsv9enums_LeadFormCallToActionTypeEnum_LeadFormCallToActionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Learn more.
  | "LEARN_MORE"
  // Get quote.
  | "GET_QUOTE"
  // Apply now.
  | "APPLY_NOW"
  // Sign Up.
  | "SIGN_UP"
  // Contact us.
  | "CONTACT_US"
  // Subscribe.
  | "SUBSCRIBE"
  // Download.
  | "DOWNLOAD"
  // Book now.
  | "BOOK_NOW"
  // Get offer.
  | "GET_OFFER"
  // Register.
  | "REGISTER"
  // Get info.
  | "GET_INFO"
  // Request a demo.
  | "REQUEST_DEMO"
  // Join now.
  | "JOIN_NOW"
  // Get started.
  | "GET_STARTED";
// One input field instance within a form.
export type googleadsgoogleadsv9common_LeadFormField = {
  // Describes the input type, which may be a predefined type such as
  // "full name" or a pre-vetted question like "Do you own a car?".
  inputType: googleadsgoogleadsv9enums_LeadFormFieldUserInputTypeEnum_LeadFormFieldUserInputType | undefined;
  // Answer configuration for a single choice question. Can be set only for
  // pre-vetted question fields. Minimum of 2 answers required and maximum of
  // 12 allowed.
  singleChoiceAnswers?: googleadsgoogleadsv9common_LeadFormSingleChoiceAnswers;
};

// Enum describing the input type of a lead form field.
export type googleadsgoogleadsv9enums_LeadFormFieldUserInputTypeEnum_LeadFormFieldUserInputType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The user will be asked to fill in their given and family name. This field
  // cannot be set at the same time as GIVEN_NAME or FAMILY_NAME.
  | "FULL_NAME"
  // The user will be asked to fill in their email address.
  | "EMAIL"
  // The user will be asked to fill in their phone number.
  | "PHONE_NUMBER"
  // The user will be asked to fill in their zip code.
  | "POSTAL_CODE"
  // The user will be asked to fill in their city.
  | "CITY"
  // The user will be asked to fill in their region part of the address (e.g.
  // state for US, province for Canada).
  | "REGION"
  // The user will be asked to fill in their country.
  | "COUNTRY"
  // The user will be asked to fill in their work email address.
  | "WORK_EMAIL"
  // The user will be asked to fill in their company name.
  | "COMPANY_NAME"
  // The user will be asked to fill in their work phone.
  | "WORK_PHONE"
  // The user will be asked to fill in their job title.
  | "JOB_TITLE"
  // The user will be asked to fill in their first name. This
  // field can not be set at the same time as FULL_NAME.
  | "FIRST_NAME"
  // The user will be asked to fill in their last name. This
  // field can not be set at the same time as FULL_NAME.
  | "LAST_NAME"
  // Question: "Which model are you interested in?"
  // Category: "Auto"
  | "VEHICLE_MODEL"
  // Question: "Which type of vehicle are you interested in?"
  // Category: "Auto"
  | "VEHICLE_TYPE"
  // Question: "What is your preferred dealership?"
  // Category: "Auto"
  | "PREFERRED_DEALERSHIP"
  // Question: "When do you plan on purchasing a vehicle?"
  // Category: "Auto"
  | "VEHICLE_PURCHASE_TIMELINE"
  // Question: "Do you own a vehicle?"
  // Category: "Auto"
  | "VEHICLE_OWNERSHIP"
  // Question: "What vehicle ownership option are you interested in?"
  // Category: "Auto"
  | "VEHICLE_PAYMENT_TYPE"
  // Question: "What type of vehicle condition are you interested in?"
  // Category: "Auto"
  | "VEHICLE_CONDITION"
  // Question: "What size is your company?"
  // Category: "Business"
  | "COMPANY_SIZE"
  // Question: "What is your annual sales volume?"
  // Category: "Business"
  | "ANNUAL_SALES"
  // Question: "How many years have you been in business?"
  // Category: "Business"
  | "YEARS_IN_BUSINESS"
  // Question: "What is your job department?"
  // Category: "Business"
  | "JOB_DEPARTMENT"
  // Question: "What is your job role?"
  // Category: "Business"
  | "JOB_ROLE"
  // Question: "Which program are you interested in?"
  // Category: "Education"
  | "EDUCATION_PROGRAM"
  // Question: "Which course are you interested in?"
  // Category: "Education"
  | "EDUCATION_COURSE"
  // Question: "Which product are you interested in?"
  // Category: "General"
  | "PRODUCT"
  // Question: "Which service are you interested in?"
  // Category: "General"
  | "SERVICE"
  // Question: "Which offer are you interested in?"
  // Category: "General"
  | "OFFER"
  // Question: "Which category are you interested in?"
  // Category: "General"
  | "CATEGORY"
  // Question: "What is your preferred method of contact?"
  // Category: "General"
  | "PREFERRED_CONTACT_METHOD"
  // Question: "What is your preferred location?"
  // Category: "General"
  | "PREFERRED_LOCATION"
  // Question: "What is the best time to contact you?"
  // Category: "General"
  | "PREFERRED_CONTACT_TIME"
  // Question: "When are you looking to make a purchase?"
  // Category: "General"
  | "PURCHASE_TIMELINE"
  // Question: "How many years of work experience do you have?"
  // Category: "Jobs"
  | "YEARS_OF_EXPERIENCE"
  // Question: "What industry do you work in?"
  // Category: "Jobs"
  | "JOB_INDUSTRY"
  // Question: "What is your highest level of education?"
  // Category: "Jobs"
  | "LEVEL_OF_EDUCATION"
  // Question: "What type of property are you looking for?"
  // Category: "Real Estate"
  | "PROPERTY_TYPE"
  // Question: "What do you need a realtor's help with?"
  // Category: "Real Estate"
  | "REALTOR_HELP_GOAL"
  // Question: "What neighborhood are you interested in?"
  // Category: "Real Estate"
  | "PROPERTY_COMMUNITY"
  // Question: "What price range are you looking for?"
  // Category: "Real Estate"
  | "PRICE_RANGE"
  // Question: "How many bedrooms are you looking for?"
  // Category: "Real Estate"
  | "NUMBER_OF_BEDROOMS"
  // Question: "Are you looking for a fully furnished property?"
  // Category: "Real Estate"
  | "FURNISHED_PROPERTY"
  // Question: "Are you looking for properties that allow pets?"
  // Category: "Real Estate"
  | "PETS_ALLOWED_PROPERTY"
  // Question: "What is the next product you plan to purchase?"
  // Category: "Retail"
  | "NEXT_PLANNED_PURCHASE"
  // Question: "Would you like to sign up for an event?"
  // Category: "Retail"
  | "EVENT_SIGNUP_INTEREST"
  // Question: "Where are you interested in shopping?"
  // Category: "Retail"
  | "PREFERRED_SHOPPING_PLACES"
  // Question: "What is your favorite brand?"
  // Category: "Retail"
  | "FAVORITE_BRAND"
  // Question: "Which type of valid commercial license do you have?"
  // Category: "Transportation"
  | "TRANSPORTATION_COMMERCIAL_LICENSE_TYPE"
  // Question: "Interested in booking an event?"
  // Category: "Travel"
  | "EVENT_BOOKING_INTEREST"
  // Question: "What is your destination country?"
  // Category: "Travel"
  | "DESTINATION_COUNTRY"
  // Question: "What is your destination city?"
  // Category: "Travel"
  | "DESTINATION_CITY"
  // Question: "What is your departure country?"
  // Category: "Travel"
  | "DEPARTURE_COUNTRY"
  // Question: "What is your departure city?"
  // Category: "Travel"
  | "DEPARTURE_CITY"
  // Question: "What is your departure date?"
  // Category: "Travel"
  | "DEPARTURE_DATE"
  // Question: "What is your return date?"
  // Category: "Travel"
  | "RETURN_DATE"
  // Question: "How many people are you traveling with?"
  // Category: "Travel"
  | "NUMBER_OF_TRAVELERS"
  // Question: "What is your travel budget?"
  // Category: "Travel"
  | "TRAVEL_BUDGET"
  // Question: "Where do you want to stay during your travel?"
  // Category: "Travel"
  | "TRAVEL_ACCOMMODATION";
// Defines possible answers for a single choice question, usually presented as
// a single-choice drop-down list.
export type googleadsgoogleadsv9common_LeadFormSingleChoiceAnswers = {
  // List of choices for a single question field. The order of entries defines
  // UI order. Minimum of 2 answers required and maximum of 12 allowed.
  answers: string[] | undefined;
};

// A configuration of how leads are delivered to the advertiser.
export type googleadsgoogleadsv9common_LeadFormDeliveryMethod = {
  // Webhook method of delivery.
  webhook?: googleadsgoogleadsv9common_WebhookDelivery;
};

// Google notifies the advertiser of leads by making HTTP calls to an
// endpoint they specify. The requests contain JSON matching a schema that
// Google publishes as part of form ads documentation.
export type googleadsgoogleadsv9common_WebhookDelivery = {
  // Webhook url specified by advertiser to send the lead.
  advertiserWebhookUrl?: string;
  // Anti-spoofing secret set by the advertiser as part of the webhook payload.
  googleSecret?: string;
  // The schema version that this delivery instance will use.
  payloadSchemaVersion?: number;
};

// Enum describing the type of post-submit call-to-action phrases for a lead
// form.
export type googleadsgoogleadsv9enums_LeadFormPostSubmitCallToActionTypeEnum_LeadFormPostSubmitCallToActionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Visit site.
  | "VISIT_SITE"
  // Download.
  | "DOWNLOAD"
  // Learn more.
  | "LEARN_MORE"
  // Shop now.
  | "SHOP_NOW";
// Enum describing the desired level of intent of generated leads.
export type googleadsgoogleadsv9enums_LeadFormDesiredIntentEnum_LeadFormDesiredIntent =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Deliver more leads at a potentially lower quality.
  | "LOW_INTENT"
  // Deliver leads that are more qualified.
  | "HIGH_INTENT";
// A Book on Google asset. Used to redirect user to book through Google.
// Book on Google will change the redirect url to book directly through
// Google.
export type googleadsgoogleadsv9common_BookOnGoogleAsset = {
};

// A Promotion asset.
export type googleadsgoogleadsv9common_PromotionAsset = {
  // Required. A freeform description of what the promotion is targeting.
  //
  // Behaviors: REQUIRED
  promotionTarget: string | undefined;
  // A modifier for qualification of the discount.
  discountModifier: googleadsgoogleadsv9enums_PromotionExtensionDiscountModifierEnum_PromotionExtensionDiscountModifier | undefined;
  // Start date of when the promotion is eligible to be redeemed, in yyyy-MM-dd
  // format.
  redemptionStartDate: string | undefined;
  // Last date of when the promotion is eligible to be redeemed, in yyyy-MM-dd
  // format.
  redemptionEndDate: string | undefined;
  // The occasion the promotion was intended for.
  // If an occasion is set, the redemption window will need to fall within the
  // date range associated with the occasion.
  occasion: googleadsgoogleadsv9enums_PromotionExtensionOccasionEnum_PromotionExtensionOccasion | undefined;
  // The language of the promotion.
  // Represented as BCP 47 language tag.
  languageCode: string | undefined;
  // Start date of when this asset is effective and can begin serving, in
  // yyyy-MM-dd format.
  startDate: string | undefined;
  // Last date of when this asset is effective and still serving, in yyyy-MM-dd
  // format.
  endDate: string | undefined;
  // List of non-overlapping schedules specifying all time intervals for which
  // the asset may serve. There can be a maximum of 6 schedules per day, 42 in
  // total.
  adScheduleTargets: googleadsgoogleadsv9common_AdScheduleInfo[] | undefined;
  // Percentage off discount in the promotion. 1,000,000 = 100%.
  // Either this or money_amount_off is required.
  percentOff?: number;
  // Money amount off for discount in the promotion.
  // Either this or percent_off is required.
  moneyAmountOff?: googleadsgoogleadsv9common_Money;
  // A code the user should use in order to be eligible for the promotion.
  promotionCode?: string;
  // The amount the total order needs to be for the user to be eligible for
  // the promotion.
  ordersOverAmount?: googleadsgoogleadsv9common_Money;
};

// A Callout asset.
export type googleadsgoogleadsv9common_CalloutAsset = {
  // Required. The callout text.
  // The length of this string should be between 1 and 25, inclusive.
  //
  // Behaviors: REQUIRED
  calloutText: string | undefined;
  // Start date of when this asset is effective and can begin serving, in
  // yyyy-MM-dd format.
  startDate: string | undefined;
  // Last date of when this asset is effective and still serving, in yyyy-MM-dd
  // format.
  endDate: string | undefined;
  // List of non-overlapping schedules specifying all time intervals for which
  // the asset may serve. There can be a maximum of 6 schedules per day, 42 in
  // total.
  adScheduleTargets: googleadsgoogleadsv9common_AdScheduleInfo[] | undefined;
};

// A Structured Snippet asset.
export type googleadsgoogleadsv9common_StructuredSnippetAsset = {
  // Required. The header of the snippet.
  // This string should be one of the predefined values at
  // https://developers.google.com/google-ads/api/reference/data/structured-snippet-headers
  //
  // Behaviors: REQUIRED
  header: string | undefined;
  // Required. The values in the snippet.
  // The size of this collection should be between 3 and 10, inclusive.
  // The length of each value should be between 1 and 25 characters, inclusive.
  //
  // Behaviors: REQUIRED
  values: string[] | undefined;
};

// A Sitelink asset.
export type googleadsgoogleadsv9common_SitelinkAsset = {
  // Required. URL display text for the sitelink.
  // The length of this string should be between 1 and 25, inclusive.
  //
  // Behaviors: REQUIRED
  linkText: string | undefined;
  // First line of the description for the sitelink.
  // If set, the length should be between 1 and 35, inclusive, and description2
  // must also be set.
  description1: string | undefined;
  // Second line of the description for the sitelink.
  // If set, the length should be between 1 and 35, inclusive, and description1
  // must also be set.
  description2: string | undefined;
  // Start date of when this asset is effective and can begin serving, in
  // yyyy-MM-dd format.
  startDate: string | undefined;
  // Last date of when this asset is effective and still serving, in yyyy-MM-dd
  // format.
  endDate: string | undefined;
  // List of non-overlapping schedules specifying all time intervals for which
  // the asset may serve. There can be a maximum of 6 schedules per day, 42 in
  // total.
  adScheduleTargets: googleadsgoogleadsv9common_AdScheduleInfo[] | undefined;
};

// A Page Feed asset.
export type googleadsgoogleadsv9common_PageFeedAsset = {
  // Required. The webpage that advertisers want to target.
  //
  // Behaviors: REQUIRED
  pageUrl: string | undefined;
  // Labels used to group the page urls.
  labels: string[] | undefined;
};

// A Dynamic Education asset.
export type googleadsgoogleadsv9common_DynamicEducationAsset = {
  // Required. Program ID which can be any sequence of letters and digits, and must be
  // unique and match the values of remarketing tag. Required.
  //
  // Behaviors: REQUIRED
  programId: string | undefined;
  // Location ID which can be any sequence of letters and digits and must be
  // unique.
  locationId: string | undefined;
  // Required. Program name, e.g. Nursing. Required.
  //
  // Behaviors: REQUIRED
  programName: string | undefined;
  // Subject of study, e.g. Health.
  subject: string | undefined;
  // Program description, e.g. Nursing Certification.
  programDescription: string | undefined;
  // School name, e.g. Mountain View School of Nursing.
  schoolName: string | undefined;
  // School address which can be specified in one of the following formats.
  // (1) City, state, code, country, e.g. Mountain View, CA, USA.
  // (2) Full address, e.g. 123 Boulevard St, Mountain View, CA 94043.
  // (3) Latitude-longitude in the DDD format, e.g. 41.40338, 2.17403
  address: string | undefined;
  // Contextual keywords, e.g. Nursing certification, Health, Mountain View.
  contextualKeywords: string[] | undefined;
  // Android deep link, e.g.
  // android-app://com.example.android/http/example.com/gizmos?1234.
  androidAppLink: string | undefined;
  // Similar program IDs.
  similarProgramIds: string[] | undefined;
  // iOS deep link, e.g. exampleApp://content/page.
  iosAppLink: string | undefined;
  // iOS app store ID. This is used to check if the user has the app installed
  // on their device before deep linking. If this field is set, then the
  // ios_app_link field must also be present.
  iosAppStoreId: number | undefined;
  // Thumbnail image url, e.g. http://www.example.com/thumbnail.png. The
  // thumbnail image will not be uploaded as image asset.
  thumbnailImageUrl: string | undefined;
  // Image url, e.g. http://www.example.com/image.png. The image will not be
  // uploaded as image asset.
  imageUrl: string | undefined;
};

// An asset representing a mobile app.
export type googleadsgoogleadsv9common_MobileAppAsset = {
  // Required. A string that uniquely identifies a mobile application. It should just
  // contain the platform native id, like "com.android.ebay" for Android or
  // "12345689" for iOS.
  //
  // Behaviors: REQUIRED
  appId: string | undefined;
  // Required. The application store that distributes this specific app.
  //
  // Behaviors: REQUIRED
  appStore: googleadsgoogleadsv9enums_MobileAppVendorEnum_MobileAppVendor | undefined;
  // Required. The visible text displayed when the link is rendered in an ad.
  // The length of this string should be between 1 and 25, inclusive.
  //
  // Behaviors: REQUIRED
  linkText: string | undefined;
  // Start date of when this asset is effective and can begin serving, in
  // yyyy-MM-dd format.
  startDate: string | undefined;
  // Last date of when this asset is effective and still serving, in yyyy-MM-dd
  // format.
  endDate: string | undefined;
};

// An asset representing a hotel callout.
export type googleadsgoogleadsv9common_HotelCalloutAsset = {
  // Required. The text of the hotel callout asset.
  // The length of this string should be between 1 and 25, inclusive.
  //
  // Behaviors: REQUIRED
  text: string | undefined;
  // Required. The language of the hotel callout.
  // Represented as BCP 47 language tag.
  //
  // Behaviors: REQUIRED
  languageCode: string | undefined;
};

// A Call asset.
export type googleadsgoogleadsv9common_CallAsset = {
  // Required. Two-letter country code of the phone number. Examples: 'US', 'us'.
  //
  // Behaviors: REQUIRED
  countryCode: string | undefined;
  // Required. The advertiser's raw phone number. Examples: '1234567890', '(123)456-7890'
  //
  // Behaviors: REQUIRED
  phoneNumber: string | undefined;
  // Indicates whether this CallAsset should use its own call conversion
  // setting, follow the account level setting, or disable call conversion.
  callConversionReportingState: googleadsgoogleadsv9enums_CallConversionReportingStateEnum_CallConversionReportingState | undefined;
  // The conversion action to attribute a call conversion to. If not set, the
  // default conversion action is used. This field only has effect if
  // call_conversion_reporting_state is set to
  // USE_RESOURCE_LEVEL_CALL_CONVERSION_ACTION.
  callConversionAction: string | undefined;
  // List of non-overlapping schedules specifying all time intervals for which
  // the asset may serve. There can be a maximum of 6 schedules per day, 42 in
  // total.
  adScheduleTargets: googleadsgoogleadsv9common_AdScheduleInfo[] | undefined;
};

// An asset representing a list of price offers.
export type googleadsgoogleadsv9common_PriceAsset = {
  // Required. The type of the price asset.
  //
  // Behaviors: REQUIRED
  type: googleadsgoogleadsv9enums_PriceExtensionTypeEnum_PriceExtensionType | undefined;
  // The price qualifier of the price asset.
  priceQualifier: googleadsgoogleadsv9enums_PriceExtensionPriceQualifierEnum_PriceExtensionPriceQualifier | undefined;
  // Required. The language of the price asset.
  // Represented as BCP 47 language tag.
  //
  // Behaviors: REQUIRED
  languageCode: string | undefined;
  // The price offerings of the price asset.
  // The size of this collection should be between 3 and 8, inclusive.
  priceOfferings: googleadsgoogleadsv9common_PriceOffering[] | undefined;
};

// A single price offering within a PriceAsset.
export type googleadsgoogleadsv9common_PriceOffering = {
  // Required. The header of the price offering.
  // The length of this string should be between 1 and 25, inclusive.
  //
  // Behaviors: REQUIRED
  header: string | undefined;
  // Required. The description of the price offering.
  // The length of this string should be between 1 and 25, inclusive.
  //
  // Behaviors: REQUIRED
  description: string | undefined;
  // Required. The price value of the price offering.
  //
  // Behaviors: REQUIRED
  price: googleadsgoogleadsv9common_Money | undefined;
  // The price unit of the price offering.
  unit: googleadsgoogleadsv9enums_PriceExtensionPriceUnitEnum_PriceExtensionPriceUnit | undefined;
  // Required. The final URL after all cross domain redirects.
  //
  // Behaviors: REQUIRED
  finalUrl: string | undefined;
  // The final mobile URL after all cross domain redirects.
  finalMobileUrl: string | undefined;
};

// A call to action asset.
export type googleadsgoogleadsv9common_CallToActionAsset = {
  // Call to action.
  callToAction: googleadsgoogleadsv9enums_CallToActionTypeEnum_CallToActionType | undefined;
};

// Enum describing possible types of call to action.
export type googleadsgoogleadsv9enums_CallToActionTypeEnum_CallToActionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The call to action type is learn more.
  | "LEARN_MORE"
  // The call to action type is get quote.
  | "GET_QUOTE"
  // The call to action type is apply now.
  | "APPLY_NOW"
  // The call to action type is sign up.
  | "SIGN_UP"
  // The call to action type is contact us.
  | "CONTACT_US"
  // The call to action type is subscribe.
  | "SUBSCRIBE"
  // The call to action type is download.
  | "DOWNLOAD"
  // The call to action type is book now.
  | "BOOK_NOW"
  // The call to action type is shop now.
  | "SHOP_NOW";
// Response message for an asset mutate.
export type MutateAssetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAssetResult[] | undefined;
};

// The result for the asset mutate.
export type MutateAssetResult = {
  // The resource name returned for successful operations.
  resourceName: string | undefined;
  // The mutated asset with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  asset: googleadsgoogleadsv9resources_Asset | undefined;
};

// Service to manage assets. Asset types can be created with AssetService are
// YoutubeVideoAsset, MediaBundleAsset and ImageAsset. TextAsset should be
// created with Ad inline.
export interface AssetService {
  // Returns the requested asset in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAsset(request: GetAssetRequest): Promise<googleadsgoogleadsv9resources_Asset>;
  // Creates assets. Operation statuses are returned.
  // List of thrown errors:
  // [AssetError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CurrencyCodeError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MediaUploadError]()
  // [MutateError]()
  // [NotAllowlistedError]()
  // [NotEmptyError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  // [YoutubeVideoRegistrationError]()
  MutateAssets(request: MutateAssetsRequest): Promise<MutateAssetsResponse>;
}

export function createAssetServiceClient(
  handler: RequestHandler
): AssetService {
  return {
    GetAsset(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Asset>;
    },
    MutateAssets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/assets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAssetsResponse>;
    },
  };
}
// Request message for
// [AdGroupCustomizerService.MutateAdGroupCustomizers][google.ads.googleads.v9.services.AdGroupCustomizerService.MutateAdGroupCustomizers].
export type MutateAdGroupCustomizersRequest = {
  // Required. The ID of the customer whose ad group customizers are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad group customizers.
  //
  // Behaviors: REQUIRED
  operations: AdGroupCustomizerOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// A single operation (create, remove) on an customizer attribute.
export type AdGroupCustomizerOperation = {
  // Create operation: No resource name is expected for the new ad group
  // customizer
  create?: googleadsgoogleadsv9resources_AdGroupCustomizer;
  // Remove operation: A resource name for the removed ad group customizer is
  // expected, in this format:
  // `customers/{customer_id}/adGroupCustomizers/{ad_group_id}~{customizer_attribute_id}`
  remove?: string;
};

// A customizer value for the associated CustomizerAttribute at the AdGroup
// level.
export type googleadsgoogleadsv9resources_AdGroupCustomizer = {
  // Immutable. The resource name of the ad group customizer.
  // Ad group customizer resource names have the form:
  // `customers/{customer_id}/adGroupCustomizers/{ad_group_id}~{customizer_attribute_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group to which the customizer attribute is linked.
  //
  // Behaviors: IMMUTABLE
  adGroup: string | undefined;
  // Required. Immutable. The customizer attribute which is linked to the ad group.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  customizerAttribute: string | undefined;
  // Output only. The status of the ad group customizer.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CustomizerValueStatusEnum_CustomizerValueStatus | undefined;
  // Required. The value to associate with the customizer attribute at this level. The
  // value must be of the type specified for the CustomizerAttribute.
  //
  // Behaviors: REQUIRED
  value: googleadsgoogleadsv9common_CustomizerValue | undefined;
};

// Response message for an ad group customizer mutate.
export type MutateAdGroupCustomizersResponse = {
  // All results for the mutate.
  results: MutateAdGroupCustomizerResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the ad group customizer mutate.
export type MutateAdGroupCustomizerResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated AdGroupCustomizer with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adGroupCustomizer: googleadsgoogleadsv9resources_AdGroupCustomizer | undefined;
};

// Service to manage ad group customizer
export interface AdGroupCustomizerService {
  // Creates, updates or removes ad group customizers. Operation statuses are
  // returned.
  MutateAdGroupCustomizers(request: MutateAdGroupCustomizersRequest): Promise<MutateAdGroupCustomizersResponse>;
}

export function createAdGroupCustomizerServiceClient(
  handler: RequestHandler
): AdGroupCustomizerService {
  return {
    MutateAdGroupCustomizers(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupCustomizers:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupCustomizersResponse>;
    },
  };
}
// Request message for [AssetGroupService.GetAssetGroup][google.ads.googleads.v9.services.AssetGroupService.GetAssetGroup].
export type GetAssetGroupRequest = {
  // Required. The resource name of the asset group to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AssetGroupService.MutateAssetGroups][google.ads.googleads.v9.services.AssetGroupService.MutateAssetGroups].
export type MutateAssetGroupsRequest = {
  // Required. The ID of the customer whose asset groups are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual asset groups.
  //
  // Behaviors: REQUIRED
  operations: AssetGroupOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, remove) on an asset group.
export type AssetGroupOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new asset group
  create?: googleadsgoogleadsv9resources_AssetGroup;
  // Update operation: The asset group is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_AssetGroup;
  // Remove operation: A resource name for the removed asset group is
  // expected, in this format:
  // `customers/{customer_id}/assetGroups/{asset_group_id}`
  remove?: string;
};

// An asset group.
// AssetGroupAsset will be used to link an asset to the asset group.
// AssetGroupHint will be used to associate a hint to an asset group.
export type googleadsgoogleadsv9resources_AssetGroup = {
  // Immutable. The resource name of the asset group.
  // Asset group resource names have the form:
  // `customers/{customer_id}/assetGroups/{asset_group_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the asset group.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Immutable. The campaign with which this asset group is associated.
  // The asset which is linked to the asset group.
  //
  // Behaviors: IMMUTABLE
  campaign: string | undefined;
  // Required. Name of the asset group. Required. It must have a minimum length of 1 and
  // maximum length of 128. It must be unique under a campaign.
  //
  // Behaviors: REQUIRED
  name: string | undefined;
  // A list of final URLs after all cross domain redirects. In performance max,
  // by default, the urls will be eligible for expansion unless opted out.
  finalUrls: string[] | undefined;
  // A list of final mobile URLs after all cross domain redirects. In
  // performance max, by default, the urls will be eligible for expansion
  // unless opted out.
  finalMobileUrls: string[] | undefined;
  // The status of the asset group.
  status: googleadsgoogleadsv9enums_AssetGroupStatusEnum_AssetGroupStatus | undefined;
  // First part of text that may appear appended to the url displayed in
  // the ad.
  path1: string | undefined;
  // Second part of text that may appear appended to the url displayed in
  // the ad. This field can only be set when path1 is set.
  path2: string | undefined;
};

// The possible statuses of an asset group.
export type googleadsgoogleadsv9enums_AssetGroupStatusEnum_AssetGroupStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  | "UNKNOWN"
  // The asset group is enabled.
  | "ENABLED"
  // The asset group is paused.
  | "PAUSED"
  // The asset group is removed.
  | "REMOVED";
// Response message for an asset group mutate.
export type MutateAssetGroupsResponse = {
  // All results for the mutate.
  results: MutateAssetGroupResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the asset group mutate.
export type MutateAssetGroupResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage asset group
export interface AssetGroupService {
  // Returns the requested asset group in full detail.
  GetAssetGroup(request: GetAssetGroupRequest): Promise<googleadsgoogleadsv9resources_AssetGroup>;
  // Creates, updates or removes asset groups. Operation statuses are
  // returned.
  MutateAssetGroups(request: MutateAssetGroupsRequest): Promise<MutateAssetGroupsResponse>;
}

export function createAssetGroupServiceClient(
  handler: RequestHandler
): AssetGroupService {
  return {
    GetAssetGroup(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AssetGroup>;
    },
    MutateAssetGroups(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/assetGroups:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAssetGroupsResponse>;
    },
  };
}
// Request message for
// [OfflineUserDataJobService.CreateOfflineUserDataJob][google.ads.googleads.v9.services.OfflineUserDataJobService.CreateOfflineUserDataJob].
export type CreateOfflineUserDataJobRequest = {
  // Required. The ID of the customer for which to create an offline user data job.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The offline user data job to be created.
  //
  // Behaviors: REQUIRED
  job: googleadsgoogleadsv9resources_OfflineUserDataJob | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // If true, match rate range for the offline user data job is calculated and
  // made available in the resource.
  enableMatchRateRangePreview: boolean | undefined;
};

// A job containing offline user data of store visitors, or user list members
// that will be processed asynchronously. The uploaded data isn't readable and
// the processing results of the job can only be read using
// OfflineUserDataJobService.GetOfflineUserDataJob.
export type googleadsgoogleadsv9resources_OfflineUserDataJob = {
  // Immutable. The resource name of the offline user data job.
  // Offline user data job resource names have the form:
  // `customers/{customer_id}/offlineUserDataJobs/{offline_user_data_job_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. ID of this offline user data job.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Immutable. User specified job ID.
  //
  // Behaviors: IMMUTABLE
  externalId?: number;
  // Immutable. Type of the job.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_OfflineUserDataJobTypeEnum_OfflineUserDataJobType | undefined;
  // Output only. Status of the job.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_OfflineUserDataJobStatusEnum_OfflineUserDataJobStatus | undefined;
  // Output only. Reason for the processing failure, if status is FAILED.
  //
  // Behaviors: OUTPUT_ONLY
  failureReason: googleadsgoogleadsv9enums_OfflineUserDataJobFailureReasonEnum_OfflineUserDataJobFailureReason | undefined;
  // Output only. Metadata of offline user data job depicting match rate range.
  //
  // Behaviors: OUTPUT_ONLY
  operationMetadata: googleadsgoogleadsv9resources_OfflineUserDataJobMetadata | undefined;
  // Immutable. Metadata for data updates to a CRM-based user list.
  //
  // Behaviors: IMMUTABLE
  customerMatchUserListMetadata?: googleadsgoogleadsv9common_CustomerMatchUserListMetadata;
  // Immutable. Metadata for store sales data update.
  //
  // Behaviors: IMMUTABLE
  storeSalesMetadata?: googleadsgoogleadsv9common_StoreSalesMetadata;
};

// The type of an offline user data job.
export type googleadsgoogleadsv9enums_OfflineUserDataJobTypeEnum_OfflineUserDataJobType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Store Sales Direct data for self service.
  | "STORE_SALES_UPLOAD_FIRST_PARTY"
  // Store Sales Direct data for third party.
  | "STORE_SALES_UPLOAD_THIRD_PARTY"
  // Customer Match user list data.
  | "CUSTOMER_MATCH_USER_LIST"
  // Customer Match with attribute data.
  | "CUSTOMER_MATCH_WITH_ATTRIBUTES";
// The status of an offline user data job.
export type googleadsgoogleadsv9enums_OfflineUserDataJobStatusEnum_OfflineUserDataJobStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The job has been successfully created and pending for uploading.
  | "PENDING"
  // Upload(s) have been accepted and data is being processed.
  | "RUNNING"
  // Uploaded data has been successfully processed.
  | "SUCCESS"
  // Uploaded data has failed to be processed.
  | "FAILED";
// The failure reason of an offline user data job.
export type googleadsgoogleadsv9enums_OfflineUserDataJobFailureReasonEnum_OfflineUserDataJobFailureReason =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The matched transactions are insufficient.
  | "INSUFFICIENT_MATCHED_TRANSACTIONS"
  // The uploaded transactions are insufficient.
  | "INSUFFICIENT_TRANSACTIONS";
// Metadata of offline user data job.
export type googleadsgoogleadsv9resources_OfflineUserDataJobMetadata = {
  // Output only. Match rate of the Customer Match user list upload. Describes the estimated
  // match rate when the status of the job is “RUNNING” and final match rate
  // when the final match rate is available after the status of the job is
  // “SUCCESS/FAILED”.
  //
  // Behaviors: OUTPUT_ONLY
  matchRateRange: googleadsgoogleadsv9enums_OfflineUserDataJobMatchRateRangeEnum_OfflineUserDataJobMatchRateRange | undefined;
};

// The match rate range of an offline user data job.
export type googleadsgoogleadsv9enums_OfflineUserDataJobMatchRateRangeEnum_OfflineUserDataJobMatchRateRange =
  // Not specified.
  | "UNSPECIFIED"
  // Default value for match rate range.
  | "UNKNOWN"
  // Match rate range for offline data upload entity is between 0% and 19%.
  | "MATCH_RANGE_LESS_THAN_20"
  // Match rate range for offline data upload entity is between 20% and 30%.
  | "MATCH_RANGE_20_TO_30"
  // Match rate range for offline data upload entity is between 31% and 40%.
  | "MATCH_RANGE_31_TO_40"
  // Match rate range for offline data upload entity is between 41% and 50%.
  | "MATCH_RANGE_41_TO_50"
  // Match rate range for offline data upload entity is between 51% and 60%.
  | "MATCH_RANGE_51_TO_60"
  // Match rate range for offline data upload entity is between 61% and 70%.
  | "MATCH_RANGE_61_TO_70"
  // Match rate range for offline data upload entity is between 71% and 80%.
  | "MATCH_RANGE_71_TO_80"
  // Match rate range for offline data upload entity is between 81% and 90%.
  | "MATCH_RANGE_81_TO_90"
  // Match rate range for offline data upload entity more than or equal to
  // 91%.
  | "MATCH_RANGE_91_TO_100";
// Metadata for Store Sales Direct.
export type googleadsgoogleadsv9common_StoreSalesMetadata = {
  // This is the fraction of all transactions that are identifiable (i.e.,
  // associated with any form of customer information).
  // Required.
  // The fraction needs to be between 0 and 1 (excluding 0).
  loyaltyFraction?: number;
  // This is the ratio of sales being uploaded compared to the overall sales
  // that can be associated with a customer. Required.
  // The fraction needs to be between 0 and 1 (excluding 0). For example, if you
  // upload half the sales that you are able to associate with a customer, this
  // would be 0.5.
  transactionUploadFraction?: number;
  // Name of the store sales custom variable key. A predefined key that
  // can be applied to the transaction and then later used for custom
  // segmentation in reporting.
  // Accessible only to customers on the allow-list.
  customKey?: string;
  // Metadata for a third party Store Sales upload.
  thirdPartyMetadata: googleadsgoogleadsv9common_StoreSalesThirdPartyMetadata | undefined;
};

// Metadata for a third party Store Sales.
// This product is only for customers on the allow-list. Please contact your
// Google business development representative for details on the upload
// configuration.
export type googleadsgoogleadsv9common_StoreSalesThirdPartyMetadata = {
  // Time the advertiser uploaded the data to the partner. Required.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  advertiserUploadDateTime?: string;
  // The fraction of transactions that are valid. Invalid transactions may
  // include invalid formats or values.
  // Required.
  // The fraction needs to be between 0 and 1 (excluding 0).
  validTransactionFraction?: number;
  // The fraction of valid transactions that are matched to a third party
  // assigned user ID on the partner side.
  // Required.
  // The fraction needs to be between 0 and 1 (excluding 0).
  partnerMatchFraction?: number;
  // The fraction of valid transactions that are uploaded by the partner to
  // Google.
  // Required.
  // The fraction needs to be between 0 and 1 (excluding 0).
  partnerUploadFraction?: number;
  // Version of partner IDs to be used for uploads. Required.
  bridgeMapVersionId?: string;
  // ID of the third party partner updating the transaction feed.
  partnerId?: number;
};

// Response message for
// [OfflineUserDataJobService.CreateOfflineUserDataJob][google.ads.googleads.v9.services.OfflineUserDataJobService.CreateOfflineUserDataJob].
export type CreateOfflineUserDataJobResponse = {
  // The resource name of the OfflineUserDataJob.
  resourceName: string | undefined;
};

// Request message for [OfflineUserDataJobService.GetOfflineUserDataJob][google.ads.googleads.v9.services.OfflineUserDataJobService.GetOfflineUserDataJob].
export type GetOfflineUserDataJobRequest = {
  // Required. The resource name of the OfflineUserDataJob to get.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [OfflineUserDataJobService.RunOfflineUserDataJob][google.ads.googleads.v9.services.OfflineUserDataJobService.RunOfflineUserDataJob].
export type RunOfflineUserDataJobRequest = {
  // Required. The resource name of the OfflineUserDataJob to run.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Request message for
// [OfflineUserDataJobService.AddOfflineUserDataJobOperations][google.ads.googleads.v9.services.OfflineUserDataJobService.AddOfflineUserDataJobOperations].
export type AddOfflineUserDataJobOperationsRequest = {
  // Required. The resource name of the OfflineUserDataJob.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
  // True to enable partial failure for the offline user data job.
  enablePartialFailure?: boolean;
  // True to enable warnings for the offline user data job. When enabled, a
  // warning will not block the OfflineUserDataJobOperation, and will also
  // return warning messages about malformed field values.
  enableWarnings?: boolean;
  // Required. The list of operations to be done.
  //
  // Behaviors: REQUIRED
  operations: OfflineUserDataJobOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Operation to be made for the AddOfflineUserDataJobOperationsRequest.
export type OfflineUserDataJobOperation = {
  // Add the provided data to the transaction. Data cannot be retrieved after
  // being uploaded.
  create?: googleadsgoogleadsv9common_UserData;
  // Remove the provided data from the transaction. Data cannot be retrieved
  // after being uploaded.
  remove?: googleadsgoogleadsv9common_UserData;
  // Remove all previously provided data. This is only supported for Customer
  // Match.
  removeAll?: boolean;
};

// Response message for
// [OfflineUserDataJobService.AddOfflineUserDataJobOperations][google.ads.googleads.v9.services.OfflineUserDataJobService.AddOfflineUserDataJobOperations].
export type AddOfflineUserDataJobOperationsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // Non blocking errors that pertain to operation failures in the warnings
  // mode. Returned only when enable_warnings = true.
  warning: googlerpc_Status | undefined;
};

// Service to manage offline user data jobs.
export interface OfflineUserDataJobService {
  // Creates an offline user data job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [NotAllowlistedError]()
  // [OfflineUserDataJobError]()
  // [QuotaError]()
  // [RequestError]()
  CreateOfflineUserDataJob(request: CreateOfflineUserDataJobRequest): Promise<CreateOfflineUserDataJobResponse>;
  // Returns the offline user data job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetOfflineUserDataJob(request: GetOfflineUserDataJobRequest): Promise<googleadsgoogleadsv9resources_OfflineUserDataJob>;
  // Adds operations to the offline user data job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [OfflineUserDataJobError]()
  // [QuotaError]()
  // [RequestError]()
  AddOfflineUserDataJobOperations(request: AddOfflineUserDataJobOperationsRequest): Promise<AddOfflineUserDataJobOperationsResponse>;
  // Runs the offline user data job.
  // When finished, the long running operation will contain the processing
  // result or failure information, if any.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [HeaderError]()
  // [InternalError]()
  // [OfflineUserDataJobError]()
  // [QuotaError]()
  // [RequestError]()
  RunOfflineUserDataJob(request: RunOfflineUserDataJobRequest): Promise<googlelongrunning_Operation>;
}

export function createOfflineUserDataJobServiceClient(
  handler: RequestHandler
): OfflineUserDataJobService {
  return {
    CreateOfflineUserDataJob(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/offlineUserDataJobs:create`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<CreateOfflineUserDataJobResponse>;
    },
    GetOfflineUserDataJob(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_OfflineUserDataJob>;
    },
    AddOfflineUserDataJobOperations(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:addOperations`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<AddOfflineUserDataJobOperationsResponse>;
    },
    RunOfflineUserDataJob(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:run`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<googlelongrunning_Operation>;
    },
  };
}
// Request message for [BatchJobService.MutateBatchJob][google.ads.googleads.v9.services.BatchJobService.MutateBatchJob].
export type MutateBatchJobRequest = {
  // Required. The ID of the customer for which to create a batch job.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on an individual batch job.
  //
  // Behaviors: REQUIRED
  operation: BatchJobOperation | undefined;
};

// A single operation on a batch job.
export type BatchJobOperation = {
  // Create operation: No resource name is expected for the new batch job.
  create?: googleadsgoogleadsv9resources_BatchJob;
};

// A list of mutates being processed asynchronously. The mutates are uploaded
// by the user. The mutates themselves aren't readable and the results of the
// job can only be read using BatchJobService.ListBatchJobResults.
export type googleadsgoogleadsv9resources_BatchJob = {
  // Immutable. The resource name of the batch job.
  // Batch job resource names have the form:
  // `customers/{customer_id}/batchJobs/{batch_job_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. ID of this batch job.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The next sequence token to use when adding operations. Only set when the
  // batch job status is PENDING.
  //
  // Behaviors: OUTPUT_ONLY
  nextAddSequenceToken?: string;
  // Output only. Contains additional information about this batch job.
  //
  // Behaviors: OUTPUT_ONLY
  metadata: googleadsgoogleadsv9resources_BatchJob_BatchJobMetadata | undefined;
  // Output only. Status of this batch job.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_BatchJobStatusEnum_BatchJobStatus | undefined;
  // Output only. The resource name of the long-running operation that can be used to poll
  // for completion. Only set when the batch job status is RUNNING or DONE.
  //
  // Behaviors: OUTPUT_ONLY
  longRunningOperation?: string;
};

// Additional information about the batch job. This message is also used as
// metadata returned in batch job Long Running Operations.
export type googleadsgoogleadsv9resources_BatchJob_BatchJobMetadata = {
  // Output only. The time when this batch job was created.
  // Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:00"
  //
  // Behaviors: OUTPUT_ONLY
  creationDateTime?: string;
  // Output only. The time when this batch job started running.
  // Formatted as yyyy-mm-dd hh:mm:ss. Example: "2018-03-05 09:15:30"
  //
  // Behaviors: OUTPUT_ONLY
  startDateTime?: string;
  // Output only. The time when this batch job was completed.
  // Formatted as yyyy-MM-dd HH:mm:ss. Example: "2018-03-05 09:16:00"
  //
  // Behaviors: OUTPUT_ONLY
  completionDateTime?: string;
  // Output only. The fraction (between 0.0 and 1.0) of mutates that have been processed.
  // This is empty if the job hasn't started running yet.
  //
  // Behaviors: OUTPUT_ONLY
  estimatedCompletionRatio?: number;
  // Output only. The number of mutate operations in the batch job.
  //
  // Behaviors: OUTPUT_ONLY
  operationCount?: number;
  // Output only. The number of mutate operations executed by the batch job.
  // Present only if the job has started running.
  //
  // Behaviors: OUTPUT_ONLY
  executedOperationCount?: number;
};

// The batch job statuses.
export type googleadsgoogleadsv9enums_BatchJobStatusEnum_BatchJobStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The job is not currently running.
  | "PENDING"
  // The job is running.
  | "RUNNING"
  // The job is done.
  | "DONE";
// Response message for [BatchJobService.MutateBatchJob][google.ads.googleads.v9.services.BatchJobService.MutateBatchJob].
export type MutateBatchJobResponse = {
  // The result for the mutate.
  result: MutateBatchJobResult | undefined;
};

// The result for the batch job mutate.
export type MutateBatchJobResult = {
  // The resource name of the batch job.
  resourceName: string | undefined;
};

// Request message for [BatchJobService.GetBatchJob][google.ads.googleads.v9.services.BatchJobService.GetBatchJob].
export type GetBatchJobRequest = {
  // Required. The resource name of the batch job to get.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [BatchJobService.RunBatchJob][google.ads.googleads.v9.services.BatchJobService.RunBatchJob].
export type RunBatchJobRequest = {
  // Required. The resource name of the BatchJob to run.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [BatchJobService.AddBatchJobOperations][google.ads.googleads.v9.services.BatchJobService.AddBatchJobOperations].
export type AddBatchJobOperationsRequest = {
  // Required. The resource name of the batch job.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
  // A token used to enforce sequencing.
  // The first AddBatchJobOperations request for a batch job should not set
  // sequence_token. Subsequent requests must set sequence_token to the value of
  // next_sequence_token received in the previous AddBatchJobOperations
  // response.
  sequenceToken: string | undefined;
  // Required. The list of mutates being added.
  // Operations can use negative integers as temp ids to signify dependencies
  // between entities created in this batch job. For example, a customer with
  // id = 1234 can create a campaign and an ad group in that same campaign by
  // creating a campaign in the first operation with the resource name
  // explicitly set to "customers/1234/campaigns/-1", and creating an ad group
  // in the second operation with the campaign field also set to
  // "customers/1234/campaigns/-1".
  //
  // Behaviors: REQUIRED
  mutateOperations: MutateOperation[] | undefined;
};

// A single operation (create, update, remove) on a resource.
export type MutateOperation = {
  // An ad group ad label mutate operation.
  adGroupAdLabelOperation?: AdGroupAdLabelOperation;
  // An ad group ad mutate operation.
  adGroupAdOperation?: AdGroupAdOperation;
  // An ad group asset mutate operation.
  adGroupAssetOperation?: AdGroupAssetOperation;
  // An ad group bid modifier mutate operation.
  adGroupBidModifierOperation?: AdGroupBidModifierOperation;
  // An ad group criterion customizer mutate operation.
  adGroupCriterionCustomizerOperation?: AdGroupCriterionCustomizerOperation;
  // An ad group criterion label mutate operation.
  adGroupCriterionLabelOperation?: AdGroupCriterionLabelOperation;
  // An ad group criterion mutate operation.
  adGroupCriterionOperation?: AdGroupCriterionOperation;
  // An ad group customizer mutate operation.
  adGroupCustomizerOperation?: AdGroupCustomizerOperation;
  // An ad group extension setting mutate operation.
  adGroupExtensionSettingOperation?: AdGroupExtensionSettingOperation;
  // An ad group feed mutate operation.
  adGroupFeedOperation?: AdGroupFeedOperation;
  // An ad group label mutate operation.
  adGroupLabelOperation?: AdGroupLabelOperation;
  // An ad group mutate operation.
  adGroupOperation?: AdGroupOperation;
  // An ad mutate operation.
  adOperation?: AdOperation;
  // An ad parameter mutate operation.
  adParameterOperation?: AdParameterOperation;
  // An asset mutate operation.
  assetOperation?: AssetOperation;
  // An asset group asset mutate operation.
  assetGroupAssetOperation?: AssetGroupAssetOperation;
  // An asset group listing group filter mutate operation.
  assetGroupListingGroupFilterOperation?: AssetGroupListingGroupFilterOperation;
  // An asset group mutate operation.
  assetGroupOperation?: AssetGroupOperation;
  // An asset set asset mutate operation.
  assetSetAssetOperation?: AssetSetAssetOperation;
  // An asset set mutate operation.
  assetSetOperation?: AssetSetOperation;
  // A bidding data exclusion mutate operation.
  biddingDataExclusionOperation?: BiddingDataExclusionOperation;
  // A bidding seasonality adjustment mutate operation.
  biddingSeasonalityAdjustmentOperation?: BiddingSeasonalityAdjustmentOperation;
  // A bidding strategy mutate operation.
  biddingStrategyOperation?: BiddingStrategyOperation;
  // A campaign asset mutate operation.
  campaignAssetOperation?: CampaignAssetOperation;
  // A campaign asset mutate operation.
  campaignAssetSetOperation?: CampaignAssetSetOperation;
  // A campaign bid modifier mutate operation.
  campaignBidModifierOperation?: CampaignBidModifierOperation;
  // A campaign budget mutate operation.
  campaignBudgetOperation?: CampaignBudgetOperation;
  // A campaign conversion goal mutate operation.
  campaignConversionGoalOperation?: CampaignConversionGoalOperation;
  // A campaign criterion mutate operation.
  campaignCriterionOperation?: CampaignCriterionOperation;
  // An campaign customizer mutate operation.
  campaignCustomizerOperation?: CampaignCustomizerOperation;
  // A campaign draft mutate operation.
  campaignDraftOperation?: CampaignDraftOperation;
  // A campaign experiment mutate operation.
  campaignExperimentOperation?: CampaignExperimentOperation;
  // A campaign extension setting mutate operation.
  campaignExtensionSettingOperation?: CampaignExtensionSettingOperation;
  // A campaign feed mutate operation.
  campaignFeedOperation?: CampaignFeedOperation;
  // A campaign label mutate operation.
  campaignLabelOperation?: CampaignLabelOperation;
  // A campaign mutate operation.
  campaignOperation?: CampaignOperation;
  // A campaign shared set mutate operation.
  campaignSharedSetOperation?: CampaignSharedSetOperation;
  // A conversion action mutate operation.
  conversionActionOperation?: ConversionActionOperation;
  // A conversion custom variable mutate operation.
  conversionCustomVariableOperation?: ConversionCustomVariableOperation;
  // A conversion goal campaign config mutate operation.
  conversionGoalCampaignConfigOperation?: ConversionGoalCampaignConfigOperation;
  // A conversion value rule mutate operation.
  conversionValueRuleOperation?: ConversionValueRuleOperation;
  // A conversion value rule set mutate operation.
  conversionValueRuleSetOperation?: ConversionValueRuleSetOperation;
  // A custom conversion goal mutate operation.
  customConversionGoalOperation?: CustomConversionGoalOperation;
  // A customer asset mutate operation.
  customerAssetOperation?: CustomerAssetOperation;
  // A customer conversion goal mutate operation.
  customerConversionGoalOperation?: CustomerConversionGoalOperation;
  // An customer customizer mutate operation.
  customizerCustomizerOperation?: CustomerCustomizerOperation;
  // A customer extension setting mutate operation.
  customerExtensionSettingOperation?: CustomerExtensionSettingOperation;
  // A customer feed mutate operation.
  customerFeedOperation?: CustomerFeedOperation;
  // A customer label mutate operation.
  customerLabelOperation?: CustomerLabelOperation;
  // A customer negative criterion mutate operation.
  customerNegativeCriterionOperation?: CustomerNegativeCriterionOperation;
  // A customer mutate operation.
  customerOperation?: CustomerOperation;
  // An customizer attribute mutate operation.
  customizerAttributeOperation?: CustomizerAttributeOperation;
  // An extension feed item mutate operation.
  extensionFeedItemOperation?: ExtensionFeedItemOperation;
  // A feed item mutate operation.
  feedItemOperation?: FeedItemOperation;
  // A feed item set mutate operation.
  feedItemSetOperation?: FeedItemSetOperation;
  // A feed item set link mutate operation.
  feedItemSetLinkOperation?: FeedItemSetLinkOperation;
  // A feed item target mutate operation.
  feedItemTargetOperation?: FeedItemTargetOperation;
  // A feed mapping mutate operation.
  feedMappingOperation?: FeedMappingOperation;
  // A feed mutate operation.
  feedOperation?: FeedOperation;
  // A keyword plan ad group operation.
  keywordPlanAdGroupOperation?: KeywordPlanAdGroupOperation;
  // A keyword plan ad group keyword operation.
  keywordPlanAdGroupKeywordOperation?: KeywordPlanAdGroupKeywordOperation;
  // A keyword plan campaign keyword operation.
  keywordPlanCampaignKeywordOperation?: KeywordPlanCampaignKeywordOperation;
  // A keyword plan campaign operation.
  keywordPlanCampaignOperation?: KeywordPlanCampaignOperation;
  // A keyword plan operation.
  keywordPlanOperation?: KeywordPlanOperation;
  // A label mutate operation.
  labelOperation?: LabelOperation;
  // A media file mutate operation.
  mediaFileOperation?: MediaFileOperation;
  // A remarketing action mutate operation.
  remarketingActionOperation?: RemarketingActionOperation;
  // A shared criterion mutate operation.
  sharedCriterionOperation?: SharedCriterionOperation;
  // A shared set mutate operation.
  sharedSetOperation?: SharedSetOperation;
  // A Smart campaign setting mutate operation.
  smartCampaignSettingOperation?: SmartCampaignSettingOperation;
  // A user list mutate operation.
  userListOperation?: UserListOperation;
};

// A single operation (create, update, remove) on an ad group ad.
export type AdGroupAdOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Configuration for how policies are validated.
  policyValidationParameter: googleadsgoogleadsv9common_PolicyValidationParameter | undefined;
  // Create operation: No resource name is expected for the new ad.
  create?: googleadsgoogleadsv9resources_AdGroupAd;
  // Update operation: The ad is expected to have a valid resource name.
  update?: googleadsgoogleadsv9resources_AdGroupAd;
  // Remove operation: A resource name for the removed ad is expected,
  // in this format:
  // `customers/{customer_id}/adGroupAds/{ad_group_id}~{ad_id}`
  remove?: string;
};

// An ad group ad.
export type googleadsgoogleadsv9resources_AdGroupAd = {
  // Immutable. The resource name of the ad.
  // Ad group ad resource names have the form:
  // `customers/{customer_id}/adGroupAds/{ad_group_id}~{ad_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // The status of the ad.
  status: googleadsgoogleadsv9enums_AdGroupAdStatusEnum_AdGroupAdStatus | undefined;
  // Immutable. The ad group to which the ad belongs.
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // Immutable. The ad.
  //
  // Behaviors: IMMUTABLE
  ad: googleadsgoogleadsv9resources_Ad | undefined;
  // Output only. Policy information for the ad.
  //
  // Behaviors: OUTPUT_ONLY
  policySummary: googleadsgoogleadsv9resources_AdGroupAdPolicySummary | undefined;
  // Output only. Overall ad strength for this ad group ad.
  //
  // Behaviors: OUTPUT_ONLY
  adStrength: googleadsgoogleadsv9enums_AdStrengthEnum_AdStrength | undefined;
  // Output only. A list of recommendations to improve the ad strength. For example, a
  // recommendation could be "Your headlines are a little too similar.
  // Try adding more distinct headlines.".
  //
  // Behaviors: OUTPUT_ONLY
  actionItems: string[] | undefined;
  // Output only. The resource names of labels attached to this ad group ad.
  //
  // Behaviors: OUTPUT_ONLY
  labels: string[] | undefined;
};

// The possible statuses of an AdGroupAd.
export type googleadsgoogleadsv9enums_AdGroupAdStatusEnum_AdGroupAdStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The ad group ad is enabled.
  | "ENABLED"
  // The ad group ad is paused.
  | "PAUSED"
  // The ad group ad is removed.
  | "REMOVED";
// Contains policy information for an ad.
export type googleadsgoogleadsv9resources_AdGroupAdPolicySummary = {
  // Output only. The list of policy findings for this ad.
  //
  // Behaviors: OUTPUT_ONLY
  policyTopicEntries: googleadsgoogleadsv9common_PolicyTopicEntry[] | undefined;
  // Output only. Where in the review process this ad is.
  //
  // Behaviors: OUTPUT_ONLY
  reviewStatus: googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus | undefined;
  // Output only. The overall approval status of this ad, calculated based on the status of
  // its individual policy topic entries.
  //
  // Behaviors: OUTPUT_ONLY
  approvalStatus: googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus | undefined;
};

// Enum listing the possible ad strengths.
export type googleadsgoogleadsv9enums_AdStrengthEnum_AdStrength =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The ad strength is currently pending.
  | "PENDING"
  // No ads could be generated.
  | "NO_ADS"
  // Poor strength.
  | "POOR"
  // Average strength.
  | "AVERAGE"
  // Good strength.
  | "GOOD"
  // Excellent strength.
  | "EXCELLENT";
// A single operation (create, update, remove) on an ad group asset.
export type AdGroupAssetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new ad group
  // asset.
  create?: googleadsgoogleadsv9resources_AdGroupAsset;
  // Update operation: The ad group asset is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_AdGroupAsset;
  // Remove operation: A resource name for the removed ad group asset is
  // expected, in this format:
  // `customers/{customer_id}/adGroupAssets/{ad_group_id}~{asset_id}~{field_type}`
  remove?: string;
};

// A link between an ad group and an asset.
export type googleadsgoogleadsv9resources_AdGroupAsset = {
  // Immutable. The resource name of the ad group asset.
  // AdGroupAsset resource names have the form:
  // `customers/{customer_id}/adGroupAssets/{ad_group_id}~{asset_id}~{field_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Required. Immutable. The ad group to which the asset is linked.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  adGroup: string | undefined;
  // Required. Immutable. The asset which is linked to the ad group.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  asset: string | undefined;
  // Required. Immutable. Role that the asset takes under the linked ad group.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  fieldType: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType | undefined;
  // Status of the ad group asset.
  status: googleadsgoogleadsv9enums_AssetLinkStatusEnum_AssetLinkStatus | undefined;
};

// Enum describing statuses of an asset link.
export type googleadsgoogleadsv9enums_AssetLinkStatusEnum_AssetLinkStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Asset link is enabled.
  | "ENABLED"
  // Asset link has been removed.
  | "REMOVED"
  // Asset link is paused.
  | "PAUSED";
// A single operation (create, remove, update) on an ad group bid modifier.
export type AdGroupBidModifierOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new ad group bid
  // modifier.
  create?: googleadsgoogleadsv9resources_AdGroupBidModifier;
  // Update operation: The ad group bid modifier is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_AdGroupBidModifier;
  // Remove operation: A resource name for the removed ad group bid modifier
  // is expected, in this format:
  // `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}`
  remove?: string;
};

// Represents an ad group bid modifier.
export type googleadsgoogleadsv9resources_AdGroupBidModifier = {
  // Immutable. The resource name of the ad group bid modifier.
  // Ad group bid modifier resource names have the form:
  // `customers/{customer_id}/adGroupBidModifiers/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group to which this criterion belongs.
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // Output only. The ID of the criterion to bid modify.
  // This field is ignored for mutates.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // The modifier for the bid when the criterion matches. The modifier must be
  // in the range: 0.1 - 10.0. The range is 1.0 - 6.0 for PreferredContent.
  // Use 0 to opt out of a Device type.
  bidModifier?: number;
  // Output only. The base ad group from which this draft/trial adgroup bid modifier was
  // created. If ad_group is a base ad group then this field will be equal to
  // ad_group. If the ad group was created in the draft or trial and has no
  // corresponding base ad group, then this field will be null.
  // This field is readonly.
  //
  // Behaviors: OUTPUT_ONLY
  baseAdGroup?: string;
  // Output only. Bid modifier source.
  //
  // Behaviors: OUTPUT_ONLY
  bidModifierSource: googleadsgoogleadsv9enums_BidModifierSourceEnum_BidModifierSource | undefined;
  // Immutable. Criterion for hotel date selection (default dates vs. user selected).
  //
  // Behaviors: IMMUTABLE
  hotelDateSelectionType?: googleadsgoogleadsv9common_HotelDateSelectionTypeInfo;
  // Immutable. Criterion for number of days prior to the stay the booking is being made.
  //
  // Behaviors: IMMUTABLE
  hotelAdvanceBookingWindow?: googleadsgoogleadsv9common_HotelAdvanceBookingWindowInfo;
  // Immutable. Criterion for length of hotel stay in nights.
  //
  // Behaviors: IMMUTABLE
  hotelLengthOfStay?: googleadsgoogleadsv9common_HotelLengthOfStayInfo;
  // Immutable. Criterion for day of the week the booking is for.
  //
  // Behaviors: IMMUTABLE
  hotelCheckInDay?: googleadsgoogleadsv9common_HotelCheckInDayInfo;
  // Immutable. A device criterion.
  //
  // Behaviors: IMMUTABLE
  device?: googleadsgoogleadsv9common_DeviceInfo;
  // Immutable. A preferred content criterion.
  //
  // Behaviors: IMMUTABLE
  preferredContent?: googleadsgoogleadsv9common_PreferredContentInfo;
  // Immutable. Criterion for a hotel check-in date range.
  //
  // Behaviors: IMMUTABLE
  hotelCheckInDateRange?: googleadsgoogleadsv9common_HotelCheckInDateRangeInfo;
};

// Enum describing possible bid modifier sources.
export type googleadsgoogleadsv9enums_BidModifierSourceEnum_BidModifierSource =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The bid modifier is specified at the campaign level, on the campaign
  // level criterion.
  | "CAMPAIGN"
  // The bid modifier is specified (overridden) at the ad group level.
  | "AD_GROUP";
// Criterion for hotel date selection (default dates vs. user selected).
export type googleadsgoogleadsv9common_HotelDateSelectionTypeInfo = {
  // Type of the hotel date selection
  type: googleadsgoogleadsv9enums_HotelDateSelectionTypeEnum_HotelDateSelectionType | undefined;
};

// Enum describing possible hotel date selection types.
export type googleadsgoogleadsv9enums_HotelDateSelectionTypeEnum_HotelDateSelectionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Dates selected by default.
  | "DEFAULT_SELECTION"
  // Dates selected by the user.
  | "USER_SELECTED";
// Criterion for number of days prior to the stay the booking is being made.
export type googleadsgoogleadsv9common_HotelAdvanceBookingWindowInfo = {
  // Low end of the number of days prior to the stay.
  minDays?: number;
  // High end of the number of days prior to the stay.
  maxDays?: number;
};

// Criterion for length of hotel stay in nights.
export type googleadsgoogleadsv9common_HotelLengthOfStayInfo = {
  // Low end of the number of nights in the stay.
  minNights?: number;
  // High end of the number of nights in the stay.
  maxNights?: number;
};

// Criterion for day of the week the booking is for.
export type googleadsgoogleadsv9common_HotelCheckInDayInfo = {
  // The day of the week.
  dayOfWeek: googleadsgoogleadsv9enums_DayOfWeekEnum_DayOfWeek | undefined;
};

// A preferred content criterion.
export type googleadsgoogleadsv9common_PreferredContentInfo = {
  // Type of the preferred content.
  type: googleadsgoogleadsv9enums_PreferredContentTypeEnum_PreferredContentType | undefined;
};

// Enumerates preferred content criterion type.
export type googleadsgoogleadsv9enums_PreferredContentTypeEnum_PreferredContentType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Represents top content on YouTube.
  | "YOUTUBE_TOP_CONTENT";
// Criterion for a check-in date range.
export type googleadsgoogleadsv9common_HotelCheckInDateRangeInfo = {
  // Start date in the YYYY-MM-DD format.
  startDate: string | undefined;
  // End date in the YYYY-MM-DD format.
  endDate: string | undefined;
};

// A single operation (create, remove) on an ad group criterion label.
export type AdGroupCriterionLabelOperation = {
  // Create operation: No resource name is expected for the new ad group
  // label.
  create?: googleadsgoogleadsv9resources_AdGroupCriterionLabel;
  // Remove operation: A resource name for the ad group criterion label
  // being removed, in this format:
  // `customers/{customer_id}/adGroupCriterionLabels/{ad_group_id}~{criterion_id}~{label_id}`
  remove?: string;
};

// A relationship between an ad group criterion and a label.
export type googleadsgoogleadsv9resources_AdGroupCriterionLabel = {
  // Immutable. The resource name of the ad group criterion label.
  // Ad group criterion label resource names have the form:
  // `customers/{customer_id}/adGroupCriterionLabels/{ad_group_id}~{criterion_id}~{label_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group criterion to which the label is attached.
  //
  // Behaviors: IMMUTABLE
  adGroupCriterion?: string;
  // Immutable. The label assigned to the ad group criterion.
  //
  // Behaviors: IMMUTABLE
  label?: string;
};

// A single operation (create, remove, update) on an ad group criterion.
export type AdGroupCriterionOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // The list of policy violation keys that should not cause a
  // PolicyViolationError to be reported. Not all policy violations are
  // exemptable, please refer to the is_exemptible field in the returned
  // PolicyViolationError.
  // Resources violating these polices will be saved, but will not be eligible
  // to serve. They may begin serving at a later time due to a change in
  // policies, re-review of the resource, or a change in advertiser
  // certificates.
  exemptPolicyViolationKeys: googleadsgoogleadsv9common_PolicyViolationKey[] | undefined;
  // Create operation: No resource name is expected for the new criterion.
  create?: googleadsgoogleadsv9resources_AdGroupCriterion;
  // Update operation: The criterion is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_AdGroupCriterion;
  // Remove operation: A resource name for the removed criterion is expected,
  // in this format:
  // `customers/{customer_id}/adGroupCriteria/{ad_group_id}~{criterion_id}`
  remove?: string;
};

// An ad group criterion.
export type googleadsgoogleadsv9resources_AdGroupCriterion = {
  // Immutable. The resource name of the ad group criterion.
  // Ad group criterion resource names have the form:
  // `customers/{customer_id}/adGroupCriteria/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the criterion.
  // This field is ignored for mutates.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // Output only. The display name of the criterion.
  // This field is ignored for mutates.
  //
  // Behaviors: OUTPUT_ONLY
  displayName: string | undefined;
  // The status of the criterion.
  // This is the status of the ad group criterion entity, set by the client.
  // Note: UI reports may incorporate additional information that affects
  // whether a criterion is eligible to run. In some cases a criterion that's
  // REMOVED in the API can still show as enabled in the UI.
  // For example, campaigns by default show to users of all age ranges unless
  // excluded. The UI will show each age range as "enabled", since they're
  // eligible to see the ads; but AdGroupCriterion.status will show "removed",
  // since no positive criterion was added.
  status: googleadsgoogleadsv9enums_AdGroupCriterionStatusEnum_AdGroupCriterionStatus | undefined;
  // Output only. Information regarding the quality of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  qualityInfo: googleadsgoogleadsv9resources_AdGroupCriterion_QualityInfo | undefined;
  // Immutable. The ad group to which the criterion belongs.
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // Output only. The type of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_CriterionTypeEnum_CriterionType | undefined;
  // Immutable. Whether to target (`false`) or exclude (`true`) the criterion.
  // This field is immutable. To switch a criterion from positive to negative,
  // remove then re-add it.
  //
  // Behaviors: IMMUTABLE
  negative?: boolean;
  // Output only. Serving status of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  systemServingStatus: googleadsgoogleadsv9enums_CriterionSystemServingStatusEnum_CriterionSystemServingStatus | undefined;
  // Output only. Approval status of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  approvalStatus: googleadsgoogleadsv9enums_AdGroupCriterionApprovalStatusEnum_AdGroupCriterionApprovalStatus | undefined;
  // Output only. List of disapproval reasons of the criterion.
  // The different reasons for disapproving a criterion can be found here:
  // https://support.google.com/adspolicy/answer/6008942
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  disapprovalReasons: string[] | undefined;
  // Output only. The resource names of labels attached to this ad group criterion.
  //
  // Behaviors: OUTPUT_ONLY
  labels: string[] | undefined;
  // The modifier for the bid when the criterion matches. The modifier must be
  // in the range: 0.1 - 10.0. Most targetable criteria types support modifiers.
  bidModifier?: number;
  // The CPC (cost-per-click) bid.
  cpcBidMicros?: number;
  // The CPM (cost-per-thousand viewable impressions) bid.
  cpmBidMicros?: number;
  // The CPV (cost-per-view) bid.
  cpvBidMicros?: number;
  // The CPC bid amount, expressed as a fraction of the advertised price
  // for some good or service. The valid range for the fraction is [0,1) and the
  // value stored here is 1,000,000 * [fraction].
  percentCpcBidMicros?: number;
  // Output only. The effective CPC (cost-per-click) bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCpcBidMicros?: number;
  // Output only. The effective CPM (cost-per-thousand viewable impressions) bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCpmBidMicros?: number;
  // Output only. The effective CPV (cost-per-view) bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCpvBidMicros?: number;
  // Output only. The effective Percent CPC bid amount.
  //
  // Behaviors: OUTPUT_ONLY
  effectivePercentCpcBidMicros?: number;
  // Output only. Source of the effective CPC bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCpcBidSource: googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource | undefined;
  // Output only. Source of the effective CPM bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCpmBidSource: googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource | undefined;
  // Output only. Source of the effective CPV bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCpvBidSource: googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource | undefined;
  // Output only. Source of the effective Percent CPC bid.
  //
  // Behaviors: OUTPUT_ONLY
  effectivePercentCpcBidSource: googleadsgoogleadsv9enums_BiddingSourceEnum_BiddingSource | undefined;
  // Output only. Estimates for criterion bids at various positions.
  //
  // Behaviors: OUTPUT_ONLY
  positionEstimates: googleadsgoogleadsv9resources_AdGroupCriterion_PositionEstimates | undefined;
  // The list of possible final URLs after all cross-domain redirects for the
  // ad.
  finalUrls: string[] | undefined;
  // The list of possible final mobile URLs after all cross-domain redirects.
  finalMobileUrls: string[] | undefined;
  // URL template for appending params to final URL.
  finalUrlSuffix?: string;
  // The URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // The list of mappings used to substitute custom parameter tags in a
  // `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // Immutable. Keyword.
  //
  // Behaviors: IMMUTABLE
  keyword?: googleadsgoogleadsv9common_KeywordInfo;
  // Immutable. Placement.
  //
  // Behaviors: IMMUTABLE
  placement?: googleadsgoogleadsv9common_PlacementInfo;
  // Immutable. Mobile app category.
  //
  // Behaviors: IMMUTABLE
  mobileAppCategory?: googleadsgoogleadsv9common_MobileAppCategoryInfo;
  // Immutable. Mobile application.
  //
  // Behaviors: IMMUTABLE
  mobileApplication?: googleadsgoogleadsv9common_MobileApplicationInfo;
  // Immutable. Listing group.
  //
  // Behaviors: IMMUTABLE
  listingGroup?: googleadsgoogleadsv9common_ListingGroupInfo;
  // Immutable. Age range.
  //
  // Behaviors: IMMUTABLE
  ageRange?: googleadsgoogleadsv9common_AgeRangeInfo;
  // Immutable. Gender.
  //
  // Behaviors: IMMUTABLE
  gender?: googleadsgoogleadsv9common_GenderInfo;
  // Immutable. Income range.
  //
  // Behaviors: IMMUTABLE
  incomeRange?: googleadsgoogleadsv9common_IncomeRangeInfo;
  // Immutable. Parental status.
  //
  // Behaviors: IMMUTABLE
  parentalStatus?: googleadsgoogleadsv9common_ParentalStatusInfo;
  // Immutable. User List.
  //
  // Behaviors: IMMUTABLE
  userList?: googleadsgoogleadsv9common_UserListInfo;
  // Immutable. YouTube Video.
  //
  // Behaviors: IMMUTABLE
  youtubeVideo?: googleadsgoogleadsv9common_YouTubeVideoInfo;
  // Immutable. YouTube Channel.
  //
  // Behaviors: IMMUTABLE
  youtubeChannel?: googleadsgoogleadsv9common_YouTubeChannelInfo;
  // Immutable. Topic.
  //
  // Behaviors: IMMUTABLE
  topic?: googleadsgoogleadsv9common_TopicInfo;
  // Immutable. User Interest.
  //
  // Behaviors: IMMUTABLE
  userInterest?: googleadsgoogleadsv9common_UserInterestInfo;
  // Immutable. Webpage
  //
  // Behaviors: IMMUTABLE
  webpage?: googleadsgoogleadsv9common_WebpageInfo;
  // Immutable. App Payment Model.
  //
  // Behaviors: IMMUTABLE
  appPaymentModel?: googleadsgoogleadsv9common_AppPaymentModelInfo;
  // Immutable. Custom Affinity.
  //
  // Behaviors: IMMUTABLE
  customAffinity?: googleadsgoogleadsv9common_CustomAffinityInfo;
  // Immutable. Custom Intent.
  //
  // Behaviors: IMMUTABLE
  customIntent?: googleadsgoogleadsv9common_CustomIntentInfo;
  // Immutable. Custom Audience.
  //
  // Behaviors: IMMUTABLE
  customAudience?: googleadsgoogleadsv9common_CustomAudienceInfo;
  // Immutable. Combined Audience.
  //
  // Behaviors: IMMUTABLE
  combinedAudience?: googleadsgoogleadsv9common_CombinedAudienceInfo;
};

// The possible statuses of an AdGroupCriterion.
export type googleadsgoogleadsv9enums_AdGroupCriterionStatusEnum_AdGroupCriterionStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The ad group criterion is enabled.
  | "ENABLED"
  // The ad group criterion is paused.
  | "PAUSED"
  // The ad group criterion is removed.
  | "REMOVED";
// A container for ad group criterion quality information.
export type googleadsgoogleadsv9resources_AdGroupCriterion_QualityInfo = {
  // Output only. The quality score.
  // This field may not be populated if Google does not have enough
  // information to determine a value.
  //
  // Behaviors: OUTPUT_ONLY
  qualityScore?: number;
  // Output only. The performance of the ad compared to other advertisers.
  //
  // Behaviors: OUTPUT_ONLY
  creativeQualityScore: googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket | undefined;
  // Output only. The quality score of the landing page.
  //
  // Behaviors: OUTPUT_ONLY
  postClickQualityScore: googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket | undefined;
  // Output only. The click-through rate compared to that of other advertisers.
  //
  // Behaviors: OUTPUT_ONLY
  searchPredictedCtr: googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket | undefined;
};

// Enum listing the possible quality score buckets.
export type googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Quality of the creative is below average.
  | "BELOW_AVERAGE"
  // Quality of the creative is average.
  | "AVERAGE"
  // Quality of the creative is above average.
  | "ABOVE_AVERAGE";
// Enumerates criterion system serving statuses.
export type googleadsgoogleadsv9enums_CriterionSystemServingStatusEnum_CriterionSystemServingStatus =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Eligible.
  | "ELIGIBLE"
  // Low search volume.
  | "RARELY_SERVED";
// Enumerates AdGroupCriterion approval statuses.
export type googleadsgoogleadsv9enums_AdGroupCriterionApprovalStatusEnum_AdGroupCriterionApprovalStatus =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Approved.
  | "APPROVED"
  // Disapproved.
  | "DISAPPROVED"
  // Pending Review.
  | "PENDING_REVIEW"
  // Under review.
  | "UNDER_REVIEW";
// Estimates for criterion bids at various positions.
export type googleadsgoogleadsv9resources_AdGroupCriterion_PositionEstimates = {
  // Output only. The estimate of the CPC bid required for ad to be shown on first
  // page of search results.
  //
  // Behaviors: OUTPUT_ONLY
  firstPageCpcMicros?: number;
  // Output only. The estimate of the CPC bid required for ad to be displayed in first
  // position, at the top of the first page of search results.
  //
  // Behaviors: OUTPUT_ONLY
  firstPositionCpcMicros?: number;
  // Output only. The estimate of the CPC bid required for ad to be displayed at the top
  // of the first page of search results.
  //
  // Behaviors: OUTPUT_ONLY
  topOfPageCpcMicros?: number;
  // Output only. Estimate of how many clicks per week you might get by changing your
  // keyword bid to the value in first_position_cpc_micros.
  //
  // Behaviors: OUTPUT_ONLY
  estimatedAddClicksAtFirstPositionCpc?: number;
  // Output only. Estimate of how your cost per week might change when changing your
  // keyword bid to the value in first_position_cpc_micros.
  //
  // Behaviors: OUTPUT_ONLY
  estimatedAddCostAtFirstPositionCpc?: number;
};

// A listing group criterion.
export type googleadsgoogleadsv9common_ListingGroupInfo = {
  // Type of the listing group.
  type: googleadsgoogleadsv9enums_ListingGroupTypeEnum_ListingGroupType | undefined;
  // Dimension value with which this listing group is refining its parent.
  // Undefined for the root group.
  caseValue: googleadsgoogleadsv9common_ListingDimensionInfo | undefined;
  // Resource name of ad group criterion which is the parent listing group
  // subdivision. Null for the root group.
  parentAdGroupCriterion?: string;
};

// The type of the listing group.
export type googleadsgoogleadsv9enums_ListingGroupTypeEnum_ListingGroupType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Subdivision of products along some listing dimension. These nodes
  // are not used by serving to target listing entries, but is purely
  // to define the structure of the tree.
  | "SUBDIVISION"
  // Listing group unit that defines a bid.
  | "UNIT";
// An app payment model criterion.
export type googleadsgoogleadsv9common_AppPaymentModelInfo = {
  // Type of the app payment model.
  type: googleadsgoogleadsv9enums_AppPaymentModelTypeEnum_AppPaymentModelType | undefined;
};

// Enum describing possible app payment models.
export type googleadsgoogleadsv9enums_AppPaymentModelTypeEnum_AppPaymentModelType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Represents paid-for apps.
  | "PAID";
// A custom intent criterion.
// A criterion of this type is only targetable.
export type googleadsgoogleadsv9common_CustomIntentInfo = {
  // The CustomInterest resource name.
  customIntent?: string;
};

// A single operation (create, update, remove) on an ad group extension setting.
export type AdGroupExtensionSettingOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
  // Create operation: No resource name is expected for the new ad group
  // extension setting.
  create?: googleadsgoogleadsv9resources_AdGroupExtensionSetting;
  // Update operation: The ad group extension setting is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_AdGroupExtensionSetting;
  // Remove operation: A resource name for the removed ad group extension
  // setting is expected, in this format:
  // `customers/{customer_id}/adGroupExtensionSettings/{ad_group_id}~{extension_type}`
  remove?: string;
};

// An ad group extension setting.
export type googleadsgoogleadsv9resources_AdGroupExtensionSetting = {
  // Immutable. The resource name of the ad group extension setting.
  // AdGroupExtensionSetting resource names have the form:
  // `customers/{customer_id}/adGroupExtensionSettings/{ad_group_id}~{extension_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The extension type of the ad group extension setting.
  //
  // Behaviors: IMMUTABLE
  extensionType: googleadsgoogleadsv9enums_ExtensionTypeEnum_ExtensionType | undefined;
  // Immutable. The resource name of the ad group. The linked extension feed items will
  // serve under this ad group.
  // AdGroup resource names have the form:
  // `customers/{customer_id}/adGroups/{ad_group_id}`
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // The resource names of the extension feed items to serve under the ad group.
  // ExtensionFeedItem resource names have the form:
  // `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
  extensionFeedItems: string[] | undefined;
  // The device for which the extensions will serve. Optional.
  device: googleadsgoogleadsv9enums_ExtensionSettingDeviceEnum_ExtensionSettingDevice | undefined;
};

// Possible device types for an extension setting.
export type googleadsgoogleadsv9enums_ExtensionSettingDeviceEnum_ExtensionSettingDevice =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Mobile. The extensions in the extension setting will only serve on
  // mobile devices.
  | "MOBILE"
  // Desktop. The extensions in the extension setting will only serve on
  // desktop devices.
  | "DESKTOP";
// A single operation (create, remove) on an ad group label.
export type AdGroupLabelOperation = {
  // Create operation: No resource name is expected for the new ad group
  // label.
  create?: googleadsgoogleadsv9resources_AdGroupLabel;
  // Remove operation: A resource name for the ad group label
  // being removed, in this format:
  // `customers/{customer_id}/adGroupLabels/{ad_group_id}~{label_id}`
  remove?: string;
};

// A relationship between an ad group and a label.
export type googleadsgoogleadsv9resources_AdGroupLabel = {
  // Immutable. The resource name of the ad group label.
  // Ad group label resource names have the form:
  // `customers/{customer_id}/adGroupLabels/{ad_group_id}~{label_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group to which the label is attached.
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // Immutable. The label assigned to the ad group.
  //
  // Behaviors: IMMUTABLE
  label?: string;
};

// A single operation (create, update, remove) on ad parameter.
export type AdParameterOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new ad parameter.
  create?: googleadsgoogleadsv9resources_AdParameter;
  // Update operation: The ad parameter is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_AdParameter;
  // Remove operation: A resource name for the ad parameter to remove is
  // expected in this format:
  // `customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}`
  remove?: string;
};

// An ad parameter that is used to update numeric values (such as prices or
// inventory levels) in any text line of an ad (including URLs). There can
// be a maximum of two AdParameters per ad group criterion. (One with
// parameter_index = 1 and one with parameter_index = 2.)
// In the ad the parameters are referenced by a placeholder of the form
// "{param#:value}". E.g. "{param1:$17}"
export type googleadsgoogleadsv9resources_AdParameter = {
  // Immutable. The resource name of the ad parameter.
  // Ad parameter resource names have the form:
  // `customers/{customer_id}/adParameters/{ad_group_id}~{criterion_id}~{parameter_index}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The ad group criterion that this ad parameter belongs to.
  //
  // Behaviors: IMMUTABLE
  adGroupCriterion?: string;
  // Immutable. The unique index of this ad parameter. Must be either 1 or 2.
  //
  // Behaviors: IMMUTABLE
  parameterIndex?: number;
  // Numeric value to insert into the ad text. The following restrictions
  // apply:
  // - Can use comma or period as a separator, with an optional period or
  // comma (respectively) for fractional values. For example, 1,000,000.00
  // and 2.000.000,10 are valid.
  // - Can be prepended or appended with a currency symbol. For example,
  // $99.99 is valid.
  // - Can be prepended or appended with a currency code. For example, 99.99USD
  // and EUR200 are valid.
  // - Can use '%'. For example, 1.0% and 1,0% are valid.
  // - Can use plus or minus. For example, -10.99 and 25+ are valid.
  // - Can use '/' between two numbers. For example 4/1 and 0.95/0.45 are
  // valid.
  insertionText?: string;
};

// A single operation (create, remove) on an asset group asset.
export type AssetGroupAssetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new asset group
  // asset
  create?: googleadsgoogleadsv9resources_AssetGroupAsset;
  // Update operation: The asset group asset sis expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_AssetGroupAsset;
  // Remove operation: A resource name for the removed asset group asset is
  // expected, in this format:
  // `customers/{customer_id}/assetGroupAssets/{asset_group_id}~{asset_id}~{field_type}`
  remove?: string;
};

// AssetGroupAsset is the link between an asset and an asset group.
// Adding an AssetGroupAsset links an asset with an asset group.
export type googleadsgoogleadsv9resources_AssetGroupAsset = {
  // Immutable. The resource name of the asset group asset.
  // Asset group asset resource name have the form:
  // `customers/{customer_id}/assetGroupAssets/{asset_group_id}~{asset_id}~{field_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The asset group which this asset group asset is linking.
  //
  // Behaviors: IMMUTABLE
  assetGroup: string | undefined;
  // Immutable. The asset which this asset group asset is linking.
  //
  // Behaviors: IMMUTABLE
  asset: string | undefined;
  // The description of the placement of the asset within the asset group. E.g.:
  // HEADLINE, YOUTUBE_VIDEO etc
  fieldType: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType | undefined;
  // The status of the link between an asset and asset group.
  status: googleadsgoogleadsv9enums_AssetLinkStatusEnum_AssetLinkStatus | undefined;
  // Output only. The performance of this asset group asset.
  //
  // Behaviors: OUTPUT_ONLY
  performanceLabel: googleadsgoogleadsv9enums_AssetPerformanceLabelEnum_AssetPerformanceLabel | undefined;
  // Output only. The policy information for this asset group asset.
  //
  // Behaviors: OUTPUT_ONLY
  policySummary: googleadsgoogleadsv9common_PolicySummary | undefined;
};

// Contains policy summary information.
export type googleadsgoogleadsv9common_PolicySummary = {
  // The list of policy findings.
  policyTopicEntries: googleadsgoogleadsv9common_PolicyTopicEntry[] | undefined;
  // Where in the review process the resource is.
  reviewStatus: googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus | undefined;
  // The overall approval status, which is calculated based on
  // the status of its individual policy topic entries.
  approvalStatus: googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus | undefined;
};

// A single operation (create, remove) on an asset group listing group filter.
export type AssetGroupListingGroupFilterOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new asset group
  // listing group filter.
  create?: googleadsgoogleadsv9resources_AssetGroupListingGroupFilter;
  // Update operation: The asset group listing group filter is expected to
  // have a valid resource name.
  update?: googleadsgoogleadsv9resources_AssetGroupListingGroupFilter;
  // Remove operation: A resource name for the removed asset group listing
  // group filter is expected, in this format:
  // `customers/{customer_id}/assetGroupListingGroupFilters/{asset_group_id}~{listing_group_filter_id}`
  // An entity can be removed only if it's not referenced by other
  // parent_listing_group_id. If multiple entities are being deleted, the
  // mutates must be in the correct order.
  remove?: string;
};

// AssetGroupListingGroupFilter represents a listing group filter tree node in
// an asset group.
export type googleadsgoogleadsv9resources_AssetGroupListingGroupFilter = {
  // Immutable. The resource name of the asset group listing group filter.
  // Asset group listing group filter resource name have the form:
  // `customers/{customer_id}/assetGroupListingGroupFilters/{asset_group_id}~{listing_group_filter_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The asset group which this asset group listing group filter is part of.
  //
  // Behaviors: IMMUTABLE
  assetGroup: string | undefined;
  // Output only. The ID of the ListingGroupFilter.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Immutable. Type of a listing group filter node.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_ListingGroupFilterTypeEnum_ListingGroupFilterType | undefined;
  // Immutable. The vertical the current node tree represents. All nodes in the same tree
  // must belong to the same vertical.
  //
  // Behaviors: IMMUTABLE
  vertical: googleadsgoogleadsv9enums_ListingGroupFilterVerticalEnum_ListingGroupFilterVertical | undefined;
  // Dimension value with which this listing group is refining its parent.
  // Undefined for the root group.
  caseValue: googleadsgoogleadsv9resources_ListingGroupFilterDimension | undefined;
  // Immutable. Resource name of the parent listing group subdivision. Null for the root
  // listing group filter node.
  //
  // Behaviors: IMMUTABLE
  parentListingGroupFilter: string | undefined;
};

// The type of the listing group filter.
export type googleadsgoogleadsv9enums_ListingGroupFilterTypeEnum_ListingGroupFilterType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Subdivision of products along some listing dimensions.
  | "SUBDIVISION"
  // An included listing group filter leaf node.
  | "UNIT_INCLUDED"
  // An excluded listing group filter leaf node.
  | "UNIT_EXCLUDED";
// The type of the listing group filter vertical.
export type googleadsgoogleadsv9enums_ListingGroupFilterVerticalEnum_ListingGroupFilterVertical =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Represents the shopping vertical.
  | "SHOPPING";
// Listing dimensions for the asset group listing group filter.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension = {
  // Bidding category of a product offer.
  productBiddingCategory?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductBiddingCategory;
  // Brand of a product offer.
  productBrand?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductBrand;
  // Locality of a product offer.
  productChannel?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductChannel;
  // Condition of a product offer.
  productCondition?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductCondition;
  // Custom attribute of a product offer.
  productCustomAttribute?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductCustomAttribute;
  // Item id of a product offer.
  productItemId?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductItemId;
  // Type of a product offer.
  productType?: googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductType;
};

// One element of a bidding category at a certain level. Top-level categories
// are at level 1, their children at level 2, and so on. We currently support
// up to 5 levels. The user must specify a dimension type that indicates the
// level of the category. All cases of the same subdivision must have the same
// dimension type (category level).
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductBiddingCategory = {
  // ID of the product bidding category.
  // This ID is equivalent to the google_product_category ID as described in
  // this article: https://support.google.com/merchants/answer/6324436
  id?: number;
  // Indicates the level of the category in the taxonomy.
  level: googleadsgoogleadsv9enums_ListingGroupFilterBiddingCategoryLevelEnum_ListingGroupFilterBiddingCategoryLevel | undefined;
};

// The level of the listing group filter bidding category.
export type googleadsgoogleadsv9enums_ListingGroupFilterBiddingCategoryLevelEnum_ListingGroupFilterBiddingCategoryLevel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Level 1.
  | "LEVEL1"
  // Level 2.
  | "LEVEL2"
  // Level 3.
  | "LEVEL3"
  // Level 4.
  | "LEVEL4"
  // Level 5.
  | "LEVEL5";
// Brand of the product.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductBrand = {
  // String value of the product brand.
  value?: string;
};

// Locality of a product offer.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductChannel = {
  // Value of the locality.
  channel: googleadsgoogleadsv9enums_ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel | undefined;
};

// Enum describing the locality of a product offer.
export type googleadsgoogleadsv9enums_ListingGroupFilterProductChannelEnum_ListingGroupFilterProductChannel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The item is sold online.
  | "ONLINE"
  // The item is sold in local stores.
  | "LOCAL";
// Condition of a product offer.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductCondition = {
  // Value of the condition.
  condition: googleadsgoogleadsv9enums_ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition | undefined;
};

// Enum describing the condition of a product offer.
export type googleadsgoogleadsv9enums_ListingGroupFilterProductConditionEnum_ListingGroupFilterProductCondition =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The product condition is new.
  | "NEW"
  // The product condition is refurbished.
  | "REFURBISHED"
  // The product condition is used.
  | "USED";
// Custom attribute of a product offer.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductCustomAttribute = {
  // String value of the product custom attribute.
  value?: string;
  // Indicates the index of the custom attribute.
  index: googleadsgoogleadsv9enums_ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex | undefined;
};

// The index of customer attributes.
export type googleadsgoogleadsv9enums_ListingGroupFilterCustomAttributeIndexEnum_ListingGroupFilterCustomAttributeIndex =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // First listing group filter custom attribute.
  | "INDEX0"
  // Second listing group filter custom attribute.
  | "INDEX1"
  // Third listing group filter custom attribute.
  | "INDEX2"
  // Fourth listing group filter custom attribute.
  | "INDEX3"
  // Fifth listing group filter custom attribute.
  | "INDEX4";
// Item id of a product offer.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductItemId = {
  // Value of the id.
  value?: string;
};

// Type of a product offer.
export type googleadsgoogleadsv9resources_ListingGroupFilterDimension_ProductType = {
  // Value of the type.
  value?: string;
  // Level of the type.
  level: googleadsgoogleadsv9enums_ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel | undefined;
};

// Enum describing the level of the type of a product offer.
export type googleadsgoogleadsv9enums_ListingGroupFilterProductTypeLevelEnum_ListingGroupFilterProductTypeLevel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Level 1.
  | "LEVEL1"
  // Level 2.
  | "LEVEL2"
  // Level 3.
  | "LEVEL3"
  // Level 4.
  | "LEVEL4"
  // Level 5.
  | "LEVEL5";
// A single operation (create, remove) on an asset set.
export type AssetSetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new asset set
  create?: googleadsgoogleadsv9resources_AssetSet;
  // Update operation: The asset set is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_AssetSet;
  // Remove operation: A resource name for the removed asset set is
  // expected, in this format:
  // `customers/{customer_id}/assetSets/{asset_set_id}`
  remove?: string;
};

// An asset set representing a collection of assets.
// Use AssetSetAsset to link an asset to the asset set.
export type googleadsgoogleadsv9resources_AssetSet = {
  // Immutable. The resource name of the asset set.
  // Asset set resource names have the form:
  // `customers/{customer_id}/assetSets/{asset_set_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Required. Name of the asset set. Required. It must have a minimum length of 1 and
  // maximum length of 128.
  //
  // Behaviors: REQUIRED
  name: string | undefined;
  // Required. Immutable. The type of the asset set. Required.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  type: googleadsgoogleadsv9enums_AssetSetTypeEnum_AssetSetType | undefined;
  // Output only. The status of the asset set. Read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_AssetSetStatusEnum_AssetSetStatus | undefined;
  // Merchant ID and Feed Label from Google Merchant Center.
  merchantCenterFeed: googleadsgoogleadsv9resources_AssetSet_MerchantCenterFeed | undefined;
};

// Possible types of an asset set.
export type googleadsgoogleadsv9enums_AssetSetTypeEnum_AssetSetType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Page feed.
  | "PAGE_FEED"
  // Dynamic education feed.
  | "DYNAMIC_EDUCATION"
  // Google Merchant Center asset set.
  | "MERCHANT_CENTER_FEED";
// The possible statuses of an asset set.
export type googleadsgoogleadsv9enums_AssetSetStatusEnum_AssetSetStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The asset set is enabled.
  | "ENABLED"
  // The asset set is removed.
  | "REMOVED";
// Merchant ID and Feed Label from Google Merchant Center.
export type googleadsgoogleadsv9resources_AssetSet_MerchantCenterFeed = {
  // Required. Merchant ID from Google Merchant Center
  //
  // Behaviors: REQUIRED
  merchantId: number | undefined;
  // Optional. Feed Label from Google Merchant Center.
  //
  // Behaviors: OPTIONAL
  feedLabel?: string;
};

// A single operation (create, remove, update) on a data exclusion.
export type BiddingDataExclusionOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new data
  // exclusion.
  create?: googleadsgoogleadsv9resources_BiddingDataExclusion;
  // Update operation: The data exclusion is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_BiddingDataExclusion;
  // Remove operation: A resource name for the removed data exclusion
  // is expected, in this format:
  // `customers/{customer_id}/biddingDataExclusions/{data_exclusion_id}`
  remove?: string;
};

// Represents a bidding data exclusion.
// See "About data exclusions" at
// https://support.google.com/google-ads/answer/10370710.
export type googleadsgoogleadsv9resources_BiddingDataExclusion = {
  // Immutable. The resource name of the data exclusion.
  // Data exclusion resource names have the form:
  // `customers/{customer_id}/biddingDataExclusions/{data_exclusion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the data exclusion.
  //
  // Behaviors: OUTPUT_ONLY
  dataExclusionId: number | undefined;
  // The scope of the data exclusion.
  scope: googleadsgoogleadsv9enums_SeasonalityEventScopeEnum_SeasonalityEventScope | undefined;
  // Output only. The status of the data exclusion.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_SeasonalityEventStatusEnum_SeasonalityEventStatus | undefined;
  // Required. The inclusive start time of the data exclusion in yyyy-MM-dd HH:mm:ss
  // format.
  // A data exclusion is backward looking and should be used for events that
  // start in the past and end either in the past or future.
  //
  // Behaviors: REQUIRED
  startDateTime: string | undefined;
  // Required. The exclusive end time of the data exclusion in yyyy-MM-dd HH:mm:ss format.
  // The length of [start_date_time, end_date_time) interval must be
  // within (0, 14 days].
  //
  // Behaviors: REQUIRED
  endDateTime: string | undefined;
  // The name of the data exclusion. The name can be at most 255
  // characters.
  name: string | undefined;
  // The description of the data exclusion. The description can be at
  // most 2048 characters.
  description: string | undefined;
  // If not specified, all devices will be included in this exclusion.
  // Otherwise, only the specified targeted devices will be included in this
  // exclusion.
  devices: googleadsgoogleadsv9enums_DeviceEnum_Device[] | undefined;
  // The data exclusion will apply to the campaigns listed when the scope of
  // this exclusion is CAMPAIGN. The maximum number of campaigns per event is
  // 2000.
  // Note: a data exclusion with both advertising_channel_types and
  // campaign_ids is not supported.
  campaigns: string[] | undefined;
  // The data_exclusion will apply to all the campaigns under the listed
  // channels retroactively as well as going forward when the scope of this
  // exclusion is CHANNEL.
  // The supported advertising channel types are DISPLAY, SEARCH and SHOPPING.
  // Note: a data exclusion with both advertising_channel_types and
  // campaign_ids is not supported.
  advertisingChannelTypes: googleadsgoogleadsv9enums_AdvertisingChannelTypeEnum_AdvertisingChannelType[] | undefined;
};

// A single operation (create, update, remove) on a bidding strategy.
export type BiddingStrategyOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new bidding
  // strategy.
  create?: googleadsgoogleadsv9resources_BiddingStrategy;
  // Update operation: The bidding strategy is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_BiddingStrategy;
  // Remove operation: A resource name for the removed bidding strategy is
  // expected, in this format:
  // `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}`
  remove?: string;
};

// A bidding strategy.
export type googleadsgoogleadsv9resources_BiddingStrategy = {
  // Immutable. The resource name of the bidding strategy.
  // Bidding strategy resource names have the form:
  // `customers/{customer_id}/biddingStrategies/{bidding_strategy_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the bidding strategy.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the bidding strategy.
  // All bidding strategies within an account must be named distinctly.
  // The length of this string should be between 1 and 255, inclusive,
  // in UTF-8 bytes, (trimmed).
  name?: string;
  // Output only. The status of the bidding strategy.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_BiddingStrategyStatusEnum_BiddingStrategyStatus | undefined;
  // Output only. The type of the bidding strategy.
  // Create a bidding strategy by setting the bidding scheme.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_BiddingStrategyTypeEnum_BiddingStrategyType | undefined;
  // Immutable. The currency used by the bidding strategy (ISO 4217 three-letter code).
  // For bidding strategies in manager customers, this currency can be set on
  // creation and defaults to the manager customer's currency. For serving
  // customers, this field cannot be set; all strategies in a serving customer
  // implicitly use the serving customer's currency. In all cases the
  // effective_currency_code field returns the currency used by the strategy.
  //
  // Behaviors: IMMUTABLE
  currencyCode: string | undefined;
  // Output only. The currency used by the bidding strategy (ISO 4217 three-letter code).
  // For bidding strategies in manager customers, this is the currency set by
  // the advertiser when creating the strategy. For serving customers, this is
  // the customer's currency_code.
  // Bidding strategy metrics are reported in this currency.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  effectiveCurrencyCode?: string;
  // Output only. The number of campaigns attached to this bidding strategy.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  campaignCount?: number;
  // Output only. The number of non-removed campaigns attached to this bidding strategy.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  nonRemovedCampaignCount?: number;
  // A bidding strategy that raises bids for clicks that seem more likely to
  // lead to a conversion and lowers them for clicks where they seem less
  // likely.
  enhancedCpc?: googleadsgoogleadsv9common_EnhancedCpc;
  // An automated bidding strategy to help get the most conversion value for
  // your campaigns while spending your budget.
  maximizeConversionValue?: googleadsgoogleadsv9common_MaximizeConversionValue;
  // An automated bidding strategy to help get the most conversions for your
  // campaigns while spending your budget.
  maximizeConversions?: googleadsgoogleadsv9common_MaximizeConversions;
  // A bidding strategy that sets bids to help get as many conversions as
  // possible at the target cost-per-acquisition (CPA) you set.
  targetCpa?: googleadsgoogleadsv9common_TargetCpa;
  // A bidding strategy that automatically optimizes towards a desired
  // percentage of impressions.
  targetImpressionShare?: googleadsgoogleadsv9common_TargetImpressionShare;
  // A bidding strategy that helps you maximize revenue while averaging a
  // specific target Return On Ad Spend (ROAS).
  targetRoas?: googleadsgoogleadsv9common_TargetRoas;
  // A bid strategy that sets your bids to help get as many clicks as
  // possible within your budget.
  targetSpend?: googleadsgoogleadsv9common_TargetSpend;
};

// The possible statuses of a BiddingStrategy.
export type googleadsgoogleadsv9enums_BiddingStrategyStatusEnum_BiddingStrategyStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The bidding strategy is enabled.
  | "ENABLED"
  // The bidding strategy is removed.
  | "REMOVED";
// An automated bidding strategy that raises bids for clicks
// that seem more likely to lead to a conversion and lowers
// them for clicks where they seem less likely.
export type googleadsgoogleadsv9common_EnhancedCpc = {
};

// An automated bidding strategy to help get the most conversion value for your
// campaigns while spending your budget.
export type googleadsgoogleadsv9common_MaximizeConversionValue = {
  // The target return on ad spend (ROAS) option. If set, the bid strategy will
  // maximize revenue while averaging the target return on ad spend. If the
  // target ROAS is high, the bid strategy may not be able to spend the full
  // budget. If the target ROAS is not set, the bid strategy will aim to
  // achieve the highest possible ROAS for the budget.
  targetRoas: number | undefined;
  // Maximum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // Mutable for portfolio bidding strategies only.
  cpcBidCeilingMicros: number | undefined;
  // Minimum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // Mutable for portfolio bidding strategies only.
  cpcBidFloorMicros: number | undefined;
};

// An automated bidding strategy to help get the most conversions for your
// campaigns while spending your budget.
export type googleadsgoogleadsv9common_MaximizeConversions = {
  // The target cost-per-action (CPA) option. This is the average amount that
  // you would like to spend per conversion action. If set, the bid strategy
  // will get as many conversions as possible at or below the target
  // cost-per-action. If the target CPA is not set, the bid strategy will
  // aim to achieve the lowest possible CPA given the budget.
  targetCpa: number | undefined;
  // Maximum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // Mutable for portfolio bidding strategies only.
  cpcBidCeilingMicros: number | undefined;
  // Minimum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // Mutable for portfolio bidding strategies only.
  cpcBidFloorMicros: number | undefined;
};

// An automated bid strategy that sets bids to help get as many conversions as
// possible at the target cost-per-acquisition (CPA) you set.
export type googleadsgoogleadsv9common_TargetCpa = {
  // Average CPA target.
  // This target should be greater than or equal to minimum billable unit based
  // on the currency for the account.
  targetCpaMicros?: number;
  // Maximum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // This should only be set for portfolio bid strategies.
  cpcBidCeilingMicros?: number;
  // Minimum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // This should only be set for portfolio bid strategies.
  cpcBidFloorMicros?: number;
};

// An automated bidding strategy that sets bids so that a certain percentage of
// search ads are shown at the top of the first page (or other targeted
// location).
export type googleadsgoogleadsv9common_TargetImpressionShare = {
  // The targeted location on the search results page.
  location: googleadsgoogleadsv9enums_TargetImpressionShareLocationEnum_TargetImpressionShareLocation | undefined;
  // The desired fraction of ads to be shown in the targeted location in micros.
  // E.g. 1% equals 10,000.
  locationFractionMicros?: number;
  // The highest CPC bid the automated bidding system is permitted to specify.
  // This is a required field entered by the advertiser that sets the ceiling
  // and specified in local micros.
  cpcBidCeilingMicros?: number;
};

// An automated bidding strategy that helps you maximize revenue while
// averaging a specific target return on ad spend (ROAS).
export type googleadsgoogleadsv9common_TargetRoas = {
  // Required. The desired revenue (based on conversion data) per unit of spend.
  // Value must be between 0.01 and 1000.0, inclusive.
  targetRoas?: number;
  // Maximum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // This should only be set for portfolio bid strategies.
  cpcBidCeilingMicros?: number;
  // Minimum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  // This should only be set for portfolio bid strategies.
  cpcBidFloorMicros?: number;
};

// An automated bid strategy that sets your bids to help get as many clicks
// as possible within your budget.
export type googleadsgoogleadsv9common_TargetSpend = {
  // The spend target under which to maximize clicks.
  // A TargetSpend bidder will attempt to spend the smaller of this value
  // or the natural throttling spend amount.
  // If not specified, the budget is used as the spend target.
  // This field is deprecated and should no longer be used. See
  // https://ads-developers.googleblog.com/2020/05/reminder-about-sunset-creation-of.html
  // for details.
  targetSpendMicros?: number;
  // Maximum bid limit that can be set by the bid strategy.
  // The limit applies to all keywords managed by the strategy.
  cpcBidCeilingMicros?: number;
};

// A single operation (create, update, remove) on a campaign asset.
export type CampaignAssetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new campaign
  // asset.
  create?: googleadsgoogleadsv9resources_CampaignAsset;
  // Update operation: The campaign asset is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_CampaignAsset;
  // Remove operation: A resource name for the removed campaign asset is
  // expected, in this format:
  // `customers/{customer_id}/campaignAssets/{campaign_id}~{asset_id}~{field_type}`
  remove?: string;
};

// A link between a Campaign and an Asset.
export type googleadsgoogleadsv9resources_CampaignAsset = {
  // Immutable. The resource name of the campaign asset.
  // CampaignAsset resource names have the form:
  // `customers/{customer_id}/campaignAssets/{campaign_id}~{asset_id}~{field_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign to which the asset is linked.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // Immutable. The asset which is linked to the campaign.
  //
  // Behaviors: IMMUTABLE
  asset?: string;
  // Immutable. Role that the asset takes under the linked campaign.
  // Required.
  //
  // Behaviors: IMMUTABLE
  fieldType: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType | undefined;
  // Status of the campaign asset.
  status: googleadsgoogleadsv9enums_AssetLinkStatusEnum_AssetLinkStatus | undefined;
};

// A single operation (create, remove, update) on a campaign bid modifier.
export type CampaignBidModifierOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new campaign bid
  // modifier.
  create?: googleadsgoogleadsv9resources_CampaignBidModifier;
  // Update operation: The campaign bid modifier is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CampaignBidModifier;
  // Remove operation: A resource name for the removed campaign bid modifier
  // is expected, in this format:
  // `customers/{customer_id}/CampaignBidModifiers/{campaign_id}~{criterion_id}`
  remove?: string;
};

// Represents a bid-modifiable only criterion at the campaign level.
export type googleadsgoogleadsv9resources_CampaignBidModifier = {
  // Immutable. The resource name of the campaign bid modifier.
  // Campaign bid modifier resource names have the form:
  // `customers/{customer_id}/campaignBidModifiers/{campaign_id}~{criterion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The campaign to which this criterion belongs.
  //
  // Behaviors: OUTPUT_ONLY
  campaign?: string;
  // Output only. The ID of the criterion to bid modify.
  // This field is ignored for mutates.
  //
  // Behaviors: OUTPUT_ONLY
  criterionId?: number;
  // The modifier for the bid when the criterion matches.
  bidModifier?: number;
  // Immutable. Criterion for interaction type. Only supported for search campaigns.
  //
  // Behaviors: IMMUTABLE
  interactionType?: googleadsgoogleadsv9common_InteractionTypeInfo;
};

// Criterion for Interaction Type.
export type googleadsgoogleadsv9common_InteractionTypeInfo = {
  // The interaction type.
  type: googleadsgoogleadsv9enums_InteractionTypeEnum_InteractionType | undefined;
};

// Enum describing possible interaction types.
export type googleadsgoogleadsv9enums_InteractionTypeEnum_InteractionType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Calls.
  | "CALLS";
// A single operation (create, update, remove) on a campaign budget.
export type CampaignBudgetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new budget.
  create?: googleadsgoogleadsv9resources_CampaignBudget;
  // Update operation: The campaign budget is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CampaignBudget;
  // Remove operation: A resource name for the removed budget is expected, in
  // this format:
  // `customers/{customer_id}/campaignBudgets/{budget_id}`
  remove?: string;
};

// A campaign budget.
export type googleadsgoogleadsv9resources_CampaignBudget = {
  // Immutable. The resource name of the campaign budget.
  // Campaign budget resource names have the form:
  // `customers/{customer_id}/campaignBudgets/{campaign_budget_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the campaign budget.
  // A campaign budget is created using the CampaignBudgetService create
  // operation and is assigned a budget ID. A budget ID can be shared across
  // different campaigns; the system will then allocate the campaign budget
  // among different campaigns to get optimum results.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the campaign budget.
  // When creating a campaign budget through CampaignBudgetService, every
  // explicitly shared campaign budget must have a non-null, non-empty name.
  // Campaign budgets that are not explicitly shared derive their name from the
  // attached campaign's name.
  // The length of this string must be between 1 and 255, inclusive,
  // in UTF-8 bytes, (trimmed).
  name?: string;
  // The amount of the budget, in the local currency for the account.
  // Amount is specified in micros, where one million is equivalent to one
  // currency unit. Monthly spend is capped at 30.4 times this amount.
  amountMicros?: number;
  // The lifetime amount of the budget, in the local currency for the account.
  // Amount is specified in micros, where one million is equivalent to one
  // currency unit.
  totalAmountMicros?: number;
  // Output only. The status of this campaign budget. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_BudgetStatusEnum_BudgetStatus | undefined;
  // The delivery method that determines the rate at which the campaign budget
  // is spent.
  // Defaults to STANDARD if unspecified in a create operation.
  deliveryMethod: googleadsgoogleadsv9enums_BudgetDeliveryMethodEnum_BudgetDeliveryMethod | undefined;
  // Specifies whether the budget is explicitly shared. Defaults to true if
  // unspecified in a create operation.
  // If true, the budget was created with the purpose of sharing
  // across one or more campaigns.
  // If false, the budget was created with the intention of only being used
  // with a single campaign. The budget's name and status will stay in sync
  // with the campaign's name and status. Attempting to share the budget with a
  // second campaign will result in an error.
  // A non-shared budget can become an explicitly shared. The same operation
  // must also assign the budget a name.
  // A shared campaign budget can never become non-shared.
  explicitlyShared?: boolean;
  // Output only. The number of campaigns actively using the budget.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  referenceCount?: number;
  // Output only. Indicates whether there is a recommended budget for this campaign budget.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  hasRecommendedBudget?: boolean;
  // Output only. The recommended budget amount. If no recommendation is available, this will
  // be set to the budget amount.
  // Amount is specified in micros, where one million is equivalent to one
  // currency unit.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetAmountMicros?: number;
  // Immutable. Period over which to spend the budget. Defaults to DAILY if not specified.
  //
  // Behaviors: IMMUTABLE
  period: googleadsgoogleadsv9enums_BudgetPeriodEnum_BudgetPeriod | undefined;
  // Output only. The estimated change in weekly clicks if the recommended budget is applied.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetEstimatedChangeWeeklyClicks?: number;
  // Output only. The estimated change in weekly cost in micros if the recommended budget is
  // applied. One million is equivalent to one currency unit.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetEstimatedChangeWeeklyCostMicros?: number;
  // Output only. The estimated change in weekly interactions if the recommended budget is
  // applied.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetEstimatedChangeWeeklyInteractions?: number;
  // Output only. The estimated change in weekly views if the recommended budget is applied.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetEstimatedChangeWeeklyViews?: number;
  // Immutable. The type of the campaign budget.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_BudgetTypeEnum_BudgetType | undefined;
};

// Possible statuses of a Budget.
export type googleadsgoogleadsv9enums_BudgetStatusEnum_BudgetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Budget is enabled.
  | "ENABLED"
  // Budget is removed.
  | "REMOVED";
// Possible delivery methods of a Budget.
export type googleadsgoogleadsv9enums_BudgetDeliveryMethodEnum_BudgetDeliveryMethod =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The budget server will throttle serving evenly across
  // the entire time period.
  | "STANDARD"
  // The budget server will not throttle serving,
  // and ads will serve as fast as possible.
  | "ACCELERATED";
// Possible period of a Budget.
export type googleadsgoogleadsv9enums_BudgetPeriodEnum_BudgetPeriod =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Daily budget.
  | "DAILY"
  // Custom budget, added back in V5.
  // Custom bugdet can be used with total_amount to specify lifetime budget
  // limit. See: https://support.google.com/google-ads/answer/6385083 for more
  // info.
  | "CUSTOM_PERIOD";
// Possible Budget types.
export type googleadsgoogleadsv9enums_BudgetTypeEnum_BudgetType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Budget type for standard Google Ads usage.
  // Caps daily spend at two times the specified budget amount.
  // Full details: https://support.google.com/google-ads/answer/6385083
  | "STANDARD"
  // Budget type with a fixed cost-per-acquisition (conversion).
  // Full details: https://support.google.com/google-ads/answer/7528254
  // This type is only supported by campaigns with
  // AdvertisingChannelType.DISPLAY (excluding
  // AdvertisingChannelSubType.DISPLAY_GMAIL),
  // BiddingStrategyType.TARGET_CPA and PaymentMode.CONVERSIONS.
  | "FIXED_CPA"
  // Budget type for Smart Campaign.
  // Full details: https://support.google.com/google-ads/answer/7653509
  // This type is only supported by campaigns with
  // AdvertisingChannelType.SMART and
  // AdvertisingChannelSubType.SMART_CAMPAIGN.
  | "SMART_CAMPAIGN";
// A single operation (update) on a campaign conversion goal.
export type CampaignConversionGoalOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The customer conversion goal is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_CampaignConversionGoal;
};

// The biddability setting for the specified campaign only for all
// conversion actions with a matching category and origin.
export type googleadsgoogleadsv9resources_CampaignConversionGoal = {
  // Immutable. The resource name of the campaign conversion goal.
  // Campaign conversion goal resource names have the form:
  // `customers/{customer_id}/campaignConversionGoals/{campaign_id}~{category}~{origin}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign with which this campaign conversion goal is associated.
  //
  // Behaviors: IMMUTABLE
  campaign: string | undefined;
  // The conversion category of this campaign conversion goal.
  category: googleadsgoogleadsv9enums_ConversionActionCategoryEnum_ConversionActionCategory | undefined;
  // The conversion origin of this campaign conversion goal.
  origin: googleadsgoogleadsv9enums_ConversionOriginEnum_ConversionOrigin | undefined;
  // The biddability of the campaign conversion goal.
  biddable: boolean | undefined;
};

// A single operation (create, remove) on an customizer attribute.
export type CampaignCustomizerOperation = {
  // Create operation: No resource name is expected for the new campaign
  // customizer
  create?: googleadsgoogleadsv9resources_CampaignCustomizer;
  // Remove operation: A resource name for the removed campaign customizer is
  // expected, in this format:
  // `customers/{customer_id}/campaignCustomizers/{campaign_id}~{customizer_attribute_id}`
  remove?: string;
};

// A customizer value for the associated CustomizerAttribute at the Campaign
// level.
export type googleadsgoogleadsv9resources_CampaignCustomizer = {
  // Immutable. The resource name of the campaign customizer.
  // Campaign customizer resource names have the form:
  // `customers/{customer_id}/campaignCustomizers/{campaign_id}~{customizer_attribute_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The campaign to which the customizer attribute is linked.
  //
  // Behaviors: IMMUTABLE
  campaign: string | undefined;
  // Required. Immutable. The customizer attribute which is linked to the campaign.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  customizerAttribute: string | undefined;
  // Output only. The status of the campaign customizer.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CustomizerValueStatusEnum_CustomizerValueStatus | undefined;
  // Required. The value to associate with the customizer attribute at this level. The
  // value must be of the type specified for the CustomizerAttribute.
  //
  // Behaviors: REQUIRED
  value: googleadsgoogleadsv9common_CustomizerValue | undefined;
};

// A single operation (create, update, remove) on a campaign draft.
export type CampaignDraftOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new campaign
  // draft.
  create?: googleadsgoogleadsv9resources_CampaignDraft;
  // Update operation: The campaign draft is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CampaignDraft;
  // Remove operation: The campaign draft is expected to have a valid
  // resource name, in this format:
  // `customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}`
  remove?: string;
};

// A campaign draft.
export type googleadsgoogleadsv9resources_CampaignDraft = {
  // Immutable. The resource name of the campaign draft.
  // Campaign draft resource names have the form:
  // `customers/{customer_id}/campaignDrafts/{base_campaign_id}~{draft_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the draft.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  draftId?: number;
  // Immutable. The base campaign to which the draft belongs.
  //
  // Behaviors: IMMUTABLE
  baseCampaign?: string;
  // The name of the campaign draft.
  // This field is required and should not be empty when creating new
  // campaign drafts.
  // It must not contain any null (code point 0x0), NL line feed
  // (code point 0xA) or carriage return (code point 0xD) characters.
  name?: string;
  // Output only. Resource name of the Campaign that results from overlaying the draft
  // changes onto the base campaign.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  draftCampaign?: string;
  // Output only. The status of the campaign draft. This field is read-only.
  // When a new campaign draft is added, the status defaults to PROPOSED.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CampaignDraftStatusEnum_CampaignDraftStatus | undefined;
  // Output only. Whether there is an experiment based on this draft currently serving.
  //
  // Behaviors: OUTPUT_ONLY
  hasExperimentRunning?: boolean;
  // Output only. The resource name of the long-running operation that can be used to poll
  // for completion of draft promotion. This is only set if the draft promotion
  // is in progress or finished.
  //
  // Behaviors: OUTPUT_ONLY
  longRunningOperation?: string;
};

// Possible statuses of a campaign draft.
export type googleadsgoogleadsv9enums_CampaignDraftStatusEnum_CampaignDraftStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Initial state of the draft, the advertiser can start adding changes with
  // no effect on serving.
  | "PROPOSED"
  // The campaign draft is removed.
  | "REMOVED"
  // Advertiser requested to promote draft's changes back into the original
  // campaign. Advertiser can poll the long running operation returned by
  // the promote action to see the status of the promotion.
  | "PROMOTING"
  // The process to merge changes in the draft back to the original campaign
  // has completed successfully.
  | "PROMOTED"
  // The promotion failed after it was partially applied. Promote cannot be
  // attempted again safely, so the issue must be corrected in the original
  // campaign.
  | "PROMOTE_FAILED";
// A single operation (create, update, remove) on a campaign extension setting.
export type CampaignExtensionSettingOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new campaign
  // extension setting.
  create?: googleadsgoogleadsv9resources_CampaignExtensionSetting;
  // Update operation: The campaign extension setting is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_CampaignExtensionSetting;
  // Remove operation: A resource name for the removed campaign extension
  // setting is expected, in this format:
  // `customers/{customer_id}/campaignExtensionSettings/{campaign_id}~{extension_type}`
  remove?: string;
};

// A campaign extension setting.
export type googleadsgoogleadsv9resources_CampaignExtensionSetting = {
  // Immutable. The resource name of the campaign extension setting.
  // CampaignExtensionSetting resource names have the form:
  // `customers/{customer_id}/campaignExtensionSettings/{campaign_id}~{extension_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The extension type of the customer extension setting.
  //
  // Behaviors: IMMUTABLE
  extensionType: googleadsgoogleadsv9enums_ExtensionTypeEnum_ExtensionType | undefined;
  // Immutable. The resource name of the campaign. The linked extension feed items will
  // serve under this campaign.
  // Campaign resource names have the form:
  // `customers/{customer_id}/campaigns/{campaign_id}`
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // The resource names of the extension feed items to serve under the campaign.
  // ExtensionFeedItem resource names have the form:
  // `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
  extensionFeedItems: string[] | undefined;
  // The device for which the extensions will serve. Optional.
  device: googleadsgoogleadsv9enums_ExtensionSettingDeviceEnum_ExtensionSettingDevice | undefined;
};

// A single operation (create, update, remove) on a campaign feed.
export type CampaignFeedOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new campaign feed.
  create?: googleadsgoogleadsv9resources_CampaignFeed;
  // Update operation: The campaign feed is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_CampaignFeed;
  // Remove operation: A resource name for the removed campaign feed is
  // expected, in this format:
  // `customers/{customer_id}/campaignFeeds/{campaign_id}~{feed_id}`
  remove?: string;
};

// A campaign feed.
export type googleadsgoogleadsv9resources_CampaignFeed = {
  // Immutable. The resource name of the campaign feed.
  // Campaign feed resource names have the form:
  // `customers/{customer_id}/campaignFeeds/{campaign_id}~{feed_id}
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The feed to which the CampaignFeed belongs.
  //
  // Behaviors: IMMUTABLE
  feed?: string;
  // Immutable. The campaign to which the CampaignFeed belongs.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // Indicates which placeholder types the feed may populate under the connected
  // campaign. Required.
  placeholderTypes: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType[] | undefined;
  // Matching function associated with the CampaignFeed.
  // The matching function is used to filter the set of feed items selected.
  // Required.
  matchingFunction: googleadsgoogleadsv9common_MatchingFunction | undefined;
  // Output only. Status of the campaign feed.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedLinkStatusEnum_FeedLinkStatus | undefined;
};

// A single operation (create, update, remove) on a campaign.
export type CampaignOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new campaign.
  create?: googleadsgoogleadsv9resources_Campaign;
  // Update operation: The campaign is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_Campaign;
  // Remove operation: A resource name for the removed campaign is
  // expected, in this format:
  // `customers/{customer_id}/campaigns/{campaign_id}`
  remove?: string;
};

// A campaign.
export type googleadsgoogleadsv9resources_Campaign = {
  // Immutable. The resource name of the campaign.
  // Campaign resource names have the form:
  // `customers/{customer_id}/campaigns/{campaign_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the campaign.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the campaign.
  // This field is required and should not be empty when creating new
  // campaigns.
  // It must not contain any null (code point 0x0), NL line feed
  // (code point 0xA) or carriage return (code point 0xD) characters.
  name?: string;
  // The status of the campaign.
  // When a new campaign is added, the status defaults to ENABLED.
  status: googleadsgoogleadsv9enums_CampaignStatusEnum_CampaignStatus | undefined;
  // Output only. The ad serving status of the campaign.
  //
  // Behaviors: OUTPUT_ONLY
  servingStatus: googleadsgoogleadsv9enums_CampaignServingStatusEnum_CampaignServingStatus | undefined;
  // The ad serving optimization status of the campaign.
  adServingOptimizationStatus: googleadsgoogleadsv9enums_AdServingOptimizationStatusEnum_AdServingOptimizationStatus | undefined;
  // Immutable. The primary serving target for ads within the campaign.
  // The targeting options can be refined in `network_settings`.
  // This field is required and should not be empty when creating new
  // campaigns.
  // Can be set only when creating campaigns.
  // After the campaign is created, the field can not be changed.
  //
  // Behaviors: IMMUTABLE
  advertisingChannelType: googleadsgoogleadsv9enums_AdvertisingChannelTypeEnum_AdvertisingChannelType | undefined;
  // Immutable. Optional refinement to `advertising_channel_type`.
  // Must be a valid sub-type of the parent channel type.
  // Can be set only when creating campaigns.
  // After campaign is created, the field can not be changed.
  //
  // Behaviors: IMMUTABLE
  advertisingChannelSubType: googleadsgoogleadsv9enums_AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType | undefined;
  // The URL template for constructing a tracking URL.
  trackingUrlTemplate?: string;
  // The list of mappings used to substitute custom parameter tags in a
  // `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // Settings for Real-Time Bidding, a feature only available for campaigns
  // targeting the Ad Exchange network.
  realTimeBiddingSetting: googleadsgoogleadsv9common_RealTimeBiddingSetting | undefined;
  // The network settings for the campaign.
  networkSettings: googleadsgoogleadsv9resources_Campaign_NetworkSettings | undefined;
  // Immutable. The hotel setting for the campaign.
  //
  // Behaviors: IMMUTABLE
  hotelSetting: googleadsgoogleadsv9resources_Campaign_HotelSettingInfo | undefined;
  // The setting for controlling Dynamic Search Ads (DSA).
  dynamicSearchAdsSetting: googleadsgoogleadsv9resources_Campaign_DynamicSearchAdsSetting | undefined;
  // The setting for controlling Shopping campaigns.
  shoppingSetting: googleadsgoogleadsv9resources_Campaign_ShoppingSetting | undefined;
  // Setting for targeting related features.
  targetingSetting: googleadsgoogleadsv9common_TargetingSetting | undefined;
  // The setting for ads geotargeting.
  geoTargetTypeSetting: googleadsgoogleadsv9resources_Campaign_GeoTargetTypeSetting | undefined;
  // The setting for local campaign.
  localCampaignSetting: googleadsgoogleadsv9resources_Campaign_LocalCampaignSetting | undefined;
  // The setting related to App Campaign.
  appCampaignSetting: googleadsgoogleadsv9resources_Campaign_AppCampaignSetting | undefined;
  // Output only. The resource names of labels attached to this campaign.
  //
  // Behaviors: OUTPUT_ONLY
  labels: string[] | undefined;
  // Output only. The type of campaign: normal, draft, or experiment.
  //
  // Behaviors: OUTPUT_ONLY
  experimentType: googleadsgoogleadsv9enums_CampaignExperimentTypeEnum_CampaignExperimentType | undefined;
  // Output only. The resource name of the base campaign of a draft or experiment campaign.
  // For base campaigns, this is equal to `resource_name`.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  baseCampaign?: string;
  // The budget of the campaign.
  campaignBudget?: string;
  // Output only. The type of bidding strategy.
  // A bidding strategy can be created by setting either the bidding scheme to
  // create a standard bidding strategy or the `bidding_strategy` field to
  // create a portfolio bidding strategy.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  biddingStrategyType: googleadsgoogleadsv9enums_BiddingStrategyTypeEnum_BiddingStrategyType | undefined;
  // Output only. Resource name of AccessibleBiddingStrategy, a read-only view of the
  // unrestricted attributes of the attached portfolio bidding
  // strategy identified by 'bidding_strategy'. Empty, if the campaign does not
  // use a portfolio strategy.
  // Unrestricted strategy attributes are available to all customers
  // with whom the strategy is shared and are read from the
  // AccessibleBiddingStrategy resource. In contrast, restricted attributes are
  // only available to the owner customer of the strategy and their managers.
  // Restricted attributes can only be read from the BiddingStrategy resource.
  //
  // Behaviors: OUTPUT_ONLY
  accessibleBiddingStrategy: string | undefined;
  // The date when campaign started.
  startDate?: string;
  // The last day of the campaign.
  endDate?: string;
  // Suffix used to append query parameters to landing pages that are served
  // with parallel tracking.
  finalUrlSuffix?: string;
  // A list that limits how often each user will see this campaign's ads.
  frequencyCaps: googleadsgoogleadsv9common_FrequencyCapEntry[] | undefined;
  // Output only. 3-Tier Brand Safety setting for the campaign.
  //
  // Behaviors: OUTPUT_ONLY
  videoBrandSafetySuitability: googleadsgoogleadsv9enums_BrandSafetySuitabilityEnum_BrandSafetySuitability | undefined;
  // Describes how unbranded pharma ads will be displayed.
  vanityPharma: googleadsgoogleadsv9resources_Campaign_VanityPharma | undefined;
  // Selective optimization setting for this campaign, which includes a set of
  // conversion actions to optimize this campaign towards.
  selectiveOptimization: googleadsgoogleadsv9resources_Campaign_SelectiveOptimization | undefined;
  // Optimization goal setting for this campaign, which includes a set of
  // optimization goal types.
  optimizationGoalSetting: googleadsgoogleadsv9resources_Campaign_OptimizationGoalSetting | undefined;
  // Output only. Campaign-level settings for tracking information.
  //
  // Behaviors: OUTPUT_ONLY
  trackingSetting: googleadsgoogleadsv9resources_Campaign_TrackingSetting | undefined;
  // Payment mode for the campaign.
  paymentMode: googleadsgoogleadsv9enums_PaymentModeEnum_PaymentMode | undefined;
  // Output only. Optimization score of the campaign.
  // Optimization score is an estimate of how well a campaign is set to perform.
  // It ranges from 0% (0.0) to 100% (1.0), with 100% indicating that the
  // campaign is performing at full potential. This field is null for unscored
  // campaigns.
  // See "About optimization score" at
  // https://support.google.com/google-ads/answer/9061546.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  optimizationScore?: number;
  // The asset field types that should be excluded from this campaign. Asset
  // links with these field types will not be inherited by this campaign from
  // the upper level.
  excludedParentAssetFieldTypes: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType[] | undefined;
  // Represents opting out of URL expansion to more targeted URLs. If opted out
  // (true), only the final URLs in the asset group or URLs specified in the
  // advertiser's Google Merchant Center or business data feeds are targeted.
  // If opted in (false), the entire domain will be targeted. This field can
  // only be set for Performance Max campaigns, where the default value is
  // false.
  urlExpansionOptOut?: boolean;
  // Portfolio bidding strategy used by campaign.
  biddingStrategy?: string;
  // Commission is an automatic bidding strategy in which the advertiser pays
  // a certain portion of the conversion value.
  commission?: googleadsgoogleadsv9common_Commission;
  // Standard Manual CPC bidding strategy.
  // Manual click-based bidding where user pays per click.
  manualCpc?: googleadsgoogleadsv9common_ManualCpc;
  // Standard Manual CPM bidding strategy.
  // Manual impression-based bidding where user pays per thousand
  // impressions.
  manualCpm?: googleadsgoogleadsv9common_ManualCpm;
  // Output only. A bidding strategy that pays a configurable amount per video view.
  //
  // Behaviors: OUTPUT_ONLY
  manualCpv?: googleadsgoogleadsv9common_ManualCpv;
  // Standard Maximize Conversions bidding strategy that automatically
  // maximizes number of conversions while spending your budget.
  maximizeConversions?: googleadsgoogleadsv9common_MaximizeConversions;
  // Standard Maximize Conversion Value bidding strategy that automatically
  // sets bids to maximize revenue while spending your budget.
  maximizeConversionValue?: googleadsgoogleadsv9common_MaximizeConversionValue;
  // Standard Target CPA bidding strategy that automatically sets bids to
  // help get as many conversions as possible at the target
  // cost-per-acquisition (CPA) you set.
  targetCpa?: googleadsgoogleadsv9common_TargetCpa;
  // Target Impression Share bidding strategy. An automated bidding strategy
  // that sets bids to achieve a desired percentage of impressions.
  targetImpressionShare?: googleadsgoogleadsv9common_TargetImpressionShare;
  // Standard Target ROAS bidding strategy that automatically maximizes
  // revenue while averaging a specific target return on ad spend (ROAS).
  targetRoas?: googleadsgoogleadsv9common_TargetRoas;
  // Standard Target Spend bidding strategy that automatically sets your bids
  // to help get as many clicks as possible within your budget.
  targetSpend?: googleadsgoogleadsv9common_TargetSpend;
  // Standard Percent Cpc bidding strategy where bids are a fraction of the
  // advertised price for some good or service.
  percentCpc?: googleadsgoogleadsv9common_PercentCpc;
  // A bidding strategy that automatically optimizes cost per thousand
  // impressions.
  targetCpm?: googleadsgoogleadsv9common_TargetCpm;
};

// Possible statuses of a campaign.
export type googleadsgoogleadsv9enums_CampaignStatusEnum_CampaignStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Campaign is currently serving ads depending on budget information.
  | "ENABLED"
  // Campaign has been paused by the user.
  | "PAUSED"
  // Campaign has been removed.
  | "REMOVED";
// Possible serving statuses of a campaign.
export type googleadsgoogleadsv9enums_CampaignServingStatusEnum_CampaignServingStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Serving.
  | "SERVING"
  // None.
  | "NONE"
  // Ended.
  | "ENDED"
  // Pending.
  | "PENDING"
  // Suspended.
  | "SUSPENDED";
// Enum describing possible serving statuses.
export type googleadsgoogleadsv9enums_AdServingOptimizationStatusEnum_AdServingOptimizationStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // Ad serving is optimized based on CTR for the campaign.
  | "OPTIMIZE"
  // Ad serving is optimized based on CTR * Conversion for the campaign. If
  // the campaign is not in the conversion optimizer bidding strategy, it will
  // default to OPTIMIZED.
  | "CONVERSION_OPTIMIZE"
  // Ads are rotated evenly for 90 days, then optimized for clicks.
  | "ROTATE"
  // Show lower performing ads more evenly with higher performing ads, and do
  // not optimize.
  | "ROTATE_INDEFINITELY"
  // Ad serving optimization status is not available.
  | "UNAVAILABLE";
// Enum describing the different channel subtypes.
export type googleadsgoogleadsv9enums_AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType =
  // Not specified.
  | "UNSPECIFIED"
  // Used as a return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Mobile app campaigns for Search.
  | "SEARCH_MOBILE_APP"
  // Mobile app campaigns for Display.
  | "DISPLAY_MOBILE_APP"
  // AdWords express campaigns for search.
  | "SEARCH_EXPRESS"
  // AdWords Express campaigns for display.
  | "DISPLAY_EXPRESS"
  // Smart Shopping campaigns.
  | "SHOPPING_SMART_ADS"
  // Gmail Ad campaigns.
  | "DISPLAY_GMAIL_AD"
  // Smart display campaigns.
  | "DISPLAY_SMART_CAMPAIGN"
  // Video Outstream campaigns.
  | "VIDEO_OUTSTREAM"
  // Video TrueView for Action campaigns.
  | "VIDEO_ACTION"
  // Video campaigns with non-skippable video ads.
  | "VIDEO_NON_SKIPPABLE"
  // App Campaign that allows you to easily promote your Android or iOS app
  // across Google's top properties including Search, Play, YouTube, and the
  // Google Display Network.
  | "APP_CAMPAIGN"
  // App Campaign for engagement, focused on driving re-engagement with the
  // app across several of Google’s top properties including Search, YouTube,
  // and the Google Display Network.
  | "APP_CAMPAIGN_FOR_ENGAGEMENT"
  // Campaigns specialized for local advertising.
  | "LOCAL_CAMPAIGN"
  // Shopping Comparison Listing campaigns.
  | "SHOPPING_COMPARISON_LISTING_ADS"
  // Standard Smart campaigns.
  | "SMART_CAMPAIGN"
  // Video campaigns with sequence video ads.
  | "VIDEO_SEQUENCE"
  // App Campaign for pre registration, specialized for advertising mobile
  // app pre-registration, that targets multiple advertising channels across
  // Google Play, YouTube and Display Network. See
  // https://support.google.com/google-ads/answer/9441344 to learn more.
  | "APP_CAMPAIGN_FOR_PRE_REGISTRATION";
// Settings for Real-Time Bidding, a feature only available for campaigns
// targeting the Ad Exchange network.
export type googleadsgoogleadsv9common_RealTimeBiddingSetting = {
  // Whether the campaign is opted in to real-time bidding.
  optIn?: boolean;
};

// The network settings for the campaign.
export type googleadsgoogleadsv9resources_Campaign_NetworkSettings = {
  // Whether ads will be served with google.com search results.
  targetGoogleSearch?: boolean;
  // Whether ads will be served on partner sites in the Google Search Network
  // (requires `target_google_search` to also be `true`).
  targetSearchNetwork?: boolean;
  // Whether ads will be served on specified placements in the Google Display
  // Network. Placements are specified using the Placement criterion.
  targetContentNetwork?: boolean;
  // Whether ads will be served on the Google Partner Network.
  // This is available only to some select Google partner accounts.
  targetPartnerSearchNetwork?: boolean;
};

// Campaign-level settings for hotel ads.
export type googleadsgoogleadsv9resources_Campaign_HotelSettingInfo = {
  // Immutable. The linked Hotel Center account.
  //
  // Behaviors: IMMUTABLE
  hotelCenterId?: number;
};

// The setting for controlling Dynamic Search Ads (DSA).
export type googleadsgoogleadsv9resources_Campaign_DynamicSearchAdsSetting = {
  // Required. The Internet domain name that this setting represents, e.g., "google.com"
  // or "www.google.com".
  //
  // Behaviors: REQUIRED
  domainName: string | undefined;
  // Required. The language code specifying the language of the domain, e.g., "en".
  //
  // Behaviors: REQUIRED
  languageCode: string | undefined;
  // Whether the campaign uses advertiser supplied URLs exclusively.
  useSuppliedUrlsOnly?: boolean;
  // The list of page feeds associated with the campaign.
  feeds: string[] | undefined;
};

// The setting for Shopping campaigns. Defines the universe of products that
// can be advertised by the campaign, and how this campaign interacts with
// other Shopping campaigns.
export type googleadsgoogleadsv9resources_Campaign_ShoppingSetting = {
  // Immutable. ID of the Merchant Center account.
  // This field is required for create operations. This field is immutable for
  // Shopping campaigns.
  //
  // Behaviors: IMMUTABLE
  merchantId?: number;
  // Sales country of products to include in the campaign.
  // This field is required for Shopping campaigns.
  // This field is optional for non-Shopping campaigns, but it must be equal
  // to 'ZZ' if set.
  salesCountry?: string;
  // Priority of the campaign. Campaigns with numerically higher priorities
  // take precedence over those with lower priorities.
  // This field is required for Shopping campaigns, with values between 0 and
  // 2, inclusive.
  // This field is optional for Smart Shopping campaigns, but must be equal to
  // 3 if set.
  campaignPriority?: number;
  // Whether to include local products.
  enableLocal?: boolean;
};

// Represents a collection of settings related to ads geotargeting.
export type googleadsgoogleadsv9resources_Campaign_GeoTargetTypeSetting = {
  // The setting used for positive geotargeting in this particular campaign.
  positiveGeoTargetType: googleadsgoogleadsv9enums_PositiveGeoTargetTypeEnum_PositiveGeoTargetType | undefined;
  // The setting used for negative geotargeting in this particular campaign.
  negativeGeoTargetType: googleadsgoogleadsv9enums_NegativeGeoTargetTypeEnum_NegativeGeoTargetType | undefined;
};

// The possible positive geo target types.
export type googleadsgoogleadsv9enums_PositiveGeoTargetTypeEnum_PositiveGeoTargetType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Specifies that an ad is triggered if the user is in,
  // or shows interest in, advertiser's targeted locations.
  | "PRESENCE_OR_INTEREST"
  // Specifies that an ad is triggered if the user
  // searches for advertiser's targeted locations.
  // This can only be used with Search and standard
  // Shopping campaigns.
  | "SEARCH_INTEREST"
  // Specifies that an ad is triggered if the user is in
  // or regularly in advertiser's targeted locations.
  | "PRESENCE";
// The possible negative geo target types.
export type googleadsgoogleadsv9enums_NegativeGeoTargetTypeEnum_NegativeGeoTargetType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Specifies that a user is excluded from seeing the ad if they
  // are in, or show interest in, advertiser's excluded locations.
  | "PRESENCE_OR_INTEREST"
  // Specifies that a user is excluded from seeing the ad if they
  // are in advertiser's excluded locations.
  | "PRESENCE";
// Campaign setting for local campaigns.
export type googleadsgoogleadsv9resources_Campaign_LocalCampaignSetting = {
  // The location source type for this local campaign.
  locationSourceType: googleadsgoogleadsv9enums_LocationSourceTypeEnum_LocationSourceType | undefined;
};

// The possible types of a location source.
export type googleadsgoogleadsv9enums_LocationSourceTypeEnum_LocationSourceType =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Locations associated with the customer's linked Business Profile.
  | "GOOGLE_MY_BUSINESS"
  // Affiliate (chain) store locations. For example, Best Buy store locations.
  | "AFFILIATE";
// Campaign-level settings for App Campaigns.
export type googleadsgoogleadsv9resources_Campaign_AppCampaignSetting = {
  // Represents the goal which the bidding strategy of this app campaign
  // should optimize towards.
  biddingStrategyGoalType: googleadsgoogleadsv9enums_AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType | undefined;
  // Immutable. A string that uniquely identifies a mobile application.
  //
  // Behaviors: IMMUTABLE
  appId?: string;
  // Immutable. The application store that distributes this specific app.
  //
  // Behaviors: IMMUTABLE
  appStore: googleadsgoogleadsv9enums_AppCampaignAppStoreEnum_AppCampaignAppStore | undefined;
};

// Goal type of App campaign BiddingStrategy.
export type googleadsgoogleadsv9enums_AppCampaignBiddingStrategyGoalTypeEnum_AppCampaignBiddingStrategyGoalType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Aim to maximize the number of app installs. The cpa bid is the
  // target cost per install.
  | "OPTIMIZE_INSTALLS_TARGET_INSTALL_COST"
  // Aim to maximize the long term number of selected in-app conversions from
  // app installs. The cpa bid is the target cost per install.
  | "OPTIMIZE_IN_APP_CONVERSIONS_TARGET_INSTALL_COST"
  // Aim to maximize the long term number of selected in-app conversions from
  // app installs. The cpa bid is the target cost per in-app conversion. Note
  // that the actual cpa may seem higher than the target cpa at first, since
  // the long term conversions haven’t happened yet.
  | "OPTIMIZE_IN_APP_CONVERSIONS_TARGET_CONVERSION_COST"
  // Aim to maximize all conversions' value, i.e. install + selected in-app
  // conversions while achieving or exceeding target return on advertising
  // spend.
  | "OPTIMIZE_RETURN_ON_ADVERTISING_SPEND"
  // Aim to maximize the pre-registration of the app.
  | "OPTIMIZE_PRE_REGISTRATION_CONVERSION_VOLUME"
  // Aim to maximize installation of the app without target cost-per-install.
  | "OPTIMIZE_INSTALLS_WITHOUT_TARGET_INSTALL_COST";
// Enum describing app campaign app store.
export type googleadsgoogleadsv9enums_AppCampaignAppStoreEnum_AppCampaignAppStore =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Apple app store.
  | "APPLE_APP_STORE"
  // Google play.
  | "GOOGLE_APP_STORE";
// Indicates if this campaign is a normal campaign,
// a draft campaign, or an experiment campaign.
export type googleadsgoogleadsv9enums_CampaignExperimentTypeEnum_CampaignExperimentType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // This is a regular campaign.
  | "BASE"
  // This is a draft version of a campaign.
  // It has some modifications from a base campaign,
  // but it does not serve or accrue metrics.
  | "DRAFT"
  // This is an experiment version of a campaign.
  // It has some modifications from a base campaign,
  // and a percentage of traffic is being diverted
  // from the BASE campaign to this experiment campaign.
  | "EXPERIMENT";
// A rule specifying the maximum number of times an ad (or some set of ads) can
// be shown to a user over a particular time period.
export type googleadsgoogleadsv9common_FrequencyCapEntry = {
  // The key of a particular frequency cap. There can be no more
  // than one frequency cap with the same key.
  key: googleadsgoogleadsv9common_FrequencyCapKey | undefined;
  // Maximum number of events allowed during the time range by this cap.
  cap?: number;
};

// A group of fields used as keys for a frequency cap.
// There can be no more than one frequency cap with the same key.
export type googleadsgoogleadsv9common_FrequencyCapKey = {
  // The level on which the cap is to be applied (e.g. ad group ad, ad group).
  // The cap is applied to all the entities of this level.
  level: googleadsgoogleadsv9enums_FrequencyCapLevelEnum_FrequencyCapLevel | undefined;
  // The type of event that the cap applies to (e.g. impression).
  eventType: googleadsgoogleadsv9enums_FrequencyCapEventTypeEnum_FrequencyCapEventType | undefined;
  // Unit of time the cap is defined at (e.g. day, week).
  timeUnit: googleadsgoogleadsv9enums_FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit | undefined;
  // Number of time units the cap lasts.
  timeLength?: number;
};

// The level on which the cap is to be applied (e.g ad group ad, ad group).
// Cap is applied to all the resources of this level.
export type googleadsgoogleadsv9enums_FrequencyCapLevelEnum_FrequencyCapLevel =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The cap is applied at the ad group ad level.
  | "AD_GROUP_AD"
  // The cap is applied at the ad group level.
  | "AD_GROUP"
  // The cap is applied at the campaign level.
  | "CAMPAIGN";
// The type of event that the cap applies to (e.g. impression).
export type googleadsgoogleadsv9enums_FrequencyCapEventTypeEnum_FrequencyCapEventType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The cap applies on ad impressions.
  | "IMPRESSION"
  // The cap applies on video ad views.
  | "VIDEO_VIEW";
// Unit of time the cap is defined at (e.g. day, week).
export type googleadsgoogleadsv9enums_FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The cap would define limit per one day.
  | "DAY"
  // The cap would define limit per one week.
  | "WEEK"
  // The cap would define limit per one month.
  | "MONTH";
// 3-Tier brand safety suitability control.
export type googleadsgoogleadsv9enums_BrandSafetySuitabilityEnum_BrandSafetySuitability =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // This option lets you show ads across all inventory on YouTube and video
  // partners that meet our standards for monetization. This option may be an
  // appropriate choice for brands that want maximum access to the full
  // breadth of videos eligible for ads, including, for example, videos that
  // have strong profanity in the context of comedy or a documentary, or
  // excessive violence as featured in video games.
  | "EXPANDED_INVENTORY"
  // This option lets you show ads across a wide range of content that's
  // appropriate for most brands, such as popular music videos, documentaries,
  // and movie trailers. The content you can show ads on is based on YouTube's
  // advertiser-friendly content guidelines that take into account, for
  // example, the strength or frequency of profanity, or the appropriateness
  // of subject matter like sensitive events. Ads won't show, for example, on
  // content with repeated strong profanity, strong sexual content, or graphic
  // violence.
  | "STANDARD_INVENTORY"
  // This option lets you show ads on a reduced range of content that's
  // appropriate for brands with particularly strict guidelines around
  // inappropriate language and sexual suggestiveness; above and beyond what
  // YouTube's advertiser-friendly content guidelines address. The videos
  // accessible in this sensitive category meet heightened requirements,
  // especially for inappropriate language and sexual suggestiveness. For
  // example, your ads will be excluded from showing on some of YouTube's most
  // popular music videos and other pop culture content across YouTube and
  // Google video partners.
  | "LIMITED_INVENTORY";
// Describes how unbranded pharma ads will be displayed.
export type googleadsgoogleadsv9resources_Campaign_VanityPharma = {
  // The display mode for vanity pharma URLs.
  vanityPharmaDisplayUrlMode: googleadsgoogleadsv9enums_VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode | undefined;
  // The text that will be displayed in display URL of the text ad when
  // website description is the selected display mode for vanity pharma URLs.
  vanityPharmaText: googleadsgoogleadsv9enums_VanityPharmaTextEnum_VanityPharmaText | undefined;
};

// Enum describing possible display modes for vanity pharma URLs.
export type googleadsgoogleadsv9enums_VanityPharmaDisplayUrlModeEnum_VanityPharmaDisplayUrlMode =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Replace vanity pharma URL with manufacturer website url.
  | "MANUFACTURER_WEBSITE_URL"
  // Replace vanity pharma URL with description of the website.
  | "WEBSITE_DESCRIPTION";
// Enum describing possible text.
export type googleadsgoogleadsv9enums_VanityPharmaTextEnum_VanityPharmaText =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Prescription treatment website with website content in English.
  | "PRESCRIPTION_TREATMENT_WEBSITE_EN"
  // Prescription treatment website with website content in Spanish
  // (Sitio de tratamientos con receta).
  | "PRESCRIPTION_TREATMENT_WEBSITE_ES"
  // Prescription device website with website content in English.
  | "PRESCRIPTION_DEVICE_WEBSITE_EN"
  // Prescription device website with website content in Spanish (Sitio de
  // dispositivos con receta).
  | "PRESCRIPTION_DEVICE_WEBSITE_ES"
  // Medical device website with website content in English.
  | "MEDICAL_DEVICE_WEBSITE_EN"
  // Medical device website with website content in Spanish (Sitio de
  // dispositivos médicos).
  | "MEDICAL_DEVICE_WEBSITE_ES"
  // Preventative treatment website with website content in English.
  | "PREVENTATIVE_TREATMENT_WEBSITE_EN"
  // Preventative treatment website with website content in Spanish (Sitio de
  // tratamientos preventivos).
  | "PREVENTATIVE_TREATMENT_WEBSITE_ES"
  // Prescription contraception website with website content in English.
  | "PRESCRIPTION_CONTRACEPTION_WEBSITE_EN"
  // Prescription contraception website with website content in Spanish (Sitio
  // de anticonceptivos con receta).
  | "PRESCRIPTION_CONTRACEPTION_WEBSITE_ES"
  // Prescription vaccine website with website content in English.
  | "PRESCRIPTION_VACCINE_WEBSITE_EN"
  // Prescription vaccine website with website content in Spanish (Sitio de
  // vacunas con receta).
  | "PRESCRIPTION_VACCINE_WEBSITE_ES";
// Selective optimization setting for this campaign, which includes a set of
// conversion actions to optimize this campaign towards.
export type googleadsgoogleadsv9resources_Campaign_SelectiveOptimization = {
  // The selected set of conversion actions for optimizing this campaign.
  conversionActions: string[] | undefined;
};

// Optimization goal setting for this campaign, which includes a set of
// optimization goal types.
export type googleadsgoogleadsv9resources_Campaign_OptimizationGoalSetting = {
  // The list of optimization goal types.
  optimizationGoalTypes: googleadsgoogleadsv9enums_OptimizationGoalTypeEnum_OptimizationGoalType[] | undefined;
};

// The type of optimization goal
export type googleadsgoogleadsv9enums_OptimizationGoalTypeEnum_OptimizationGoalType =
  // Not specified.
  | "UNSPECIFIED"
  // Used as a return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Optimize for call clicks. Call click conversions are times people
  // selected 'Call' to contact a store after viewing an ad.
  | "CALL_CLICKS"
  // Optimize for driving directions. Driving directions conversions are
  // times people selected 'Get directions' to navigate to a store after
  // viewing an ad.
  | "DRIVING_DIRECTIONS"
  // Optimize for pre-registration. Pre-registration conversions are the
  // number of pre-registration signups to receive a notification when the app
  // is released.
  | "APP_PRE_REGISTRATION";
// Campaign-level settings for tracking information.
export type googleadsgoogleadsv9resources_Campaign_TrackingSetting = {
  // Output only. The url used for dynamic tracking.
  //
  // Behaviors: OUTPUT_ONLY
  trackingUrl?: string;
};

// Enum describing possible payment modes.
export type googleadsgoogleadsv9enums_PaymentModeEnum_PaymentMode =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Pay per click.
  | "CLICKS"
  // Pay per conversion value. This mode is only supported by campaigns with
  // AdvertisingChannelType.HOTEL, BiddingStrategyType.COMMISSION, and
  // BudgetType.HOTEL_ADS_COMMISSION.
  | "CONVERSION_VALUE"
  // Pay per conversion. This mode is only supported by campaigns with
  // AdvertisingChannelType.DISPLAY (excluding
  // AdvertisingChannelSubType.DISPLAY_GMAIL), BiddingStrategyType.TARGET_CPA,
  // and BudgetType.FIXED_CPA. The customer must also be eligible for this
  // mode. See Customer.eligibility_failure_reasons for details.
  | "CONVERSIONS"
  // Pay per guest stay value. This mode is only supported by campaigns with
  // AdvertisingChannelType.HOTEL, BiddingStrategyType.COMMISSION, and
  // BudgetType.STANDARD.
  | "GUEST_STAY";
// Commission is an automatic bidding strategy in which the advertiser pays a
// certain portion of the conversion value.
export type googleadsgoogleadsv9common_Commission = {
  // Commission rate defines the portion of the conversion value that the
  // advertiser will be billed. A commission rate of x should be passed into
  // this field as (x * 1,000,000). For example, 106,000 represents a commission
  // rate of 0.106 (10.6%).
  commissionRateMicros?: number;
};

// Manual click-based bidding where user pays per click.
export type googleadsgoogleadsv9common_ManualCpc = {
  // Whether bids are to be enhanced based on conversion optimizer data.
  enhancedCpcEnabled?: boolean;
};

// Manual impression-based bidding where user pays per thousand impressions.
export type googleadsgoogleadsv9common_ManualCpm = {
};

// View based bidding where user pays per video view.
export type googleadsgoogleadsv9common_ManualCpv = {
};

// A bidding strategy where bids are a fraction of the advertised price for
// some good or service.
export type googleadsgoogleadsv9common_PercentCpc = {
  // Maximum bid limit that can be set by the bid strategy. This is
  // an optional field entered by the advertiser and specified in local micros.
  // Note: A zero value is interpreted in the same way as having bid_ceiling
  // undefined.
  cpcBidCeilingMicros?: number;
  // Adjusts the bid for each auction upward or downward, depending on the
  // likelihood of a conversion. Individual bids may exceed
  // cpc_bid_ceiling_micros, but the average bid amount for a campaign should
  // not.
  enhancedCpcEnabled?: boolean;
};

// Target CPM (cost per thousand impressions) is an automated bidding strategy
// that sets bids to optimize performance given the target CPM you set.
export type googleadsgoogleadsv9common_TargetCpm = {
};

// A single operation (create, update) on a conversion custom variable.
export type ConversionCustomVariableOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new conversion
  // custom variable.
  create?: googleadsgoogleadsv9resources_ConversionCustomVariable;
  // Update operation: The conversion custom variable is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_ConversionCustomVariable;
};

// A conversion custom variable
// See "About custom variables for conversions" at
// https://support.google.com/google-ads/answer/9964350
export type googleadsgoogleadsv9resources_ConversionCustomVariable = {
  // Immutable. The resource name of the conversion custom variable.
  // Conversion custom variable resource names have the form:
  // `customers/{customer_id}/conversionCustomVariables/{conversion_custom_variable_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the conversion custom variable.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Required. The name of the conversion custom variable.
  // Name should be unique. The maximum length of name is 100 characters.
  // There should not be any extra spaces before and after.
  //
  // Behaviors: REQUIRED
  name: string | undefined;
  // Required. Immutable. The tag of the conversion custom variable. It is used in the event snippet
  // and sent to Google Ads along with conversion pings. For conversion uploads
  // in Google Ads API, the resource name of the conversion custom variable is
  // used.
  // Tag should be unique. The maximum size of tag is 100 bytes.
  // There should not be any extra spaces before and after.
  // Currently only lowercase letters, numbers and underscores are allowed in
  // the tag.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  tag: string | undefined;
  // The status of the conversion custom variable for conversion event accrual.
  status: googleadsgoogleadsv9enums_ConversionCustomVariableStatusEnum_ConversionCustomVariableStatus | undefined;
  // Output only. The resource name of the customer that owns the conversion custom variable.
  //
  // Behaviors: OUTPUT_ONLY
  ownerCustomer: string | undefined;
};

// Possible statuses of a conversion custom variable.
export type googleadsgoogleadsv9enums_ConversionCustomVariableStatusEnum_ConversionCustomVariableStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The conversion custom variable is pending activation and will not
  // accrue stats until set to ENABLED.
  // This status can't be used in CREATE and UPDATE requests.
  | "ACTIVATION_NEEDED"
  // The conversion custom variable is enabled and will accrue stats.
  | "ENABLED"
  // The conversion custom variable is paused and will not accrue stats
  // until set to ENABLED again.
  | "PAUSED";
// A single operation (create, update, remove) on a conversion value rule.
export type ConversionValueRuleOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new conversion
  // value rule.
  create?: googleadsgoogleadsv9resources_ConversionValueRule;
  // Update operation: The conversion value rule is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_ConversionValueRule;
  // Remove operation: A resource name for the removed conversion value rule
  // is expected, in this format:
  // `customers/{customer_id}/conversionValueRules/{conversion_value_rule_id}`
  remove?: string;
};

// A conversion value rule
export type googleadsgoogleadsv9resources_ConversionValueRule = {
  // Immutable. The resource name of the conversion value rule.
  // Conversion value rule resource names have the form:
  // `customers/{customer_id}/conversionValueRules/{conversion_value_rule_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the conversion value rule.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Action applied when the rule is triggered.
  action: googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleAction | undefined;
  // Condition for Geo location that must be satisfied for the value rule to
  // apply.
  geoLocationCondition: googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleGeoLocationCondition | undefined;
  // Condition for device type that must be satisfied for the value rule to
  // apply.
  deviceCondition: googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleDeviceCondition | undefined;
  // Condition for audience that must be satisfied for the value rule to apply.
  audienceCondition: googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleAudienceCondition | undefined;
  // Output only. The resource name of the conversion value rule's owner customer.
  // When the value rule is inherited from a manager
  // customer, owner_customer will be the resource name of the manager whereas
  // the customer in the resource_name will be of the requesting serving
  // customer.
  // ** Read-only **
  //
  // Behaviors: OUTPUT_ONLY
  ownerCustomer: string | undefined;
  // The status of the conversion value rule.
  status: googleadsgoogleadsv9enums_ConversionValueRuleStatusEnum_ConversionValueRuleStatus | undefined;
};

// Action applied when rule is applied.
export type googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleAction = {
  // Specifies applied operation.
  operation: googleadsgoogleadsv9enums_ValueRuleOperationEnum_ValueRuleOperation | undefined;
  // Specifies applied value.
  value: number | undefined;
};

// Possible operations of the action of a conversion value rule.
export type googleadsgoogleadsv9enums_ValueRuleOperationEnum_ValueRuleOperation =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Add provided value to conversion value.
  | "ADD"
  // Multiply conversion value by provided value.
  | "MULTIPLY"
  // Set conversion value to provided value.
  | "SET";
// Condition on Geo dimension.
export type googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleGeoLocationCondition = {
  // Geo locations that advertisers want to exclude.
  excludedGeoTargetConstants: string[] | undefined;
  // Excluded Geo location match type.
  excludedGeoMatchType: googleadsgoogleadsv9enums_ValueRuleGeoLocationMatchTypeEnum_ValueRuleGeoLocationMatchType | undefined;
  // Geo locations that advertisers want to include.
  geoTargetConstants: string[] | undefined;
  // Included Geo location match type.
  geoMatchType: googleadsgoogleadsv9enums_ValueRuleGeoLocationMatchTypeEnum_ValueRuleGeoLocationMatchType | undefined;
};

// Possible geographic location matching types.
export type googleadsgoogleadsv9enums_ValueRuleGeoLocationMatchTypeEnum_ValueRuleGeoLocationMatchType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Either Area of Interest or Location of Presence can be used to match.
  | "ANY"
  // Only Location of Presence can be used to match.
  | "LOCATION_OF_PRESENCE";
// Condition on Device dimension.
export type googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleDeviceCondition = {
  // Value for device type condition.
  deviceTypes: googleadsgoogleadsv9enums_ValueRuleDeviceTypeEnum_ValueRuleDeviceType[] | undefined;
};

// Possible device types used in conversion value rule.
export type googleadsgoogleadsv9enums_ValueRuleDeviceTypeEnum_ValueRuleDeviceType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Mobile device.
  | "MOBILE"
  // Desktop device.
  | "DESKTOP"
  // Tablet device.
  | "TABLET";
// Condition on Audience dimension.
export type googleadsgoogleadsv9resources_ConversionValueRule_ValueRuleAudienceCondition = {
  // User Lists.
  userLists: string[] | undefined;
  // User Interests.
  userInterests: string[] | undefined;
};

// Possible statuses of a conversion value rule.
export type googleadsgoogleadsv9enums_ConversionValueRuleStatusEnum_ConversionValueRuleStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conversion Value Rule is enabled and can be applied.
  | "ENABLED"
  // Conversion Value Rule is permanently deleted and can't be applied.
  | "REMOVED"
  // Conversion Value Rule is paused, but can be re-enabled.
  | "PAUSED";
// A single operation (create, update, remove) on a customer asset.
export type CustomerAssetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new customer
  // asset.
  create?: googleadsgoogleadsv9resources_CustomerAsset;
  // Update operation: The customer asset is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_CustomerAsset;
  // Remove operation: A resource name for the removed customer asset is
  // expected, in this format:
  // `customers/{customer_id}/customerAssets/{asset_id}~{field_type}`
  remove?: string;
};

// A link between a customer and an asset.
export type googleadsgoogleadsv9resources_CustomerAsset = {
  // Immutable. The resource name of the customer asset.
  // CustomerAsset resource names have the form:
  // `customers/{customer_id}/customerAssets/{asset_id}~{field_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Required. Immutable. The asset which is linked to the customer.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  asset: string | undefined;
  // Required. Immutable. Role that the asset takes for the customer link.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  fieldType: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType | undefined;
  // Status of the customer asset.
  status: googleadsgoogleadsv9enums_AssetLinkStatusEnum_AssetLinkStatus | undefined;
};

// A single operation (create, remove) on an customizer attribute.
export type CustomerCustomizerOperation = {
  // Create operation: No resource name is expected for the new customer
  // customizer
  create?: googleadsgoogleadsv9resources_CustomerCustomizer;
  // Remove operation: A resource name for the removed customer customizer is
  // expected, in this format:
  // `customers/{customer_id}/customerCustomizers/{customizer_attribute_id}`
  remove?: string;
};

// A customizer value for the associated CustomizerAttribute at the Customer
// level.
export type googleadsgoogleadsv9resources_CustomerCustomizer = {
  // Immutable. The resource name of the customer customizer.
  // Customer customizer resource names have the form:
  // `customers/{customer_id}/customerCustomizers/{customizer_attribute_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Required. Immutable. The customizer attribute which is linked to the customer.
  //
  // Behaviors: REQUIRED, IMMUTABLE
  customizerAttribute: string | undefined;
  // Output only. The status of the customer customizer attribute.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CustomizerValueStatusEnum_CustomizerValueStatus | undefined;
  // Required. The value to associate with the customizer attribute at this level. The
  // value must be of the type specified for the CustomizerAttribute.
  //
  // Behaviors: REQUIRED
  value: googleadsgoogleadsv9common_CustomizerValue | undefined;
};

// A single operation (create, update, remove) on a customer extension setting.
export type CustomerExtensionSettingOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new customer
  // extension setting.
  create?: googleadsgoogleadsv9resources_CustomerExtensionSetting;
  // Update operation: The customer extension setting is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_CustomerExtensionSetting;
  // Remove operation: A resource name for the removed customer extension
  // setting is expected, in this format:
  // `customers/{customer_id}/customerExtensionSettings/{extension_type}`
  remove?: string;
};

// A customer extension setting.
export type googleadsgoogleadsv9resources_CustomerExtensionSetting = {
  // Immutable. The resource name of the customer extension setting.
  // CustomerExtensionSetting resource names have the form:
  // `customers/{customer_id}/customerExtensionSettings/{extension_type}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The extension type of the customer extension setting.
  //
  // Behaviors: IMMUTABLE
  extensionType: googleadsgoogleadsv9enums_ExtensionTypeEnum_ExtensionType | undefined;
  // The resource names of the extension feed items to serve under the customer.
  // ExtensionFeedItem resource names have the form:
  // `customers/{customer_id}/extensionFeedItems/{feed_item_id}`
  extensionFeedItems: string[] | undefined;
  // The device for which the extensions will serve. Optional.
  device: googleadsgoogleadsv9enums_ExtensionSettingDeviceEnum_ExtensionSettingDevice | undefined;
};

// A single operation (create or remove) on a customer level negative criterion.
export type CustomerNegativeCriterionOperation = {
  // Create operation: No resource name is expected for the new criterion.
  create?: googleadsgoogleadsv9resources_CustomerNegativeCriterion;
  // Remove operation: A resource name for the removed criterion is expected,
  // in this format:
  // `customers/{customer_id}/customerNegativeCriteria/{criterion_id}`
  remove?: string;
};

// A negative criterion for exclusions at the customer level.
export type googleadsgoogleadsv9resources_CustomerNegativeCriterion = {
  // Immutable. The resource name of the customer negative criterion.
  // Customer negative criterion resource names have the form:
  // `customers/{customer_id}/customerNegativeCriteria/{criterion_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The type of the criterion.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_CriterionTypeEnum_CriterionType | undefined;
  // Immutable. ContentLabel.
  //
  // Behaviors: IMMUTABLE
  contentLabel?: googleadsgoogleadsv9common_ContentLabelInfo;
  // Immutable. MobileApplication.
  //
  // Behaviors: IMMUTABLE
  mobileApplication?: googleadsgoogleadsv9common_MobileApplicationInfo;
  // Immutable. MobileAppCategory.
  //
  // Behaviors: IMMUTABLE
  mobileAppCategory?: googleadsgoogleadsv9common_MobileAppCategoryInfo;
  // Immutable. Placement.
  //
  // Behaviors: IMMUTABLE
  placement?: googleadsgoogleadsv9common_PlacementInfo;
  // Immutable. YouTube Video.
  //
  // Behaviors: IMMUTABLE
  youtubeVideo?: googleadsgoogleadsv9common_YouTubeVideoInfo;
  // Immutable. YouTube Channel.
  //
  // Behaviors: IMMUTABLE
  youtubeChannel?: googleadsgoogleadsv9common_YouTubeChannelInfo;
};

// A single operation (create, remove) on an customizer attribute.
export type CustomizerAttributeOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new customizer
  // attribute
  create?: googleadsgoogleadsv9resources_CustomizerAttribute;
  // Remove operation: A resource name for the removed customizer attribute is
  // expected, in this format:
  // `customers/{customer_id}/customizerAttributes/{customizer_attribute_id}`
  remove?: string;
};

// A customizer attribute.
// Use CustomerCustomizer, CampaignCustomizer, AdGroupCustomizer, or
// AdGroupCriterionCustomizer to associate a customizer attribute and
// set its value at the customer, campaign, ad group, or ad group criterion
// level, respectively.
export type googleadsgoogleadsv9resources_CustomizerAttribute = {
  // Immutable. The resource name of the customizer attribute.
  // Customizer Attribute resource names have the form:
  // `customers/{customer_id}/customizerAttributes/{customizer_attribute_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the customizer attribute.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Required. Immutable. Name of the customizer attribute. Required. It must have a minimum length
  // of 1 and maximum length of 40. Name of an enabled customizer attribute must
  // be unique (case insensitive).
  //
  // Behaviors: REQUIRED, IMMUTABLE
  name: string | undefined;
  // Immutable. The type of the customizer attribute.
  //
  // Behaviors: IMMUTABLE
  type: googleadsgoogleadsv9enums_CustomizerAttributeTypeEnum_CustomizerAttributeType | undefined;
  // Output only. The status of the customizer attribute.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CustomizerAttributeStatusEnum_CustomizerAttributeStatus | undefined;
};

// The possible statuses of a customizer attribute.
export type googleadsgoogleadsv9enums_CustomizerAttributeStatusEnum_CustomizerAttributeStatus =
  // The status has not been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  | "UNKNOWN"
  // The customizer attribute is enabled.
  | "ENABLED"
  // The customizer attribute is removed.
  | "REMOVED";
// A single operation (create, update, remove) on an feed item.
export type FeedItemOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new feed item.
  create?: googleadsgoogleadsv9resources_FeedItem;
  // Update operation: The feed item is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_FeedItem;
  // Remove operation: A resource name for the removed feed item is
  // expected, in this format:
  // `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}`
  remove?: string;
};

// A feed item.
export type googleadsgoogleadsv9resources_FeedItem = {
  // Immutable. The resource name of the feed item.
  // Feed item resource names have the form:
  // `customers/{customer_id}/feedItems/{feed_id}~{feed_item_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The feed to which this feed item belongs.
  //
  // Behaviors: IMMUTABLE
  feed?: string;
  // Output only. The ID of this feed item.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Start time in which this feed item is effective and can begin serving. The
  // time is in the customer's time zone.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  startDateTime?: string;
  // End time in which this feed item is no longer effective and will stop
  // serving. The time is in the customer's time zone.
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  endDateTime?: string;
  // The feed item's attribute values.
  attributeValues: googleadsgoogleadsv9resources_FeedItemAttributeValue[] | undefined;
  // Geo targeting restriction specifies the type of location that can be used
  // for targeting.
  geoTargetingRestriction: googleadsgoogleadsv9enums_GeoTargetingRestrictionEnum_GeoTargetingRestriction | undefined;
  // The list of mappings used to substitute custom parameter tags in a
  // `tracking_url_template`, `final_urls`, or `mobile_final_urls`.
  urlCustomParameters: googleadsgoogleadsv9common_CustomParameter[] | undefined;
  // Output only. Status of the feed item.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedItemStatusEnum_FeedItemStatus | undefined;
  // Output only. List of info about a feed item's validation and approval state for active
  // feed mappings. There will be an entry in the list for each type of feed
  // mapping associated with the feed, e.g. a feed with a sitelink and a call
  // feed mapping would cause every feed item associated with that feed to have
  // an entry in this list for both sitelink and call.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  policyInfos: googleadsgoogleadsv9resources_FeedItemPlaceholderPolicyInfo[] | undefined;
};

// A feed item attribute value.
export type googleadsgoogleadsv9resources_FeedItemAttributeValue = {
  // Id of the feed attribute for which the value is associated with.
  feedAttributeId?: number;
  // Int64 value. Should be set if feed_attribute_id refers to a feed attribute
  // of type INT64.
  integerValue?: number;
  // Bool value. Should be set if feed_attribute_id refers to a feed attribute
  // of type BOOLEAN.
  booleanValue?: boolean;
  // String value. Should be set if feed_attribute_id refers to a feed attribute
  // of type STRING, URL or DATE_TIME.
  // For STRING the maximum length is 1500 characters. For URL the maximum
  // length is 2076 characters. For DATE_TIME the string must be in the format
  // "YYYYMMDD HHMMSS".
  stringValue?: string;
  // Double value. Should be set if feed_attribute_id refers to a feed attribute
  // of type DOUBLE.
  doubleValue?: number;
  // Price value. Should be set if feed_attribute_id refers to a feed attribute
  // of type PRICE.
  priceValue: googleadsgoogleadsv9common_Money | undefined;
  // Repeated int64 value. Should be set if feed_attribute_id refers to a feed
  // attribute of type INT64_LIST.
  integerValues: number[] | undefined;
  // Repeated bool value. Should be set if feed_attribute_id refers to a feed
  // attribute of type BOOLEAN_LIST.
  booleanValues: boolean[] | undefined;
  // Repeated string value. Should be set if feed_attribute_id refers to a feed
  // attribute of type STRING_LIST, URL_LIST or DATE_TIME_LIST.
  // For STRING_LIST and URL_LIST the total size of the list in bytes may not
  // exceed 3000. For DATE_TIME_LIST the number of elements may not exceed 200.
  // For STRING_LIST the maximum length of each string element is 1500
  // characters. For URL_LIST the maximum length is 2076 characters. For
  // DATE_TIME the format of the string must be the same as start and end time
  // for the feed item.
  stringValues: string[] | undefined;
  // Repeated double value. Should be set if feed_attribute_id refers to a feed
  // attribute of type DOUBLE_LIST.
  doubleValues: number[] | undefined;
};

// A restriction used to determine if the request context's
// geo should be matched.
export type googleadsgoogleadsv9enums_GeoTargetingRestrictionEnum_GeoTargetingRestriction =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Indicates that request context should match the physical location of
  // the user.
  | "LOCATION_OF_PRESENCE";
// Policy, validation, and quality approval info for a feed item for the
// specified placeholder type.
export type googleadsgoogleadsv9resources_FeedItemPlaceholderPolicyInfo = {
  // Output only. The placeholder type.
  //
  // Behaviors: OUTPUT_ONLY
  placeholderTypeEnum: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType | undefined;
  // Output only. The FeedMapping that contains the placeholder type.
  //
  // Behaviors: OUTPUT_ONLY
  feedMappingResourceName?: string;
  // Output only. Where the placeholder type is in the review process.
  //
  // Behaviors: OUTPUT_ONLY
  reviewStatus: googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus | undefined;
  // Output only. The overall approval status of the placeholder type, calculated based on
  // the status of its individual policy topic entries.
  //
  // Behaviors: OUTPUT_ONLY
  approvalStatus: googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus | undefined;
  // Output only. The list of policy findings for the placeholder type.
  //
  // Behaviors: OUTPUT_ONLY
  policyTopicEntries: googleadsgoogleadsv9common_PolicyTopicEntry[] | undefined;
  // Output only. The validation status of the palceholder type.
  //
  // Behaviors: OUTPUT_ONLY
  validationStatus: googleadsgoogleadsv9enums_FeedItemValidationStatusEnum_FeedItemValidationStatus | undefined;
  // Output only. List of placeholder type validation errors.
  //
  // Behaviors: OUTPUT_ONLY
  validationErrors: googleadsgoogleadsv9resources_FeedItemValidationError[] | undefined;
  // Output only. Placeholder type quality evaluation approval status.
  //
  // Behaviors: OUTPUT_ONLY
  qualityApprovalStatus: googleadsgoogleadsv9enums_FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus | undefined;
  // Output only. List of placeholder type quality evaluation disapproval reasons.
  //
  // Behaviors: OUTPUT_ONLY
  qualityDisapprovalReasons: googleadsgoogleadsv9enums_FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason[] | undefined;
};

// The possible validation statuses of a feed item.
export type googleadsgoogleadsv9enums_FeedItemValidationStatusEnum_FeedItemValidationStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Validation pending.
  | "PENDING"
  // An error was found.
  | "INVALID"
  // Feed item is semantically well-formed.
  | "VALID";
// Stores a validation error and the set of offending feed attributes which
// together are responsible for causing a feed item validation error.
export type googleadsgoogleadsv9resources_FeedItemValidationError = {
  // Output only. Error code indicating what validation error was triggered. The description
  // of the error can be found in the 'description' field.
  //
  // Behaviors: OUTPUT_ONLY
  validationError: googleadsgoogleadsv9errors_FeedItemValidationErrorEnum_FeedItemValidationError | undefined;
  // Output only. The description of the validation error.
  //
  // Behaviors: OUTPUT_ONLY
  description?: string;
  // Output only. Set of feed attributes in the feed item flagged during validation. If
  // empty, no specific feed attributes can be associated with the error
  // (e.g. error across the entire feed item).
  //
  // Behaviors: OUTPUT_ONLY
  feedAttributeIds: number[] | undefined;
  // Output only. Any extra information related to this error which is not captured by
  // validation_error and feed_attribute_id (e.g. placeholder field IDs when
  // feed_attribute_id is not mapped). Note that extra_info is not localized.
  //
  // Behaviors: OUTPUT_ONLY
  extraInfo?: string;
};

// The possible validation errors of a feed item.
export type googleadsgoogleadsv9errors_FeedItemValidationErrorEnum_FeedItemValidationError =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // String is too short.
  | "STRING_TOO_SHORT"
  // String is too long.
  | "STRING_TOO_LONG"
  // Value is not provided.
  | "VALUE_NOT_SPECIFIED"
  // Phone number format is invalid for region.
  | "INVALID_DOMESTIC_PHONE_NUMBER_FORMAT"
  // String does not represent a phone number.
  | "INVALID_PHONE_NUMBER"
  // Phone number format is not compatible with country code.
  | "PHONE_NUMBER_NOT_SUPPORTED_FOR_COUNTRY"
  // Premium rate number is not allowed.
  | "PREMIUM_RATE_NUMBER_NOT_ALLOWED"
  // Phone number type is not allowed.
  | "DISALLOWED_NUMBER_TYPE"
  // Specified value is outside of the valid range.
  | "VALUE_OUT_OF_RANGE"
  // Call tracking is not supported in the selected country.
  | "CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY"
  // Customer is not on the allow-list for call tracking.
  | "CUSTOMER_NOT_IN_ALLOWLIST_FOR_CALLTRACKING"
  // Country code is invalid.
  | "INVALID_COUNTRY_CODE"
  // The specified mobile app id is invalid.
  | "INVALID_APP_ID"
  // Some required field attributes are missing.
  | "MISSING_ATTRIBUTES_FOR_FIELDS"
  // Invalid email button type for email extension.
  | "INVALID_TYPE_ID"
  // Email address is invalid.
  | "INVALID_EMAIL_ADDRESS"
  // The HTTPS URL in email extension is invalid.
  | "INVALID_HTTPS_URL"
  // Delivery address is missing from email extension.
  | "MISSING_DELIVERY_ADDRESS"
  // FeedItem scheduling start date comes after end date.
  | "START_DATE_AFTER_END_DATE"
  // FeedItem scheduling start time is missing.
  | "MISSING_FEED_ITEM_START_TIME"
  // FeedItem scheduling end time is missing.
  | "MISSING_FEED_ITEM_END_TIME"
  // Cannot compute system attributes on a FeedItem that has no FeedItemId.
  | "MISSING_FEED_ITEM_ID"
  // Call extension vanity phone numbers are not supported.
  | "VANITY_PHONE_NUMBER_NOT_ALLOWED"
  // Invalid review text.
  | "INVALID_REVIEW_EXTENSION_SNIPPET"
  // Invalid format for numeric value in ad parameter.
  | "INVALID_NUMBER_FORMAT"
  // Invalid format for date value in ad parameter.
  | "INVALID_DATE_FORMAT"
  // Invalid format for price value in ad parameter.
  | "INVALID_PRICE_FORMAT"
  // Unrecognized type given for value in ad parameter.
  | "UNKNOWN_PLACEHOLDER_FIELD"
  // Enhanced sitelinks must have both description lines specified.
  | "MISSING_ENHANCED_SITELINK_DESCRIPTION_LINE"
  // Review source is ineligible.
  | "REVIEW_EXTENSION_SOURCE_INELIGIBLE"
  // Review text cannot contain hyphens or dashes.
  | "HYPHENS_IN_REVIEW_EXTENSION_SNIPPET"
  // Review text cannot contain double quote characters.
  | "DOUBLE_QUOTES_IN_REVIEW_EXTENSION_SNIPPET"
  // Review text cannot contain quote characters.
  | "QUOTES_IN_REVIEW_EXTENSION_SNIPPET"
  // Parameters are encoded in the wrong format.
  | "INVALID_FORM_ENCODED_PARAMS"
  // URL parameter name must contain only letters, numbers, underscores, and
  // dashes.
  | "INVALID_URL_PARAMETER_NAME"
  // Cannot find address location.
  | "NO_GEOCODING_RESULT"
  // Review extension text has source name.
  | "SOURCE_NAME_IN_REVIEW_EXTENSION_TEXT"
  // Some phone numbers can be shorter than usual. Some of these short numbers
  // are carrier-specific, and we disallow those in ad extensions because they
  // will not be available to all users.
  | "CARRIER_SPECIFIC_SHORT_NUMBER_NOT_ALLOWED"
  // Triggered when a request references a placeholder field id that does not
  // exist.
  | "INVALID_PLACEHOLDER_FIELD_ID"
  // URL contains invalid ValueTrack tags or format.
  | "INVALID_URL_TAG"
  // Provided list exceeds acceptable size.
  | "LIST_TOO_LONG"
  // Certain combinations of attributes aren't allowed to be specified in the
  // same feed item.
  | "INVALID_ATTRIBUTES_COMBINATION"
  // An attribute has the same value repeatedly.
  | "DUPLICATE_VALUES"
  // Advertisers can link a conversion action with a phone number to indicate
  // that sufficiently long calls forwarded to that phone number should be
  // counted as conversions of the specified type.  This is an error message
  // indicating that the conversion action specified is invalid (e.g., the
  // conversion action does not exist within the appropriate Google Ads
  // account, or it is a type of conversion not appropriate to phone call
  // conversions).
  | "INVALID_CALL_CONVERSION_ACTION_ID"
  // Tracking template requires final url to be set.
  | "CANNOT_SET_WITHOUT_FINAL_URLS"
  // An app id was provided that doesn't exist in the given app store.
  | "APP_ID_DOESNT_EXIST_IN_APP_STORE"
  // Invalid U2 final url.
  | "INVALID_FINAL_URL"
  // Invalid U2 tracking url.
  | "INVALID_TRACKING_URL"
  // Final URL should start from App download URL.
  | "INVALID_FINAL_URL_FOR_APP_DOWNLOAD_URL"
  // List provided is too short.
  | "LIST_TOO_SHORT"
  // User Action field has invalid value.
  | "INVALID_USER_ACTION"
  // Type field has invalid value.
  | "INVALID_TYPE_NAME"
  // Change status for event is invalid.
  | "INVALID_EVENT_CHANGE_STATUS"
  // The header of a structured snippets extension is not one of the valid
  // headers.
  | "INVALID_SNIPPETS_HEADER"
  // Android app link is not formatted correctly
  | "INVALID_ANDROID_APP_LINK"
  // Phone number incompatible with call tracking for country.
  | "NUMBER_TYPE_WITH_CALLTRACKING_NOT_SUPPORTED_FOR_COUNTRY"
  // The input is identical to a reserved keyword
  | "RESERVED_KEYWORD_OTHER"
  // Each option label in the message extension must be unique.
  | "DUPLICATE_OPTION_LABELS"
  // Each option prefill in the message extension must be unique.
  | "DUPLICATE_OPTION_PREFILLS"
  // In message extensions, the number of optional labels and optional
  // prefills must be the same.
  | "UNEQUAL_LIST_LENGTHS"
  // All currency codes in an ad extension must be the same.
  | "INCONSISTENT_CURRENCY_CODES"
  // Headers in price extension are not unique.
  | "PRICE_EXTENSION_HAS_DUPLICATED_HEADERS"
  // Header and description in an item are the same.
  | "ITEM_HAS_DUPLICATED_HEADER_AND_DESCRIPTION"
  // Price extension has too few items.
  | "PRICE_EXTENSION_HAS_TOO_FEW_ITEMS"
  // The given value is not supported.
  | "UNSUPPORTED_VALUE"
  // Invalid final mobile url.
  | "INVALID_FINAL_MOBILE_URL"
  // The given string value of Label contains invalid characters
  | "INVALID_KEYWORDLESS_AD_RULE_LABEL"
  // The given URL contains value track parameters.
  | "VALUE_TRACK_PARAMETER_NOT_SUPPORTED"
  // The given value is not supported in the selected language of an
  // extension.
  | "UNSUPPORTED_VALUE_IN_SELECTED_LANGUAGE"
  // The iOS app link is not formatted correctly.
  | "INVALID_IOS_APP_LINK"
  // iOS app link or iOS app store id is missing.
  | "MISSING_IOS_APP_LINK_OR_IOS_APP_STORE_ID"
  // Promotion time is invalid.
  | "PROMOTION_INVALID_TIME"
  // Both the percent off and money amount off fields are set.
  | "PROMOTION_CANNOT_SET_PERCENT_OFF_AND_MONEY_AMOUNT_OFF"
  // Both the promotion code and orders over amount fields are set.
  | "PROMOTION_CANNOT_SET_PROMOTION_CODE_AND_ORDERS_OVER_AMOUNT"
  // Too many decimal places are specified.
  | "TOO_MANY_DECIMAL_PLACES_SPECIFIED"
  // Ad Customizers are present and not allowed.
  | "AD_CUSTOMIZERS_NOT_ALLOWED"
  // Language code is not valid.
  | "INVALID_LANGUAGE_CODE"
  // Language is not supported.
  | "UNSUPPORTED_LANGUAGE"
  // IF Function is present and not allowed.
  | "IF_FUNCTION_NOT_ALLOWED"
  // Final url suffix is not valid.
  | "INVALID_FINAL_URL_SUFFIX"
  // Final url suffix contains an invalid tag.
  | "INVALID_TAG_IN_FINAL_URL_SUFFIX"
  // Final url suffix is formatted incorrectly.
  | "INVALID_FINAL_URL_SUFFIX_FORMAT"
  // Consent for call recording, which is required for the use of call
  // extensions, was not provided by the advertiser. Please see
  // https://support.google.com/google-ads/answer/7412639.
  | "CUSTOMER_CONSENT_FOR_CALL_RECORDING_REQUIRED"
  // Multiple message delivery options are set.
  | "ONLY_ONE_DELIVERY_OPTION_IS_ALLOWED"
  // No message delivery option is set.
  | "NO_DELIVERY_OPTION_IS_SET"
  // String value of conversion reporting state field is not valid.
  | "INVALID_CONVERSION_REPORTING_STATE"
  // Image size is not right.
  | "IMAGE_SIZE_WRONG"
  // Email delivery is not supported in the country specified in the country
  // code field.
  | "EMAIL_DELIVERY_NOT_AVAILABLE_IN_COUNTRY"
  // Auto reply is not supported in the country specified in the country code
  // field.
  | "AUTO_REPLY_NOT_AVAILABLE_IN_COUNTRY"
  // Invalid value specified for latitude.
  | "INVALID_LATITUDE_VALUE"
  // Invalid value specified for longitude.
  | "INVALID_LONGITUDE_VALUE"
  // Too many label fields provided.
  | "TOO_MANY_LABELS"
  // Invalid image url.
  | "INVALID_IMAGE_URL"
  // Latitude value is missing.
  | "MISSING_LATITUDE_VALUE"
  // Longitude value is missing.
  | "MISSING_LONGITUDE_VALUE"
  // Unable to find address.
  | "ADDRESS_NOT_FOUND"
  // Cannot target provided address.
  | "ADDRESS_NOT_TARGETABLE"
  // The specified asset ID does not exist.
  | "INVALID_ASSET_ID"
  // The asset type cannot be set for the field.
  | "INCOMPATIBLE_ASSET_TYPE"
  // The image has unexpected size.
  | "IMAGE_ERROR_UNEXPECTED_SIZE"
  // The image aspect ratio is not allowed.
  | "IMAGE_ERROR_ASPECT_RATIO_NOT_ALLOWED"
  // The image file is too large.
  | "IMAGE_ERROR_FILE_TOO_LARGE"
  // The image format is unsupported.
  | "IMAGE_ERROR_FORMAT_NOT_ALLOWED"
  // Image violates constraints without more details.
  | "IMAGE_ERROR_CONSTRAINTS_VIOLATED"
  // An error occurred when validating image.
  | "IMAGE_ERROR_SERVER_ERROR";
// The possible quality evaluation approval statuses of a feed item.
export type googleadsgoogleadsv9enums_FeedItemQualityApprovalStatusEnum_FeedItemQualityApprovalStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Meets all quality expectations.
  | "APPROVED"
  // Does not meet some quality expectations. The specific reason is found in
  // the quality_disapproval_reasons field.
  | "DISAPPROVED";
// The possible quality evaluation disapproval reasons of a feed item.
export type googleadsgoogleadsv9enums_FeedItemQualityDisapprovalReasonEnum_FeedItemQualityDisapprovalReason =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Price contains repetitive headers.
  | "PRICE_TABLE_REPETITIVE_HEADERS"
  // Price contains repetitive description.
  | "PRICE_TABLE_REPETITIVE_DESCRIPTION"
  // Price contains inconsistent items.
  | "PRICE_TABLE_INCONSISTENT_ROWS"
  // Price contains qualifiers in description.
  | "PRICE_DESCRIPTION_HAS_PRICE_QUALIFIERS"
  // Price contains an unsupported language.
  | "PRICE_UNSUPPORTED_LANGUAGE"
  // Price item header is not relevant to the price type.
  | "PRICE_TABLE_ROW_HEADER_TABLE_TYPE_MISMATCH"
  // Price item header has promotional text.
  | "PRICE_TABLE_ROW_HEADER_HAS_PROMOTIONAL_TEXT"
  // Price item description is not relevant to the item header.
  | "PRICE_TABLE_ROW_DESCRIPTION_NOT_RELEVANT"
  // Price item description contains promotional text.
  | "PRICE_TABLE_ROW_DESCRIPTION_HAS_PROMOTIONAL_TEXT"
  // Price item header and description are repetitive.
  | "PRICE_TABLE_ROW_HEADER_DESCRIPTION_REPETITIVE"
  // Price item is in a foreign language, nonsense, or can't be rated.
  | "PRICE_TABLE_ROW_UNRATEABLE"
  // Price item price is invalid or inaccurate.
  | "PRICE_TABLE_ROW_PRICE_INVALID"
  // Price item URL is invalid or irrelevant.
  | "PRICE_TABLE_ROW_URL_INVALID"
  // Price item header or description has price.
  | "PRICE_HEADER_OR_DESCRIPTION_HAS_PRICE"
  // Structured snippet values do not match the header.
  | "STRUCTURED_SNIPPETS_HEADER_POLICY_VIOLATED"
  // Structured snippet values are repeated.
  | "STRUCTURED_SNIPPETS_REPEATED_VALUES"
  // Structured snippet values violate editorial guidelines like punctuation.
  | "STRUCTURED_SNIPPETS_EDITORIAL_GUIDELINES"
  // Structured snippet contain promotional text.
  | "STRUCTURED_SNIPPETS_HAS_PROMOTIONAL_TEXT";
// A single operation (create, remove) on an feed item set.
export type FeedItemSetOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new feed item set
  create?: googleadsgoogleadsv9resources_FeedItemSet;
  // Update operation: The feed item set is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_FeedItemSet;
  // Remove operation: A resource name for the removed feed item is
  // expected, in this format:
  // `customers/{customer_id}/feedItems/{feed_id}~{feed_item_set_id}`
  remove?: string;
};

// Represents a set of feed items. The set can be used and shared among certain
// feed item features. For instance, the set can be referenced within the
// matching functions of CustomerFeed, CampaignFeed, and AdGroupFeed.
export type googleadsgoogleadsv9resources_FeedItemSet = {
  // Immutable. The resource name of the feed item set.
  // Feed item set resource names have the form:
  // `customers/{customer_id}/feedItemSets/{feed_id}~{feed_item_set_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The resource name of the feed containing the feed items in the set.
  // Immutable. Required.
  //
  // Behaviors: IMMUTABLE
  feed: string | undefined;
  // Output only. ID of the set.
  //
  // Behaviors: OUTPUT_ONLY
  feedItemSetId: number | undefined;
  // Name of the set. Must be unique within the account.
  displayName: string | undefined;
  // Output only. Status of the feed item set.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedItemSetStatusEnum_FeedItemSetStatus | undefined;
  // Filter for dynamic location set.
  // It is only used for sets of locations.
  dynamicLocationSetFilter?: googleadsgoogleadsv9common_DynamicLocationSetFilter;
  // Filter for dynamic affiliate location set.
  // This field doesn't apply generally to feed item sets. It is only used for
  // sets of affiliate locations.
  dynamicAffiliateLocationSetFilter?: googleadsgoogleadsv9common_DynamicAffiliateLocationSetFilter;
};

// Possible statuses of a feed item set.
export type googleadsgoogleadsv9enums_FeedItemSetStatusEnum_FeedItemSetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed item set is enabled.
  | "ENABLED"
  // Feed item set has been removed.
  | "REMOVED";
// Represents a filter on locations in a feed item set.
// Only applicable if the parent Feed of the FeedItemSet is a LOCATION feed.
export type googleadsgoogleadsv9common_DynamicLocationSetFilter = {
  // If multiple labels are set, then only feeditems marked with all the labels
  // will be added to the FeedItemSet.
  labels: string[] | undefined;
  // Business name filter.
  businessNameFilter: googleadsgoogleadsv9common_BusinessNameFilter | undefined;
};

// Represents a business name filter on locations in a FeedItemSet.
export type googleadsgoogleadsv9common_BusinessNameFilter = {
  // Business name string to use for filtering.
  businessName: string | undefined;
  // The type of string matching to use when filtering with business_name.
  filterType: googleadsgoogleadsv9enums_FeedItemSetStringFilterTypeEnum_FeedItemSetStringFilterType | undefined;
};

// describe the possible types for a FeedItemSetStringFilter.
export type googleadsgoogleadsv9enums_FeedItemSetStringFilterTypeEnum_FeedItemSetStringFilterType =
  // Not specified.
  | "UNSPECIFIED"
  // The received error code is not known in this version.
  | "UNKNOWN"
  // The dynamic set filter will use exact string matching.
  | "EXACT";
// Represents a filter on affiliate locations in a FeedItemSet.
// Only applicable if the parent Feed of the FeedItemSet is an
// AFFILIATE_LOCATION feed.
export type googleadsgoogleadsv9common_DynamicAffiliateLocationSetFilter = {
  // Used to filter affiliate locations by chain ids. Only affiliate locations
  // that belong to the specified chain(s) will be added to the FeedItemSet.
  chainIds: number[] | undefined;
};

// A single operation (create, remove) on an feed item target.
export type FeedItemTargetOperation = {
  // Create operation: No resource name is expected for the new feed item
  // target.
  create?: googleadsgoogleadsv9resources_FeedItemTarget;
  // Remove operation: A resource name for the removed feed item target is
  // expected, in this format:
  // `customers/{customer_id}/feedItemTargets/{feed_id}~{feed_item_id}~{feed_item_target_type}~{feed_item_target_id}`
  remove?: string;
};

// A feed item target.
export type googleadsgoogleadsv9resources_FeedItemTarget = {
  // Immutable. The resource name of the feed item target.
  // Feed item target resource names have the form:
  // `customers/{customer_id}/feedItemTargets/{feed_id}~{feed_item_id}~{feed_item_target_type}~{feed_item_target_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Immutable. The feed item to which this feed item target belongs.
  //
  // Behaviors: IMMUTABLE
  feedItem?: string;
  // Output only. The target type of this feed item target. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  feedItemTargetType: googleadsgoogleadsv9enums_FeedItemTargetTypeEnum_FeedItemTargetType | undefined;
  // Output only. The ID of the targeted resource. This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  feedItemTargetId?: number;
  // Output only. Status of the feed item target.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedItemTargetStatusEnum_FeedItemTargetStatus | undefined;
  // Immutable. The targeted campaign.
  //
  // Behaviors: IMMUTABLE
  campaign?: string;
  // Immutable. The targeted ad group.
  //
  // Behaviors: IMMUTABLE
  adGroup?: string;
  // Immutable. The targeted keyword.
  //
  // Behaviors: IMMUTABLE
  keyword?: googleadsgoogleadsv9common_KeywordInfo;
  // Immutable. The targeted geo target constant resource name.
  //
  // Behaviors: IMMUTABLE
  geoTargetConstant?: string;
  // Immutable. The targeted device.
  //
  // Behaviors: IMMUTABLE
  device?: googleadsgoogleadsv9enums_FeedItemTargetDeviceEnum_FeedItemTargetDevice;
  // Immutable. The targeted schedule.
  //
  // Behaviors: IMMUTABLE
  adSchedule?: googleadsgoogleadsv9common_AdScheduleInfo;
};

// Possible type of a feed item target.
export type googleadsgoogleadsv9enums_FeedItemTargetTypeEnum_FeedItemTargetType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed item targets a campaign.
  | "CAMPAIGN"
  // Feed item targets an ad group.
  | "AD_GROUP"
  // Feed item targets a criterion.
  | "CRITERION";
// Possible statuses of a feed item target.
export type googleadsgoogleadsv9enums_FeedItemTargetStatusEnum_FeedItemTargetStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed item target is enabled.
  | "ENABLED"
  // Feed item target has been removed.
  | "REMOVED";
// A single operation (create, update, remove) on an feed.
export type FeedOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new feed.
  create?: googleadsgoogleadsv9resources_Feed;
  // Update operation: The feed is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_Feed;
  // Remove operation: A resource name for the removed feed is
  // expected, in this format:
  // `customers/{customer_id}/feeds/{feed_id}`
  remove?: string;
};

// A feed.
export type googleadsgoogleadsv9resources_Feed = {
  // Immutable. The resource name of the feed.
  // Feed resource names have the form:
  // `customers/{customer_id}/feeds/{feed_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the feed.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Immutable. Name of the feed. Required.
  //
  // Behaviors: IMMUTABLE
  name?: string;
  // The Feed's attributes. Required on CREATE, unless
  // system_feed_generation_data is provided, in which case Google Ads will
  // update the feed with the correct attributes.
  // Disallowed on UPDATE. Use attribute_operations to add new attributes.
  attributes: googleadsgoogleadsv9resources_FeedAttribute[] | undefined;
  // The list of operations changing the feed attributes. Attributes can only
  // be added, not removed.
  attributeOperations: googleadsgoogleadsv9resources_FeedAttributeOperation[] | undefined;
  // Immutable. Specifies who manages the FeedAttributes for the Feed.
  //
  // Behaviors: IMMUTABLE
  origin: googleadsgoogleadsv9enums_FeedOriginEnum_FeedOrigin | undefined;
  // Output only. Status of the feed.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_FeedStatusEnum_FeedStatus | undefined;
  // Data used to configure a location feed populated from Business Profile.
  placesLocationFeedData?: googleadsgoogleadsv9resources_Feed_PlacesLocationFeedData;
  // Data used to configure an affiliate location feed populated with
  // the specified chains.
  affiliateLocationFeedData?: googleadsgoogleadsv9resources_Feed_AffiliateLocationFeedData;
};

// FeedAttributes define the types of data expected to be present in a Feed. A
// single FeedAttribute specifies the expected type of the FeedItemAttributes
// with the same FeedAttributeId. Optionally, a FeedAttribute can be marked as
// being part of a FeedItem's unique key.
export type googleadsgoogleadsv9resources_FeedAttribute = {
  // ID of the attribute.
  id?: number;
  // The name of the attribute. Required.
  name?: string;
  // Data type for feed attribute. Required.
  type: googleadsgoogleadsv9enums_FeedAttributeTypeEnum_FeedAttributeType | undefined;
  // Indicates that data corresponding to this attribute is part of a
  // FeedItem's unique key. It defaults to false if it is unspecified. Note
  // that a unique key is not required in a Feed's schema, in which case the
  // FeedItems must be referenced by their feed_item_id.
  isPartOfKey?: boolean;
};

// Possible data types for a feed attribute.
export type googleadsgoogleadsv9enums_FeedAttributeTypeEnum_FeedAttributeType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Int64.
  | "INT64"
  // Double.
  | "DOUBLE"
  // String.
  | "STRING"
  // Boolean.
  | "BOOLEAN"
  // Url.
  | "URL"
  // Datetime.
  | "DATE_TIME"
  // Int64 list.
  | "INT64_LIST"
  // Double (8 bytes) list.
  | "DOUBLE_LIST"
  // String list.
  | "STRING_LIST"
  // Boolean list.
  | "BOOLEAN_LIST"
  // Url list.
  | "URL_LIST"
  // Datetime list.
  | "DATE_TIME_LIST"
  // Price.
  | "PRICE";
// Operation to be performed on a feed attribute list in a mutate.
export type googleadsgoogleadsv9resources_FeedAttributeOperation = {
  // Output only. Type of list operation to perform.
  //
  // Behaviors: OUTPUT_ONLY
  operator: googleadsgoogleadsv9resources_FeedAttributeOperation_Operator | undefined;
  // Output only. The feed attribute being added to the list.
  //
  // Behaviors: OUTPUT_ONLY
  value: googleadsgoogleadsv9resources_FeedAttribute | undefined;
};

// The operator.
export type googleadsgoogleadsv9resources_FeedAttributeOperation_Operator =
  // Unspecified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Add the attribute to the existing attributes.
  | "ADD";
// Possible values for a feed origin.
export type googleadsgoogleadsv9enums_FeedOriginEnum_FeedOrigin =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The FeedAttributes for this Feed are managed by the
  // user. Users can add FeedAttributes to this Feed.
  | "USER"
  // The FeedAttributes for an GOOGLE Feed are created by Google. A feed of
  // this type is maintained by Google and will have the correct attributes
  // for the placeholder type of the feed.
  | "GOOGLE";
// Possible statuses of a feed.
export type googleadsgoogleadsv9enums_FeedStatusEnum_FeedStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Feed is enabled.
  | "ENABLED"
  // Feed has been removed.
  | "REMOVED";
// Data used to configure a location feed populated from Business Profile.
export type googleadsgoogleadsv9resources_Feed_PlacesLocationFeedData = {
  // Immutable. Required authentication token (from OAuth API) for the email.
  // This field can only be specified in a create request. All its subfields
  // are not selectable.
  //
  // Behaviors: IMMUTABLE
  oauthInfo: googleadsgoogleadsv9resources_Feed_PlacesLocationFeedData_OAuthInfo | undefined;
  // Email address of a Business Profile or email address of a
  // manager of the Business Profile. Required.
  emailAddress?: string;
  // Plus page ID of the managed business whose locations should be used. If
  // this field is not set, then all businesses accessible by the user
  // (specified by email_address) are used.
  // This field is mutate-only and is not selectable.
  businessAccountId: string | undefined;
  // Used to filter Business Profile listings by business name. If
  // business_name_filter is set, only listings with a matching business name
  // are candidates to be sync'd into FeedItems.
  businessNameFilter?: string;
  // Used to filter Business Profile listings by categories. If entries
  // exist in category_filters, only listings that belong to any of the
  // categories are candidates to be sync'd into FeedItems. If no entries
  // exist in category_filters, then all listings are candidates for syncing.
  categoryFilters: string[] | undefined;
  // Used to filter Business Profile listings by labels. If entries exist in
  // label_filters, only listings that has any of the labels set are
  // candidates to be synchronized into FeedItems. If no entries exist in
  // label_filters, then all listings are candidates for syncing.
  labelFilters: string[] | undefined;
};

// Data used for authorization using OAuth.
export type googleadsgoogleadsv9resources_Feed_PlacesLocationFeedData_OAuthInfo = {
  // The HTTP method used to obtain authorization.
  httpMethod?: string;
  // The HTTP request URL used to obtain authorization.
  httpRequestUrl?: string;
  // The HTTP authorization header used to obtain authorization.
  httpAuthorizationHeader?: string;
};

// Data used to configure an affiliate location feed populated with the
// specified chains.
export type googleadsgoogleadsv9resources_Feed_AffiliateLocationFeedData = {
  // The list of chains that the affiliate location feed will sync the
  // locations from.
  chainIds: number[] | undefined;
  // The relationship the chains have with the advertiser.
  relationshipType: googleadsgoogleadsv9enums_AffiliateLocationFeedRelationshipTypeEnum_AffiliateLocationFeedRelationshipType | undefined;
};

// Possible values for a relationship type for an affiliate location feed.
export type googleadsgoogleadsv9enums_AffiliateLocationFeedRelationshipTypeEnum_AffiliateLocationFeedRelationshipType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // General retailer relationship.
  | "GENERAL_RETAILER";
// A single operation (create, update, remove) on a Keyword Plan ad group.
export type KeywordPlanAdGroupOperation = {
  // The FieldMask that determines which resource fields are modified in an
  // update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new Keyword Plan
  // ad group.
  create?: googleadsgoogleadsv9resources_KeywordPlanAdGroup;
  // Update operation: The Keyword Plan ad group is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_KeywordPlanAdGroup;
  // Remove operation: A resource name for the removed Keyword Plan ad group
  // is expected, in this format:
  // `customers/{customer_id}/keywordPlanAdGroups/{kp_ad_group_id}`
  remove?: string;
};

// A Keyword Planner ad group.
// Max number of keyword plan ad groups per plan: 200.
export type googleadsgoogleadsv9resources_KeywordPlanAdGroup = {
  // Immutable. The resource name of the Keyword Planner ad group.
  // KeywordPlanAdGroup resource names have the form:
  // `customers/{customer_id}/keywordPlanAdGroups/{kp_ad_group_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // The keyword plan campaign to which this ad group belongs.
  keywordPlanCampaign?: string;
  // Output only. The ID of the keyword plan ad group.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the keyword plan ad group.
  // This field is required and should not be empty when creating keyword plan
  // ad group.
  name?: string;
  // A default ad group max cpc bid in micros in account currency for all
  // biddable keywords under the keyword plan ad group.
  // If not set, will inherit from parent campaign.
  cpcBidMicros?: number;
};

// A single operation (create, update, remove) on a Keyword Plan ad group
// keyword.
export type KeywordPlanAdGroupKeywordOperation = {
  // The FieldMask that determines which resource fields are modified in an
  // update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new Keyword Plan
  // ad group keyword.
  create?: googleadsgoogleadsv9resources_KeywordPlanAdGroupKeyword;
  // Update operation: The Keyword Plan ad group keyword is expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_KeywordPlanAdGroupKeyword;
  // Remove operation: A resource name for the removed Keyword Plan ad group
  // keyword is expected, in this format:
  // `customers/{customer_id}/keywordPlanAdGroupKeywords/{kp_ad_group_keyword_id}`
  remove?: string;
};

// A Keyword Plan ad group keyword.
// Max number of keyword plan keywords per plan: 10000.
export type googleadsgoogleadsv9resources_KeywordPlanAdGroupKeyword = {
  // Immutable. The resource name of the Keyword Plan ad group keyword.
  // KeywordPlanAdGroupKeyword resource names have the form:
  // `customers/{customer_id}/keywordPlanAdGroupKeywords/{kp_ad_group_keyword_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // The Keyword Plan ad group to which this keyword belongs.
  keywordPlanAdGroup?: string;
  // Output only. The ID of the Keyword Plan keyword.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The keyword text.
  text?: string;
  // The keyword match type.
  matchType: googleadsgoogleadsv9enums_KeywordMatchTypeEnum_KeywordMatchType | undefined;
  // A keyword level max cpc bid in micros (e.g. $1 = 1mm). The currency is the
  // same as the account currency code. This will override any CPC bid set at
  // the keyword plan ad group level.
  // Not applicable for negative keywords. (negative = true)
  // This field is Optional.
  cpcBidMicros?: number;
  // Immutable. If true, the keyword is negative.
  //
  // Behaviors: IMMUTABLE
  negative?: boolean;
};

// A single operation (create, update, remove) on a Keyword Plan campaign
// keyword.
export type KeywordPlanCampaignKeywordOperation = {
  // The FieldMask that determines which resource fields are modified in an
  // update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new Keyword Plan
  // campaign keyword.
  create?: googleadsgoogleadsv9resources_KeywordPlanCampaignKeyword;
  // Update operation: The Keyword Plan campaign keyword expected to have a
  // valid resource name.
  update?: googleadsgoogleadsv9resources_KeywordPlanCampaignKeyword;
  // Remove operation: A resource name for the removed Keyword Plan campaign
  // keywords expected in this format:
  // `customers/{customer_id}/keywordPlanCampaignKeywords/{kp_campaign_keyword_id}`
  remove?: string;
};

// A Keyword Plan Campaign keyword.
// Only negative keywords are supported for Campaign Keyword.
export type googleadsgoogleadsv9resources_KeywordPlanCampaignKeyword = {
  // Immutable. The resource name of the Keyword Plan Campaign keyword.
  // KeywordPlanCampaignKeyword resource names have the form:
  // `customers/{customer_id}/keywordPlanCampaignKeywords/{kp_campaign_keyword_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // The Keyword Plan campaign to which this negative keyword belongs.
  keywordPlanCampaign?: string;
  // Output only. The ID of the Keyword Plan negative keyword.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The keyword text.
  text?: string;
  // The keyword match type.
  matchType: googleadsgoogleadsv9enums_KeywordMatchTypeEnum_KeywordMatchType | undefined;
  // Immutable. If true, the keyword is negative.
  // Must be set to true. Only negative campaign keywords are supported.
  //
  // Behaviors: IMMUTABLE
  negative?: boolean;
};

// A single operation (create, update, remove) on a Keyword Plan campaign.
export type KeywordPlanCampaignOperation = {
  // The FieldMask that determines which resource fields are modified in an
  // update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new Keyword Plan
  // campaign.
  create?: googleadsgoogleadsv9resources_KeywordPlanCampaign;
  // Update operation: The Keyword Plan campaign is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_KeywordPlanCampaign;
  // Remove operation: A resource name for the removed Keyword Plan campaign
  // is expected, in this format:
  // `customers/{customer_id}/keywordPlanCampaigns/{keywordPlan_campaign_id}`
  remove?: string;
};

// A Keyword Plan campaign.
// Max number of keyword plan campaigns per plan allowed: 1.
export type googleadsgoogleadsv9resources_KeywordPlanCampaign = {
  // Immutable. The resource name of the Keyword Plan campaign.
  // KeywordPlanCampaign resource names have the form:
  // `customers/{customer_id}/keywordPlanCampaigns/{kp_campaign_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // The keyword plan this campaign belongs to.
  keywordPlan?: string;
  // Output only. The ID of the Keyword Plan campaign.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the Keyword Plan campaign.
  // This field is required and should not be empty when creating Keyword Plan
  // campaigns.
  name?: string;
  // The languages targeted for the Keyword Plan campaign.
  // Max allowed: 1.
  languageConstants: string[] | undefined;
  // Targeting network.
  // This field is required and should not be empty when creating Keyword Plan
  // campaigns.
  keywordPlanNetwork: googleadsgoogleadsv9enums_KeywordPlanNetworkEnum_KeywordPlanNetwork | undefined;
  // A default max cpc bid in micros, and in the account currency, for all ad
  // groups under the campaign.
  // This field is required and should not be empty when creating Keyword Plan
  // campaigns.
  cpcBidMicros?: number;
  // The geo targets.
  // Max number allowed: 20.
  geoTargets: googleadsgoogleadsv9resources_KeywordPlanGeoTarget[] | undefined;
};

// A geo target.
export type googleadsgoogleadsv9resources_KeywordPlanGeoTarget = {
  // Required. The resource name of the geo target.
  geoTargetConstant?: string;
};

// A single operation (create, update, remove) on a keyword plan.
export type KeywordPlanOperation = {
  // The FieldMask that determines which resource fields are modified in an
  // update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new keyword plan.
  create?: googleadsgoogleadsv9resources_KeywordPlan;
  // Update operation: The keyword plan is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_KeywordPlan;
  // Remove operation: A resource name for the removed keyword plan is
  // expected in this format:
  // `customers/{customer_id}/keywordPlans/{keyword_plan_id}`
  remove?: string;
};

// A Keyword Planner plan.
// Max number of saved keyword plans: 10000.
// It's possible to remove plans if limit is reached.
export type googleadsgoogleadsv9resources_KeywordPlan = {
  // Immutable. The resource name of the Keyword Planner plan.
  // KeywordPlan resource names have the form:
  // `customers/{customer_id}/keywordPlans/{kp_plan_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the keyword plan.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the keyword plan.
  // This field is required and should not be empty when creating new keyword
  // plans.
  name?: string;
  // The date period used for forecasting the plan.
  forecastPeriod: googleadsgoogleadsv9resources_KeywordPlanForecastPeriod | undefined;
};

// The forecasting period associated with the keyword plan.
export type googleadsgoogleadsv9resources_KeywordPlanForecastPeriod = {
  // A future date range relative to the current date used for forecasting.
  dateInterval?: googleadsgoogleadsv9enums_KeywordPlanForecastIntervalEnum_KeywordPlanForecastInterval;
  // The custom date range used for forecasting.
  // The start and end dates must be in the future. Otherwise, an error will
  // be returned when the forecasting action is performed.
  // The start and end dates are inclusive.
  dateRange?: googleadsgoogleadsv9common_DateRange;
};

// Forecast intervals.
export type googleadsgoogleadsv9enums_KeywordPlanForecastIntervalEnum_KeywordPlanForecastInterval =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // The next week date range for keyword plan. The next week is based
  // on the default locale of the user's account and is mostly SUN-SAT or
  // MON-SUN.
  // This can be different from next-7 days.
  | "NEXT_WEEK"
  // The next month date range for keyword plan.
  | "NEXT_MONTH"
  // The next quarter date range for keyword plan.
  | "NEXT_QUARTER";
// A single operation (create, remove, update) on a label.
export type LabelOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new label.
  create?: googleadsgoogleadsv9resources_Label;
  // Update operation: The label is expected to have a valid resource name.
  update?: googleadsgoogleadsv9resources_Label;
  // Remove operation: A resource name for the label being removed, in
  // this format:
  // `customers/{customer_id}/labels/{label_id}`
  remove?: string;
};

// A label.
export type googleadsgoogleadsv9resources_Label = {
  // Immutable. Name of the resource.
  // Label resource names have the form:
  // `customers/{customer_id}/labels/{label_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. Id of the label. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the label.
  // This field is required and should not be empty when creating a new label.
  // The length of this string should be between 1 and 80, inclusive.
  name?: string;
  // Output only. Status of the label. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_LabelStatusEnum_LabelStatus | undefined;
  // A type of label displaying text on a colored background.
  textLabel: googleadsgoogleadsv9common_TextLabel | undefined;
};

// Possible statuses of a label.
export type googleadsgoogleadsv9enums_LabelStatusEnum_LabelStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Label is enabled.
  | "ENABLED"
  // Label is removed.
  | "REMOVED";
// A type of label displaying text on a colored background.
export type googleadsgoogleadsv9common_TextLabel = {
  // Background color of the label in RGB format. This string must match the
  // regular expression '^\#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$'.
  // Note: The background color may not be visible for manager accounts.
  backgroundColor?: string;
  // A short description of the label. The length must be no more than 200
  // characters.
  description?: string;
};

// A single operation (create, update) on a remarketing action.
export type RemarketingActionOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new remarketing
  // action.
  create?: googleadsgoogleadsv9resources_RemarketingAction;
  // Update operation: The remarketing action is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_RemarketingAction;
};

// A remarketing action. A snippet of JavaScript code that will collect the
// product id and the type of page people visited (product page, shopping cart
// page, purchase page, general site visit) on an advertiser's website.
export type googleadsgoogleadsv9resources_RemarketingAction = {
  // Immutable. The resource name of the remarketing action.
  // Remarketing action resource names have the form:
  // `customers/{customer_id}/remarketingActions/{remarketing_action_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. Id of the remarketing action.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // The name of the remarketing action.
  // This field is required and should not be empty when creating new
  // remarketing actions.
  name?: string;
  // Output only. The snippets used for tracking remarketing actions.
  //
  // Behaviors: OUTPUT_ONLY
  tagSnippets: googleadsgoogleadsv9common_TagSnippet[] | undefined;
};

// A single operation to update Smart campaign settings for a campaign.
export type SmartCampaignSettingOperation = {
  // Update operation: The Smart campaign setting must specify a valid
  // resource name.
  update: googleadsgoogleadsv9resources_SmartCampaignSetting | undefined;
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
};

// Settings for configuring Smart campaigns.
export type googleadsgoogleadsv9resources_SmartCampaignSetting = {
  // Immutable. The resource name of the Smart campaign setting.
  // Smart campaign setting resource names have the form:
  // `customers/{customer_id}/smartCampaignSettings/{campaign_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The campaign to which these settings apply.
  //
  // Behaviors: OUTPUT_ONLY
  campaign: string | undefined;
  // Phone number and country code.
  phoneNumber: googleadsgoogleadsv9resources_SmartCampaignSetting_PhoneNumber | undefined;
  // Landing page url given by user for this Campaign.
  finalUrl: string | undefined;
  // The ISO-639-1 language code to advertise in.
  advertisingLanguageCode: string | undefined;
  // The name of the business.
  businessName?: string;
  // The ID of the Business Profile location.
  // The location ID can be fetched by Business Profile API with its form:
  // accounts/{accountId}/locations/{locationId}. The last {locationId}
  // component from the Business Profile API represents the
  // business_location_id. See the [Business Profile API]
  // (https://developers.google.com/my-business/reference/rest/v4/accounts.locations)
  businessLocationId?: number;
};

// Phone number and country code in smart campaign settings.
export type googleadsgoogleadsv9resources_SmartCampaignSetting_PhoneNumber = {
  // Phone number of the smart campaign.
  phoneNumber?: string;
  // Upper-case, two-letter country code as defined by ISO-3166.
  countryCode?: string;
};

// A single operation (create, update) on a user list.
export type UserListOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new user list.
  create?: googleadsgoogleadsv9resources_UserList;
  // Update operation: The user list is expected to have a valid resource
  // name.
  update?: googleadsgoogleadsv9resources_UserList;
  // Remove operation: A resource name for the removed user list is expected,
  // in this format:
  // `customers/{customer_id}/userLists/{user_list_id}`
  remove?: string;
};

// A user list. This is a list of users a customer may target.
export type googleadsgoogleadsv9resources_UserList = {
  // Immutable. The resource name of the user list.
  // User list resource names have the form:
  // `customers/{customer_id}/userLists/{user_list_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. Id of the user list.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. A flag that indicates if a user may edit a list. Depends on the list
  // ownership and list type. For example, external remarketing user lists are
  // not editable.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  readOnly?: boolean;
  // Name of this user list. Depending on its access_reason, the user list name
  // may not be unique (e.g. if access_reason=SHARED)
  name?: string;
  // Description of this user list.
  description?: string;
  // Membership status of this user list. Indicates whether a user list is open
  // or active. Only open user lists can accumulate more users and can be
  // targeted to.
  membershipStatus: googleadsgoogleadsv9enums_UserListMembershipStatusEnum_UserListMembershipStatus | undefined;
  // An ID from external system. It is used by user list sellers to correlate
  // IDs on their systems.
  integrationCode?: string;
  // Number of days a user's cookie stays on your list since its most recent
  // addition to the list. This field must be between 0 and 540 inclusive.
  // However, for CRM based userlists, this field can be set to 10000 which
  // means no expiration.
  // It'll be ignored for logical_user_list.
  membershipLifeSpan?: number;
  // Output only. Estimated number of users in this user list, on the Google Display Network.
  // This value is null if the number of users has not yet been determined.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  sizeForDisplay?: number;
  // Output only. Size range in terms of number of users of the UserList, on the Google
  // Display Network.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  sizeRangeForDisplay: googleadsgoogleadsv9enums_UserListSizeRangeEnum_UserListSizeRange | undefined;
  // Output only. Estimated number of users in this user list in the google.com domain.
  // These are the users available for targeting in Search campaigns.
  // This value is null if the number of users has not yet been determined.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  sizeForSearch?: number;
  // Output only. Size range in terms of number of users of the UserList, for Search ads.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  sizeRangeForSearch: googleadsgoogleadsv9enums_UserListSizeRangeEnum_UserListSizeRange | undefined;
  // Output only. Type of this list.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_UserListTypeEnum_UserListType | undefined;
  // Indicating the reason why this user list membership status is closed. It is
  // only populated on lists that were automatically closed due to inactivity,
  // and will be cleared once the list membership status becomes open.
  closingReason: googleadsgoogleadsv9enums_UserListClosingReasonEnum_UserListClosingReason | undefined;
  // Output only. Indicates the reason this account has been granted access to the list.
  // The reason can be SHARED, OWNED, LICENSED or SUBSCRIBED.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  accessReason: googleadsgoogleadsv9enums_AccessReasonEnum_AccessReason | undefined;
  // Indicates if this share is still enabled. When a UserList is shared with
  // the user this field is set to ENABLED. Later the userList owner can decide
  // to revoke the share and make it DISABLED.
  // The default value of this field is set to ENABLED.
  accountUserListStatus: googleadsgoogleadsv9enums_UserListAccessStatusEnum_UserListAccessStatus | undefined;
  // Indicates if this user list is eligible for Google Search Network.
  eligibleForSearch?: boolean;
  // Output only. Indicates this user list is eligible for Google Display Network.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  eligibleForDisplay?: boolean;
  // Output only. Indicates match rate for Customer Match lists. The range of this field is
  // [0-100]. This will be null for other list types or when it's not possible
  // to calculate the match rate.
  // This field is read-only.
  //
  // Behaviors: OUTPUT_ONLY
  matchRatePercentage?: number;
  // User list of CRM users provided by the advertiser.
  crmBasedUserList?: googleadsgoogleadsv9common_CrmBasedUserListInfo;
  // Output only. User list which are similar to users from another UserList.
  // These lists are readonly and automatically created by google.
  //
  // Behaviors: OUTPUT_ONLY
  similarUserList?: googleadsgoogleadsv9common_SimilarUserListInfo;
  // User list generated by a rule.
  ruleBasedUserList?: googleadsgoogleadsv9common_RuleBasedUserListInfo;
  // User list that is a custom combination of user lists and user interests.
  logicalUserList?: googleadsgoogleadsv9common_LogicalUserListInfo;
  // User list targeting as a collection of conversion or remarketing actions.
  basicUserList?: googleadsgoogleadsv9common_BasicUserListInfo;
};

// Enum containing possible user list membership statuses.
export type googleadsgoogleadsv9enums_UserListMembershipStatusEnum_UserListMembershipStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Open status - List is accruing members and can be targeted to.
  | "OPEN"
  // Closed status - No new members being added. Cannot be used for targeting.
  | "CLOSED";
// Enum containing possible user list size ranges.
export type googleadsgoogleadsv9enums_UserListSizeRangeEnum_UserListSizeRange =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // User list has less than 500 users.
  | "LESS_THAN_FIVE_HUNDRED"
  // User list has number of users in range of 500 to 1000.
  | "LESS_THAN_ONE_THOUSAND"
  // User list has number of users in range of 1000 to 10000.
  | "ONE_THOUSAND_TO_TEN_THOUSAND"
  // User list has number of users in range of 10000 to 50000.
  | "TEN_THOUSAND_TO_FIFTY_THOUSAND"
  // User list has number of users in range of 50000 to 100000.
  | "FIFTY_THOUSAND_TO_ONE_HUNDRED_THOUSAND"
  // User list has number of users in range of 100000 to 300000.
  | "ONE_HUNDRED_THOUSAND_TO_THREE_HUNDRED_THOUSAND"
  // User list has number of users in range of 300000 to 500000.
  | "THREE_HUNDRED_THOUSAND_TO_FIVE_HUNDRED_THOUSAND"
  // User list has number of users in range of 500000 to 1 million.
  | "FIVE_HUNDRED_THOUSAND_TO_ONE_MILLION"
  // User list has number of users in range of 1 to 2 millions.
  | "ONE_MILLION_TO_TWO_MILLION"
  // User list has number of users in range of 2 to 3 millions.
  | "TWO_MILLION_TO_THREE_MILLION"
  // User list has number of users in range of 3 to 5 millions.
  | "THREE_MILLION_TO_FIVE_MILLION"
  // User list has number of users in range of 5 to 10 millions.
  | "FIVE_MILLION_TO_TEN_MILLION"
  // User list has number of users in range of 10 to 20 millions.
  | "TEN_MILLION_TO_TWENTY_MILLION"
  // User list has number of users in range of 20 to 30 millions.
  | "TWENTY_MILLION_TO_THIRTY_MILLION"
  // User list has number of users in range of 30 to 50 millions.
  | "THIRTY_MILLION_TO_FIFTY_MILLION"
  // User list has over 50 million users.
  | "OVER_FIFTY_MILLION";
// Enum containing possible user list types.
export type googleadsgoogleadsv9enums_UserListTypeEnum_UserListType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // UserList represented as a collection of conversion types.
  | "REMARKETING"
  // UserList represented as a combination of other user lists/interests.
  | "LOGICAL"
  // UserList created in the Google Ad Manager platform.
  | "EXTERNAL_REMARKETING"
  // UserList associated with a rule.
  | "RULE_BASED"
  // UserList with users similar to users of another UserList.
  | "SIMILAR"
  // UserList of first-party CRM data provided by advertiser in the form of
  // emails or other formats.
  | "CRM_BASED";
// Enum describing possible user list closing reasons.
export type googleadsgoogleadsv9enums_UserListClosingReasonEnum_UserListClosingReason =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The userlist was closed because of not being used for over one year.
  | "UNUSED";
// Enum describing possible access reasons.
export type googleadsgoogleadsv9enums_AccessReasonEnum_AccessReason =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The resource is owned by the user.
  | "OWNED"
  // The resource is shared to the user.
  | "SHARED"
  // The resource is licensed to the user.
  | "LICENSED"
  // The user subscribed to the resource.
  | "SUBSCRIBED"
  // The resource is accessible to the user.
  | "AFFILIATED";
// Enum containing possible user list access statuses.
export type googleadsgoogleadsv9enums_UserListAccessStatusEnum_UserListAccessStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The access is enabled.
  | "ENABLED"
  // The access is disabled.
  | "DISABLED";
// UserList of CRM users provided by the advertiser.
export type googleadsgoogleadsv9common_CrmBasedUserListInfo = {
  // A string that uniquely identifies a mobile application from which the data
  // was collected.
  // For iOS, the ID string is the 9 digit string that appears at the end of an
  // App Store URL (e.g., "476943146" for "Flood-It! 2" whose App Store link is
  // http://itunes.apple.com/us/app/flood-it!-2/id476943146).
  // For Android, the ID string is the application's package name
  // (e.g., "com.labpixies.colordrips" for "Color Drips" given Google Play link
  // https://play.google.com/store/apps/details?id=com.labpixies.colordrips).
  // Required when creating CrmBasedUserList for uploading mobile advertising
  // IDs.
  appId?: string;
  // Matching key type of the list.
  // Mixed data types are not allowed on the same list.
  // This field is required for an ADD operation.
  uploadKeyType: googleadsgoogleadsv9enums_CustomerMatchUploadKeyTypeEnum_CustomerMatchUploadKeyType | undefined;
  // Data source of the list. Default value is FIRST_PARTY.
  // Only customers on the allow-list can create third-party sourced CRM lists.
  dataSourceType: googleadsgoogleadsv9enums_UserListCrmDataSourceTypeEnum_UserListCrmDataSourceType | undefined;
};

// Enum describing possible customer match upload key types.
export type googleadsgoogleadsv9enums_CustomerMatchUploadKeyTypeEnum_CustomerMatchUploadKeyType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Members are matched from customer info such as email address, phone
  // number or physical address.
  | "CONTACT_INFO"
  // Members are matched from a user id generated and assigned by the
  // advertiser.
  | "CRM_ID"
  // Members are matched from mobile advertising ids.
  | "MOBILE_ADVERTISING_ID";
// Enum describing possible user list crm data source type.
export type googleadsgoogleadsv9enums_UserListCrmDataSourceTypeEnum_UserListCrmDataSourceType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The uploaded data is first-party data.
  | "FIRST_PARTY"
  // The uploaded data is from a third-party credit bureau.
  | "THIRD_PARTY_CREDIT_BUREAU"
  // The uploaded data is from a third-party voter file.
  | "THIRD_PARTY_VOTER_FILE";
// SimilarUserList is a list of users which are similar to users from another
// UserList. These lists are read-only and automatically created by Google.
export type googleadsgoogleadsv9common_SimilarUserListInfo = {
  // Seed UserList from which this list is derived.
  seedUserList?: string;
};

// Representation of a userlist that is generated by a rule.
export type googleadsgoogleadsv9common_RuleBasedUserListInfo = {
  // The status of pre-population. The field is default to NONE if not set which
  // means the previous users will not be considered. If set to REQUESTED, past
  // site visitors or app users who match the list definition will be included
  // in the list (works on the Display Network only). This will only
  // add past users from within the last 30 days, depending on the
  // list's membership duration and the date when the remarketing tag is added.
  // The status will be updated to FINISHED once request is processed, or FAILED
  // if the request fails.
  prepopulationStatus: googleadsgoogleadsv9enums_UserListPrepopulationStatusEnum_UserListPrepopulationStatus | undefined;
  // User lists defined by combining two rules.
  // There are two operators: AND, where the left and right operands have to
  // be true; AND_NOT where left operand is true but right operand is false.
  combinedRuleUserList?: googleadsgoogleadsv9common_CombinedRuleUserListInfo;
  // Visitors of a page during specific dates. The visiting periods are
  // defined as follows:
  // Between start_date (inclusive) and end_date (inclusive);
  // Before end_date (exclusive) with start_date = 2000-01-01;
  // After start_date (exclusive) with end_date = 2037-12-30.
  dateSpecificRuleUserList?: googleadsgoogleadsv9common_DateSpecificRuleUserListInfo;
  // Visitors of a page. The page visit is defined by one boolean rule
  // expression.
  expressionRuleUserList?: googleadsgoogleadsv9common_ExpressionRuleUserListInfo;
};

// Enum describing possible user list prepopulation status.
export type googleadsgoogleadsv9enums_UserListPrepopulationStatusEnum_UserListPrepopulationStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Prepopoulation is being requested.
  | "REQUESTED"
  // Prepopulation is finished.
  | "FINISHED"
  // Prepopulation failed.
  | "FAILED";
// User lists defined by combining two rules, left operand and right operand.
// There are two operators: AND where left operand and right operand have to be
// true; AND_NOT where left operand is true but right operand is false.
export type googleadsgoogleadsv9common_CombinedRuleUserListInfo = {
  // Left operand of the combined rule.
  // This field is required and must be populated when creating new combined
  // rule based user list.
  leftOperand: googleadsgoogleadsv9common_UserListRuleInfo | undefined;
  // Right operand of the combined rule.
  // This field is required and must be populated when creating new combined
  // rule based user list.
  rightOperand: googleadsgoogleadsv9common_UserListRuleInfo | undefined;
  // Operator to connect the two operands.
  // Required for creating a combined rule user list.
  ruleOperator: googleadsgoogleadsv9enums_UserListCombinedRuleOperatorEnum_UserListCombinedRuleOperator | undefined;
};

// A client defined rule based on custom parameters sent by web sites or
// uploaded by the advertiser.
export type googleadsgoogleadsv9common_UserListRuleInfo = {
  // Rule type is used to determine how to group rule items.
  // The default is OR of ANDs (disjunctive normal form).
  // That is, rule items will be ANDed together within rule item groups and the
  // groups themselves will be ORed together.
  // Currently AND of ORs (conjunctive normal form) is only supported for
  // ExpressionRuleUserList.
  ruleType: googleadsgoogleadsv9enums_UserListRuleTypeEnum_UserListRuleType | undefined;
  // List of rule item groups that defines this rule.
  // Rule item groups are grouped together based on rule_type.
  ruleItemGroups: googleadsgoogleadsv9common_UserListRuleItemGroupInfo[] | undefined;
};

// Enum describing possible user list rule types.
export type googleadsgoogleadsv9enums_UserListRuleTypeEnum_UserListRuleType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conjunctive normal form.
  | "AND_OF_ORS"
  // Disjunctive normal form.
  | "OR_OF_ANDS";
// A group of rule items.
export type googleadsgoogleadsv9common_UserListRuleItemGroupInfo = {
  // Rule items that will be grouped together based on rule_type.
  ruleItems: googleadsgoogleadsv9common_UserListRuleItemInfo[] | undefined;
};

// An atomic rule item.
export type googleadsgoogleadsv9common_UserListRuleItemInfo = {
  // Rule variable name. It should match the corresponding key name fired
  // by the pixel.
  // A name must begin with US-ascii letters or underscore or UTF8 code that is
  // greater than 127 and consist of US-ascii letters or digits or underscore or
  // UTF8 code that is greater than 127.
  // For websites, there are two built-in variable URL (name = 'url__') and
  // referrer URL (name = 'ref_url__').
  // This field must be populated when creating a new rule item.
  name?: string;
  // An atomic rule item composed of a number operation.
  numberRuleItem?: googleadsgoogleadsv9common_UserListNumberRuleItemInfo;
  // An atomic rule item composed of a string operation.
  stringRuleItem?: googleadsgoogleadsv9common_UserListStringRuleItemInfo;
  // An atomic rule item composed of a date operation.
  dateRuleItem?: googleadsgoogleadsv9common_UserListDateRuleItemInfo;
};

// A rule item composed of a number operation.
export type googleadsgoogleadsv9common_UserListNumberRuleItemInfo = {
  // Number comparison operator.
  // This field is required and must be populated when creating a new number
  // rule item.
  operator: googleadsgoogleadsv9enums_UserListNumberRuleItemOperatorEnum_UserListNumberRuleItemOperator | undefined;
  // Number value to be compared with the variable.
  // This field is required and must be populated when creating a new number
  // rule item.
  value?: number;
};

// Enum describing possible user list number rule item operators.
export type googleadsgoogleadsv9enums_UserListNumberRuleItemOperatorEnum_UserListNumberRuleItemOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Greater than.
  | "GREATER_THAN"
  // Greater than or equal.
  | "GREATER_THAN_OR_EQUAL"
  // Equals.
  | "EQUALS"
  // Not equals.
  | "NOT_EQUALS"
  // Less than.
  | "LESS_THAN"
  // Less than or equal.
  | "LESS_THAN_OR_EQUAL";
// A rule item composed of a string operation.
export type googleadsgoogleadsv9common_UserListStringRuleItemInfo = {
  // String comparison operator.
  // This field is required and must be populated when creating a new string
  // rule item.
  operator: googleadsgoogleadsv9enums_UserListStringRuleItemOperatorEnum_UserListStringRuleItemOperator | undefined;
  // The right hand side of the string rule item. For URLs or referrer URLs,
  // the value can not contain illegal URL chars such as newlines, quotes,
  // tabs, or parentheses. This field is required and must be populated when
  // creating a new string rule item.
  value?: string;
};

// Enum describing possible user list string rule item operators.
export type googleadsgoogleadsv9enums_UserListStringRuleItemOperatorEnum_UserListStringRuleItemOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Contains.
  | "CONTAINS"
  // Equals.
  | "EQUALS"
  // Starts with.
  | "STARTS_WITH"
  // Ends with.
  | "ENDS_WITH"
  // Not equals.
  | "NOT_EQUALS"
  // Not contains.
  | "NOT_CONTAINS"
  // Not starts with.
  | "NOT_STARTS_WITH"
  // Not ends with.
  | "NOT_ENDS_WITH";
// A rule item composed of a date operation.
export type googleadsgoogleadsv9common_UserListDateRuleItemInfo = {
  // Date comparison operator.
  // This field is required and must be populated when creating new date
  // rule item.
  operator: googleadsgoogleadsv9enums_UserListDateRuleItemOperatorEnum_UserListDateRuleItemOperator | undefined;
  // String representing date value to be compared with the rule variable.
  // Supported date format is YYYY-MM-DD.
  // Times are reported in the customer's time zone.
  value?: string;
  // The relative date value of the right hand side denoted by number of days
  // offset from now. The value field will override this field when both are
  // present.
  offsetInDays?: number;
};

// Enum describing possible user list date rule item operators.
export type googleadsgoogleadsv9enums_UserListDateRuleItemOperatorEnum_UserListDateRuleItemOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Equals.
  | "EQUALS"
  // Not Equals.
  | "NOT_EQUALS"
  // Before.
  | "BEFORE"
  // After.
  | "AFTER";
// Enum describing possible user list combined rule operators.
export type googleadsgoogleadsv9enums_UserListCombinedRuleOperatorEnum_UserListCombinedRuleOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // A AND B.
  | "AND"
  // A AND NOT B.
  | "AND_NOT";
// Visitors of a page during specific dates.
export type googleadsgoogleadsv9common_DateSpecificRuleUserListInfo = {
  // Boolean rule that defines visitor of a page.
  // Required for creating a date specific rule user list.
  rule: googleadsgoogleadsv9common_UserListRuleInfo | undefined;
  // Start date of users visit. If set to 2000-01-01, then the list includes all
  // users before end_date. The date's format should be YYYY-MM-DD.
  // Required for creating a data specific rule user list.
  startDate?: string;
  // Last date of users visit. If set to 2037-12-30, then the list includes all
  // users after start_date. The date's format should be YYYY-MM-DD.
  // Required for creating a data specific rule user list.
  endDate?: string;
};

// Visitors of a page. The page visit is defined by one boolean rule expression.
export type googleadsgoogleadsv9common_ExpressionRuleUserListInfo = {
  // Boolean rule that defines this user list. The rule consists of a list of
  // rule item groups and each rule item group consists of a list of rule items.
  // All the rule item groups are ORed or ANDed together for evaluation based on
  // rule.rule_type.
  // Required for creating an expression rule user list.
  rule: googleadsgoogleadsv9common_UserListRuleInfo | undefined;
};

// Represents a user list that is a custom combination of user lists.
export type googleadsgoogleadsv9common_LogicalUserListInfo = {
  // Logical list rules that define this user list. The rules are defined as a
  // logical operator (ALL/ANY/NONE) and a list of user lists. All the rules are
  // ANDed when they are evaluated.
  // Required for creating a logical user list.
  rules: googleadsgoogleadsv9common_UserListLogicalRuleInfo[] | undefined;
};

// A user list logical rule. A rule has a logical operator (and/or/not) and a
// list of user lists as operands.
export type googleadsgoogleadsv9common_UserListLogicalRuleInfo = {
  // The logical operator of the rule.
  operator: googleadsgoogleadsv9enums_UserListLogicalRuleOperatorEnum_UserListLogicalRuleOperator | undefined;
  // The list of operands of the rule.
  ruleOperands: googleadsgoogleadsv9common_LogicalUserListOperandInfo[] | undefined;
};

// Enum describing possible user list logical rule operators.
export type googleadsgoogleadsv9enums_UserListLogicalRuleOperatorEnum_UserListLogicalRuleOperator =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // And - all of the operands.
  | "ALL"
  // Or - at least one of the operands.
  | "ANY"
  // Not - none of the operands.
  | "NONE";
// Operand of logical user list that consists of a user list.
export type googleadsgoogleadsv9common_LogicalUserListOperandInfo = {
  // Resource name of a user list as an operand.
  userList?: string;
};

// User list targeting as a collection of conversions or remarketing actions.
export type googleadsgoogleadsv9common_BasicUserListInfo = {
  // Actions associated with this user list.
  actions: googleadsgoogleadsv9common_UserListActionInfo[] | undefined;
};

// Represents an action type used for building remarketing user lists.
export type googleadsgoogleadsv9common_UserListActionInfo = {
  // A conversion action that's not generated from remarketing.
  conversionAction?: string;
  // A remarketing action.
  remarketingAction?: string;
};

// Response message for [BatchJobService.AddBatchJobOperations][google.ads.googleads.v9.services.BatchJobService.AddBatchJobOperations].
export type AddBatchJobOperationsResponse = {
  // The total number of operations added so far for this batch job.
  totalOperations: number | undefined;
  // The sequence token to be used when calling AddBatchJobOperations again if
  // more operations need to be added. The next AddBatchJobOperations request
  // must set the sequence_token field to the value of this field.
  nextSequenceToken: string | undefined;
};

// Request message for [BatchJobService.ListBatchJobResults][google.ads.googleads.v9.services.BatchJobService.ListBatchJobResults].
export type ListBatchJobResultsRequest = {
  // Required. The resource name of the batch job whose results are being listed.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  pageToken: string | undefined;
  // Number of elements to retrieve in a single page.
  // When a page request is too large, the server may decide to
  // further limit the number of returned resources.
  pageSize: number | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for [BatchJobService.ListBatchJobResults][google.ads.googleads.v9.services.BatchJobService.ListBatchJobResults].
export type ListBatchJobResultsResponse = {
  // The list of rows that matched the query.
  results: BatchJobResult[] | undefined;
  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  nextPageToken: string | undefined;
};

// An individual batch job result.
export type BatchJobResult = {
  // Index of the mutate operation.
  operationIndex: number | undefined;
  // Response for the mutate.
  // May be empty if errors occurred.
  mutateOperationResponse: MutateOperationResponse | undefined;
  // Details of the errors when processing the operation.
  status: googlerpc_Status | undefined;
};

// Response message for the resource mutate.
export type MutateOperationResponse = {
  // The result for the ad group ad label mutate.
  adGroupAdLabelResult?: MutateAdGroupAdLabelResult;
  // The result for the ad group ad mutate.
  adGroupAdResult?: MutateAdGroupAdResult;
  // The result for the ad group asset mutate.
  adGroupAssetResult?: MutateAdGroupAssetResult;
  // The result for the ad group bid modifier mutate.
  adGroupBidModifierResult?: MutateAdGroupBidModifierResult;
  // The result for the ad group criterion customizer mutate.
  adGroupCriterionCustomizerResult?: MutateAdGroupCriterionCustomizerResult;
  // The result for the ad group criterion label mutate.
  adGroupCriterionLabelResult?: MutateAdGroupCriterionLabelResult;
  // The result for the ad group criterion mutate.
  adGroupCriterionResult?: MutateAdGroupCriterionResult;
  // The result for the ad group customizer mutate.
  adGroupCustomizerResult?: MutateAdGroupCustomizerResult;
  // The result for the ad group extension setting mutate.
  adGroupExtensionSettingResult?: MutateAdGroupExtensionSettingResult;
  // The result for the ad group feed mutate.
  adGroupFeedResult?: MutateAdGroupFeedResult;
  // The result for the ad group label mutate.
  adGroupLabelResult?: MutateAdGroupLabelResult;
  // The result for the ad group mutate.
  adGroupResult?: MutateAdGroupResult;
  // The result for the ad parameter mutate.
  adParameterResult?: MutateAdParameterResult;
  // The result for the ad mutate.
  adResult?: MutateAdResult;
  // The result for the asset mutate.
  assetResult?: MutateAssetResult;
  // The result for the asset group asset mutate.
  assetGroupAssetResult?: MutateAssetGroupAssetResult;
  // The result for the asset group listing group filter mutate.
  assetGroupListingGroupFilterResult?: MutateAssetGroupListingGroupFilterResult;
  // The result for the asset group mutate.
  assetGroupResult?: MutateAssetGroupResult;
  // The result for the asset set asset mutate.
  assetSetAssetResult?: MutateAssetSetAssetResult;
  // The result for the asset set mutate.
  assetSetResult?: MutateAssetSetResult;
  // The result for the bidding data exclusion mutate.
  biddingDataExclusionResult?: MutateBiddingDataExclusionsResult;
  // The result for the bidding seasonality adjustment mutate.
  biddingSeasonalityAdjustmentResult?: MutateBiddingSeasonalityAdjustmentsResult;
  // The result for the bidding strategy mutate.
  biddingStrategyResult?: MutateBiddingStrategyResult;
  // The result for the campaign asset mutate.
  campaignAssetResult?: MutateCampaignAssetResult;
  // The result for the campaign asset set mutate.
  campaignAssetSetResult?: MutateCampaignAssetSetResult;
  // The result for the campaign bid modifier mutate.
  campaignBidModifierResult?: MutateCampaignBidModifierResult;
  // The result for the campaign budget mutate.
  campaignBudgetResult?: MutateCampaignBudgetResult;
  // The result for the campaign conversion goal mutate.
  campaignConversionGoalResult?: MutateCampaignConversionGoalResult;
  // The result for the campaign criterion mutate.
  campaignCriterionResult?: MutateCampaignCriterionResult;
  // The result for the campaign customizer mutate.
  campaignCustomizerResult?: MutateCampaignCustomizerResult;
  // The result for the campaign draft mutate.
  campaignDraftResult?: MutateCampaignDraftResult;
  // The result for the campaign experiment mutate.
  campaignExperimentResult?: MutateCampaignExperimentResult;
  // The result for the campaign extension setting mutate.
  campaignExtensionSettingResult?: MutateCampaignExtensionSettingResult;
  // The result for the campaign feed mutate.
  campaignFeedResult?: MutateCampaignFeedResult;
  // The result for the campaign label mutate.
  campaignLabelResult?: MutateCampaignLabelResult;
  // The result for the campaign mutate.
  campaignResult?: MutateCampaignResult;
  // The result for the campaign shared set mutate.
  campaignSharedSetResult?: MutateCampaignSharedSetResult;
  // The result for the conversion action mutate.
  conversionActionResult?: MutateConversionActionResult;
  // The result for the conversion custom variable mutate.
  conversionCustomVariableResult?: MutateConversionCustomVariableResult;
  // The result for the conversion goal campaign config mutate.
  conversionGoalCampaignConfigResult?: MutateConversionGoalCampaignConfigResult;
  // The result for the conversion value rule mutate.
  conversionValueRuleResult?: MutateConversionValueRuleResult;
  // The result for the conversion value rule set mutate.
  conversionValueRuleSetResult?: MutateConversionValueRuleSetResult;
  // The result for the custom conversion goal mutate.
  customConversionGoalResult?: MutateCustomConversionGoalResult;
  // The result for the customer asset mutate.
  customerAssetResult?: MutateCustomerAssetResult;
  // The result for the customer conversion goal mutate.
  customerConversionGoalResult?: MutateCustomerConversionGoalResult;
  // The result for the customer customizer mutate.
  customerCustomizerResult?: MutateCustomerCustomizerResult;
  // The result for the customer extension setting mutate.
  customerExtensionSettingResult?: MutateCustomerExtensionSettingResult;
  // The result for the customer feed mutate.
  customerFeedResult?: MutateCustomerFeedResult;
  // The result for the customer label mutate.
  customerLabelResult?: MutateCustomerLabelResult;
  // The result for the customer negative criterion mutate.
  customerNegativeCriterionResult?: MutateCustomerNegativeCriteriaResult;
  // The result for the customer mutate.
  customerResult?: MutateCustomerResult;
  // The result for the customizer attribute mutate.
  customizerAttributeResult?: MutateCustomizerAttributeResult;
  // The result for the extension feed item mutate.
  extensionFeedItemResult?: MutateExtensionFeedItemResult;
  // The result for the feed item mutate.
  feedItemResult?: MutateFeedItemResult;
  // The result for the feed item set mutate.
  feedItemSetResult?: MutateFeedItemSetResult;
  // The result for the feed item set link mutate.
  feedItemSetLinkResult?: MutateFeedItemSetLinkResult;
  // The result for the feed item target mutate.
  feedItemTargetResult?: MutateFeedItemTargetResult;
  // The result for the feed mapping mutate.
  feedMappingResult?: MutateFeedMappingResult;
  // The result for the feed mutate.
  feedResult?: MutateFeedResult;
  // The result for the keyword plan ad group mutate.
  keywordPlanAdGroupResult?: MutateKeywordPlanAdGroupResult;
  // The result for the keyword plan campaign mutate.
  keywordPlanCampaignResult?: MutateKeywordPlanCampaignResult;
  // The result for the keyword plan ad group keyword mutate.
  keywordPlanAdGroupKeywordResult?: MutateKeywordPlanAdGroupKeywordResult;
  // The result for the keyword plan campaign keyword mutate.
  keywordPlanCampaignKeywordResult?: MutateKeywordPlanCampaignKeywordResult;
  // The result for the keyword plan mutate.
  keywordPlanResult?: MutateKeywordPlansResult;
  // The result for the label mutate.
  labelResult?: MutateLabelResult;
  // The result for the media file mutate.
  mediaFileResult?: MutateMediaFileResult;
  // The result for the remarketing action mutate.
  remarketingActionResult?: MutateRemarketingActionResult;
  // The result for the shared criterion mutate.
  sharedCriterionResult?: MutateSharedCriterionResult;
  // The result for the shared set mutate.
  sharedSetResult?: MutateSharedSetResult;
  // The result for the Smart campaign setting mutate.
  smartCampaignSettingResult?: MutateSmartCampaignSettingResult;
  // The result for the user list mutate.
  userListResult?: MutateUserListResult;
};

// The result for the ad mutate.
export type MutateAdGroupAdResult = {
  // The resource name returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad group ad with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adGroupAd: googleadsgoogleadsv9resources_AdGroupAd | undefined;
};

// The result for the ad group asset mutate.
export type MutateAdGroupAssetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad group asset with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  adGroupAsset: googleadsgoogleadsv9resources_AdGroupAsset | undefined;
};

// The result for the criterion mutate.
export type MutateAdGroupBidModifierResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad group bid modifier with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adGroupBidModifier: googleadsgoogleadsv9resources_AdGroupBidModifier | undefined;
};

// The result for an ad group criterion label mutate.
export type MutateAdGroupCriterionLabelResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the criterion mutate.
export type MutateAdGroupCriterionResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated ad group criterion with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adGroupCriterion: googleadsgoogleadsv9resources_AdGroupCriterion | undefined;
};

// The result for the ad group extension setting mutate.
export type MutateAdGroupExtensionSettingResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated AdGroupExtensionSetting with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adGroupExtensionSetting: googleadsgoogleadsv9resources_AdGroupExtensionSetting | undefined;
};

// The result for an ad group label mutate.
export type MutateAdGroupLabelResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the ad parameter mutate.
export type MutateAdParameterResult = {
  // The resource name returned for successful operations.
  resourceName: string | undefined;
  // The mutated AdParameter with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  adParameter: googleadsgoogleadsv9resources_AdParameter | undefined;
};

// The result for the asset group asset mutate.
export type MutateAssetGroupAssetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the asset group listing group filter mutate.
export type MutateAssetGroupListingGroupFilterResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated AssetGroupListingGroupFilter with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  assetGroupListingGroupFilter: googleadsgoogleadsv9resources_AssetGroupListingGroupFilter | undefined;
};

// The result for the asset set mutate.
export type MutateAssetSetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated asset set with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  assetSet: googleadsgoogleadsv9resources_AssetSet | undefined;
};

// The result for the data exclusion mutate.
export type MutateBiddingDataExclusionsResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated bidding data exclusion with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  biddingDataExclusion: googleadsgoogleadsv9resources_BiddingDataExclusion | undefined;
};

// The result for the bidding strategy mutate.
export type MutateBiddingStrategyResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated bidding strategy with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  biddingStrategy: googleadsgoogleadsv9resources_BiddingStrategy | undefined;
};

// The result for the campaign asset mutate.
export type MutateCampaignAssetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign asset with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  campaignAsset: googleadsgoogleadsv9resources_CampaignAsset | undefined;
};

// The result for the criterion mutate.
export type MutateCampaignBidModifierResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign bid modifier with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignBidModifier: googleadsgoogleadsv9resources_CampaignBidModifier | undefined;
};

// The result for the campaign budget mutate.
export type MutateCampaignBudgetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign budget with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignBudget: googleadsgoogleadsv9resources_CampaignBudget | undefined;
};

// The result for the campaign conversion goal mutate.
export type MutateCampaignConversionGoalResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the campaign customizer mutate.
export type MutateCampaignCustomizerResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated CampaignCustomizer with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignCustomizer: googleadsgoogleadsv9resources_CampaignCustomizer | undefined;
};

// The result for the campaign draft mutate.
export type MutateCampaignDraftResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign draft with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignDraft: googleadsgoogleadsv9resources_CampaignDraft | undefined;
};

// The result for the campaign extension setting mutate.
export type MutateCampaignExtensionSettingResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign extension setting with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  campaignExtensionSetting: googleadsgoogleadsv9resources_CampaignExtensionSetting | undefined;
};

// The result for the campaign feed mutate.
export type MutateCampaignFeedResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign feed with only mutable fields after mutate. The field
  // will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  campaignFeed: googleadsgoogleadsv9resources_CampaignFeed | undefined;
};

// The result for the campaign mutate.
export type MutateCampaignResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated campaign with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  campaign: googleadsgoogleadsv9resources_Campaign | undefined;
};

// The result for the conversion custom variable mutate.
export type MutateConversionCustomVariableResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated conversion custom variable with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  conversionCustomVariable: googleadsgoogleadsv9resources_ConversionCustomVariable | undefined;
};

// The result for the conversion value rule mutate.
export type MutateConversionValueRuleResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated conversion value rule with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  conversionValueRule: googleadsgoogleadsv9resources_ConversionValueRule | undefined;
};

// The result for the customer asset mutate.
export type MutateCustomerAssetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated customer asset with only mutable fields after
  // mutate. The field will only be returned when response_content_type is set
  // to "MUTABLE_RESOURCE".
  customerAsset: googleadsgoogleadsv9resources_CustomerAsset | undefined;
};

// The result for the customizer attribute mutate.
export type MutateCustomerCustomizerResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated CustomerCustomizer with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  customerCustomizer: googleadsgoogleadsv9resources_CustomerCustomizer | undefined;
};

// The result for the customer extension setting mutate.
export type MutateCustomerExtensionSettingResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated CustomerExtensionSetting with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  customerExtensionSetting: googleadsgoogleadsv9resources_CustomerExtensionSetting | undefined;
};

// The result for the criterion mutate.
export type MutateCustomerNegativeCriteriaResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated criterion with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  customerNegativeCriterion: googleadsgoogleadsv9resources_CustomerNegativeCriterion | undefined;
};

// The result for the customizer attribute mutate.
export type MutateCustomizerAttributeResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated CustomizerAttribute with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  customizerAttribute: googleadsgoogleadsv9resources_CustomizerAttribute | undefined;
};

// The result for the feed item mutate.
export type MutateFeedItemResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated feed item with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  feedItem: googleadsgoogleadsv9resources_FeedItem | undefined;
};

// The result for the feed item set mutate.
export type MutateFeedItemSetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the feed item target mutate.
export type MutateFeedItemTargetResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated feed item target with only mutable fields after mutate. The
  // field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  feedItemTarget: googleadsgoogleadsv9resources_FeedItemTarget | undefined;
};

// The result for the feed mutate.
export type MutateFeedResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated feed with only mutable fields after mutate. The field will only
  // be returned when response_content_type is set to "MUTABLE_RESOURCE".
  feed: googleadsgoogleadsv9resources_Feed | undefined;
};

// The result for the Keyword Plan ad group mutate.
export type MutateKeywordPlanAdGroupResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the Keyword Plan campaign mutate.
export type MutateKeywordPlanCampaignResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the Keyword Plan ad group keyword mutate.
export type MutateKeywordPlanAdGroupKeywordResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the Keyword Plan campaign keyword mutate.
export type MutateKeywordPlanCampaignKeywordResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the keyword plan mutate.
export type MutateKeywordPlansResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for a label mutate.
export type MutateLabelResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated label with only mutable fields after mutate. The field will
  // only be returned when response_content_type is set to "MUTABLE_RESOURCE".
  label: googleadsgoogleadsv9resources_Label | undefined;
};

// The result for the remarketing action mutate.
export type MutateRemarketingActionResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// The result for the Smart campaign setting mutate.
export type MutateSmartCampaignSettingResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
  // The mutated Smart campaign setting with only mutable fields after mutate.
  // The field will only be returned when response_content_type is set to
  // "MUTABLE_RESOURCE".
  smartCampaignSetting: googleadsgoogleadsv9resources_SmartCampaignSetting | undefined;
};

// The result for the user list mutate.
export type MutateUserListResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage batch jobs.
export interface BatchJobService {
  // Mutates a batch job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  MutateBatchJob(request: MutateBatchJobRequest): Promise<MutateBatchJobResponse>;
  // Returns the batch job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetBatchJob(request: GetBatchJobRequest): Promise<googleadsgoogleadsv9resources_BatchJob>;
  // Returns the results of the batch job. The job must be done.
  // Supports standard list paging.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BatchJobError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListBatchJobResults(request: ListBatchJobResultsRequest): Promise<ListBatchJobResultsResponse>;
  // Runs the batch job.
  // The Operation.metadata field type is BatchJobMetadata. When finished, the
  // long running operation will not contain errors or a response. Instead, use
  // ListBatchJobResults to get the results of the job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BatchJobError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  RunBatchJob(request: RunBatchJobRequest): Promise<googlelongrunning_Operation>;
  // Add operations to the batch job.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BatchJobError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  AddBatchJobOperations(request: AddBatchJobOperationsRequest): Promise<AddBatchJobOperationsResponse>;
}

export function createBatchJobServiceClient(
  handler: RequestHandler
): BatchJobService {
  return {
    MutateBatchJob(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/batchJobs:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateBatchJobResponse>;
    },
    GetBatchJob(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_BatchJob>;
    },
    ListBatchJobResults(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:listResults`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      if (request.pageToken) {
        queryParams.push("pageToken=" + encodeURIComponent(request.pageToken.toString()));
      }
      if (request.pageSize) {
        queryParams.push("pageSize=" + encodeURIComponent(request.pageSize.toString()));
      }
      if (request.responseContentType) {
        queryParams.push("responseContentType=" + encodeURIComponent(request.responseContentType.toString()));
      }
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListBatchJobResultsResponse>;
    },
    RunBatchJob(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:run`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<googlelongrunning_Operation>;
    },
    AddBatchJobOperations(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:addOperations`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<AddBatchJobOperationsResponse>;
    },
  };
}
// Request message for [CampaignFeedService.GetCampaignFeed][google.ads.googleads.v9.services.CampaignFeedService.GetCampaignFeed].
export type GetCampaignFeedRequest = {
  // Required. The resource name of the campaign feed to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignFeedService.MutateCampaignFeeds][google.ads.googleads.v9.services.CampaignFeedService.MutateCampaignFeeds].
export type MutateCampaignFeedsRequest = {
  // Required. The ID of the customer whose campaign feeds are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign feeds.
  //
  // Behaviors: REQUIRED
  operations: CampaignFeedOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for a campaign feed mutate.
export type MutateCampaignFeedsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignFeedResult[] | undefined;
};

// Service to manage campaign feeds.
export interface CampaignFeedService {
  // Returns the requested campaign feed in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignFeed(request: GetCampaignFeedRequest): Promise<googleadsgoogleadsv9resources_CampaignFeed>;
  // Creates, updates, or removes campaign feeds. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignFeedError]()
  // [CollectionSizeError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FunctionError]()
  // [FunctionParsingError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateCampaignFeeds(request: MutateCampaignFeedsRequest): Promise<MutateCampaignFeedsResponse>;
}

export function createCampaignFeedServiceClient(
  handler: RequestHandler
): CampaignFeedService {
  return {
    GetCampaignFeed(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignFeed>;
    },
    MutateCampaignFeeds(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignFeeds:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignFeedsResponse>;
    },
  };
}
// Request message for [TopicViewService.GetTopicView][google.ads.googleads.v9.services.TopicViewService.GetTopicView].
export type GetTopicViewRequest = {
  // Required. The resource name of the topic view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage topic views.
export interface TopicViewService {
  // Returns the requested topic view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetTopicView(request: GetTopicViewRequest): Promise<googleadsgoogleadsv9resources_TopicView>;
}

export function createTopicViewServiceClient(
  handler: RequestHandler
): TopicViewService {
  return {
    GetTopicView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_TopicView>;
    },
  };
}
// A topic view.
export type googleadsgoogleadsv9resources_TopicView = {
  // Output only. The resource name of the topic view.
  // Topic view resource names have the form:
  // `customers/{customer_id}/topicViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for
// [AssetGroupListingGroupFilterService.MutateAssetGroupListingGroupFilters][google.ads.googleads.v9.services.AssetGroupListingGroupFilterService.MutateAssetGroupListingGroupFilters].
// partial_failure is not supported because the tree needs to be validated
// together.
export type MutateAssetGroupListingGroupFiltersRequest = {
  // Required. The ID of the customer whose asset group listing group filters are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual asset group listing group
  // filters.
  //
  // Behaviors: REQUIRED
  operations: AssetGroupListingGroupFilterOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an asset group listing group filter mutate.
export type MutateAssetGroupListingGroupFiltersResponse = {
  // All results for the mutate.
  results: MutateAssetGroupListingGroupFilterResult[] | undefined;
};

// Service to manage asset group listing group filter.
export interface AssetGroupListingGroupFilterService {
  // Creates, updates or removes asset group listing group filters. Operation
  // statuses are returned.
  MutateAssetGroupListingGroupFilters(request: MutateAssetGroupListingGroupFiltersRequest): Promise<MutateAssetGroupListingGroupFiltersResponse>;
}

export function createAssetGroupListingGroupFilterServiceClient(
  handler: RequestHandler
): AssetGroupListingGroupFilterService {
  return {
    MutateAssetGroupListingGroupFilters(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/assetGroupListingGroupFilters:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAssetGroupListingGroupFiltersResponse>;
    },
  };
}
// Request message for [VideoService.GetVideo][google.ads.googleads.v9.services.VideoService.GetVideo].
export type GetVideoRequest = {
  // Required. The resource name of the video to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage videos.
export interface VideoService {
  // Returns the requested video in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetVideo(request: GetVideoRequest): Promise<googleadsgoogleadsv9resources_Video>;
}

export function createVideoServiceClient(
  handler: RequestHandler
): VideoService {
  return {
    GetVideo(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Video>;
    },
  };
}
// A video.
export type googleadsgoogleadsv9resources_Video = {
  // Output only. The resource name of the video.
  // Video resource names have the form:
  // `customers/{customer_id}/videos/{video_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the video.
  //
  // Behaviors: OUTPUT_ONLY
  id?: string;
  // Output only. The owner channel id of the video.
  //
  // Behaviors: OUTPUT_ONLY
  channelId?: string;
  // Output only. The duration of the video in milliseconds.
  //
  // Behaviors: OUTPUT_ONLY
  durationMillis?: number;
  // Output only. The title of the video.
  //
  // Behaviors: OUTPUT_ONLY
  title?: string;
};

// Request message for
// [ProductBiddingCategoryConstantService.GetProductBiddingCategoryConstant][google.ads.googleads.v9.services.ProductBiddingCategoryConstantService.GetProductBiddingCategoryConstant].
export type GetProductBiddingCategoryConstantRequest = {
  // Required. Resource name of the Product Bidding Category to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Product Bidding Categories.
export interface ProductBiddingCategoryConstantService {
  // Returns the requested Product Bidding Category in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetProductBiddingCategoryConstant(request: GetProductBiddingCategoryConstantRequest): Promise<googleadsgoogleadsv9resources_ProductBiddingCategoryConstant>;
}

export function createProductBiddingCategoryConstantServiceClient(
  handler: RequestHandler
): ProductBiddingCategoryConstantService {
  return {
    GetProductBiddingCategoryConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ProductBiddingCategoryConstant>;
    },
  };
}
// A Product Bidding Category.
export type googleadsgoogleadsv9resources_ProductBiddingCategoryConstant = {
  // Output only. The resource name of the product bidding category.
  // Product bidding category resource names have the form:
  // `productBiddingCategoryConstants/{country_code}~{level}~{id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. ID of the product bidding category.
  // This ID is equivalent to the google_product_category ID as described in
  // this article: https://support.google.com/merchants/answer/6324436.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. Two-letter upper-case country code of the product bidding category.
  //
  // Behaviors: OUTPUT_ONLY
  countryCode?: string;
  // Output only. Resource name of the parent product bidding category.
  //
  // Behaviors: OUTPUT_ONLY
  productBiddingCategoryConstantParent?: string;
  // Output only. Level of the product bidding category.
  //
  // Behaviors: OUTPUT_ONLY
  level: googleadsgoogleadsv9enums_ProductBiddingCategoryLevelEnum_ProductBiddingCategoryLevel | undefined;
  // Output only. Status of the product bidding category.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_ProductBiddingCategoryStatusEnum_ProductBiddingCategoryStatus | undefined;
  // Output only. Language code of the product bidding category.
  //
  // Behaviors: OUTPUT_ONLY
  languageCode?: string;
  // Output only. Display value of the product bidding category localized according to
  // language_code.
  //
  // Behaviors: OUTPUT_ONLY
  localizedName?: string;
};

// Enum describing the status of the product bidding category.
export type googleadsgoogleadsv9enums_ProductBiddingCategoryStatusEnum_ProductBiddingCategoryStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The category is active and can be used for bidding.
  | "ACTIVE"
  // The category is obsolete. Used only for reporting purposes.
  | "OBSOLETE";
// Request message for [TopicConstantService.GetTopicConstant][google.ads.googleads.v9.services.TopicConstantService.GetTopicConstant].
export type GetTopicConstantRequest = {
  // Required. Resource name of the Topic to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch topic constants.
export interface TopicConstantService {
  // Returns the requested topic constant in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetTopicConstant(request: GetTopicConstantRequest): Promise<googleadsgoogleadsv9resources_TopicConstant>;
}

export function createTopicConstantServiceClient(
  handler: RequestHandler
): TopicConstantService {
  return {
    GetTopicConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_TopicConstant>;
    },
  };
}
// Use topics to target or exclude placements in the Google Display Network
// based on the category into which the placement falls (for example,
// "Pets & Animals/Pets/Dogs").
export type googleadsgoogleadsv9resources_TopicConstant = {
  // Output only. The resource name of the topic constant.
  // topic constant resource names have the form:
  // `topicConstants/{topic_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the topic.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. Resource name of parent of the topic constant.
  //
  // Behaviors: OUTPUT_ONLY
  topicConstantParent?: string;
  // Output only. The category to target or exclude. Each subsequent element in the array
  // describes a more specific sub-category. For example,
  // {"Pets & Animals", "Pets", "Dogs"} represents the
  // "Pets & Animals/Pets/Dogs" category. List of available topic categories at
  // https://developers.google.com/adwords/api/docs/appendix/verticals
  //
  // Behaviors: OUTPUT_ONLY
  path: string[] | undefined;
};

// Request message for
// [CampaignExtensionSettingService.GetCampaignExtensionSetting][google.ads.googleads.v9.services.CampaignExtensionSettingService.GetCampaignExtensionSetting].
export type GetCampaignExtensionSettingRequest = {
  // Required. The resource name of the campaign extension setting to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [CampaignExtensionSettingService.MutateCampaignExtensionSettings][google.ads.googleads.v9.services.CampaignExtensionSettingService.MutateCampaignExtensionSettings].
export type MutateCampaignExtensionSettingsRequest = {
  // Required. The ID of the customer whose campaign extension settings are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign extension
  // settings.
  //
  // Behaviors: REQUIRED
  operations: CampaignExtensionSettingOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for a campaign extension setting mutate.
export type MutateCampaignExtensionSettingsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignExtensionSettingResult[] | undefined;
};

// Service to manage campaign extension settings.
export interface CampaignExtensionSettingService {
  // Returns the requested campaign extension setting in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignExtensionSetting(request: GetCampaignExtensionSettingRequest): Promise<googleadsgoogleadsv9resources_CampaignExtensionSetting>;
  // Creates, updates, or removes campaign extension settings. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [ExtensionSettingError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateCampaignExtensionSettings(request: MutateCampaignExtensionSettingsRequest): Promise<MutateCampaignExtensionSettingsResponse>;
}

export function createCampaignExtensionSettingServiceClient(
  handler: RequestHandler
): CampaignExtensionSettingService {
  return {
    GetCampaignExtensionSetting(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignExtensionSetting>;
    },
    MutateCampaignExtensionSettings(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignExtensionSettings:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignExtensionSettingsResponse>;
    },
  };
}
// Request message for [MerchantCenterLinkService.ListMerchantCenterLinks][google.ads.googleads.v9.services.MerchantCenterLinkService.ListMerchantCenterLinks].
export type ListMerchantCenterLinksRequest = {
  // Required. The ID of the customer onto which to apply the Merchant Center link list
  // operation.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
};

// Response message for [MerchantCenterLinkService.ListMerchantCenterLinks][google.ads.googleads.v9.services.MerchantCenterLinkService.ListMerchantCenterLinks].
export type ListMerchantCenterLinksResponse = {
  // Merchant Center links available for the requested customer
  merchantCenterLinks: googleadsgoogleadsv9resources_MerchantCenterLink[] | undefined;
};

// A data sharing connection, proposed or in use,
// between a Google Ads Customer and a Merchant Center account.
export type googleadsgoogleadsv9resources_MerchantCenterLink = {
  // Immutable. The resource name of the merchant center link.
  // Merchant center link resource names have the form:
  // `customers/{customer_id}/merchantCenterLinks/{merchant_center_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the Merchant Center account.
  // This field is readonly.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The name of the Merchant Center account.
  // This field is readonly.
  //
  // Behaviors: OUTPUT_ONLY
  merchantCenterAccountName?: string;
  // The status of the link.
  status: googleadsgoogleadsv9enums_MerchantCenterLinkStatusEnum_MerchantCenterLinkStatus | undefined;
};

// Describes the possible statuses for a link between a Google Ads customer
// and a Google Merchant Center account.
export type googleadsgoogleadsv9enums_MerchantCenterLinkStatusEnum_MerchantCenterLinkStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The link is enabled.
  | "ENABLED"
  // The link has no effect. It was proposed by the Merchant Center Account
  // owner and hasn't been confirmed by the customer.
  | "PENDING";
// Request message for [MerchantCenterLinkService.GetMerchantCenterLink][google.ads.googleads.v9.services.MerchantCenterLinkService.GetMerchantCenterLink].
export type GetMerchantCenterLinkRequest = {
  // Required. Resource name of the Merchant Center link.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [MerchantCenterLinkService.MutateMerchantCenterLink][google.ads.googleads.v9.services.MerchantCenterLinkService.MutateMerchantCenterLink].
export type MutateMerchantCenterLinkRequest = {
  // Required. The ID of the customer being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on the link
  //
  // Behaviors: REQUIRED
  operation: MerchantCenterLinkOperation | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single update on a Merchant Center link.
export type MerchantCenterLinkOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The merchant center link is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_MerchantCenterLink;
  // Remove operation: A resource name for the removed merchant center link is
  // expected, in this format:
  // `customers/{customer_id}/merchantCenterLinks/{merchant_center_id}`
  remove?: string;
};

// Response message for Merchant Center link mutate.
export type MutateMerchantCenterLinkResponse = {
  // Result for the mutate.
  result: MutateMerchantCenterLinkResult | undefined;
};

// The result for the Merchant Center link mutate.
export type MutateMerchantCenterLinkResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// This service allows management of links between Google Ads and Google
// Merchant Center.
export interface MerchantCenterLinkService {
  // Returns Merchant Center links available for this customer.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListMerchantCenterLinks(request: ListMerchantCenterLinksRequest): Promise<ListMerchantCenterLinksResponse>;
  // Returns the Merchant Center link in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetMerchantCenterLink(request: GetMerchantCenterLinkRequest): Promise<googleadsgoogleadsv9resources_MerchantCenterLink>;
  // Updates status or removes a Merchant Center link.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateMerchantCenterLink(request: MutateMerchantCenterLinkRequest): Promise<MutateMerchantCenterLinkResponse>;
}

export function createMerchantCenterLinkServiceClient(
  handler: RequestHandler
): MerchantCenterLinkService {
  return {
    ListMerchantCenterLinks(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/merchantCenterLinks`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListMerchantCenterLinksResponse>;
    },
    GetMerchantCenterLink(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_MerchantCenterLink>;
    },
    MutateMerchantCenterLink(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/merchantCenterLinks:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateMerchantCenterLinkResponse>;
    },
  };
}
// Request message for
// [BiddingDataExclusionService.GetBiddingDataExclusion][google.ads.googleads.v9.services.BiddingDataExclusionService.GetBiddingDataExclusion].
export type GetBiddingDataExclusionRequest = {
  // Required. The resource name of the data exclusion to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [BiddingDataExclusionService.MutateBiddingDataExclusions][google.ads.googleads.v9.services.BiddingDataExclusionService.MutateBiddingDataExclusions].
export type MutateBiddingDataExclusionsRequest = {
  // Required. ID of the customer whose data exclusions are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual data exclusions.
  //
  // Behaviors: REQUIRED
  operations: BiddingDataExclusionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for data exlusions mutate.
export type MutateBiddingDataExclusionsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateBiddingDataExclusionsResult[] | undefined;
};

// Service to manage bidding data exclusions.
export interface BiddingDataExclusionService {
  // Returns the requested data exclusion in full detail.
  GetBiddingDataExclusion(request: GetBiddingDataExclusionRequest): Promise<googleadsgoogleadsv9resources_BiddingDataExclusion>;
  // Creates, updates, or removes data exclusions.
  // Operation statuses are returned.
  MutateBiddingDataExclusions(request: MutateBiddingDataExclusionsRequest): Promise<MutateBiddingDataExclusionsResponse>;
}

export function createBiddingDataExclusionServiceClient(
  handler: RequestHandler
): BiddingDataExclusionService {
  return {
    GetBiddingDataExclusion(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_BiddingDataExclusion>;
    },
    MutateBiddingDataExclusions(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/biddingDataExclusions:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateBiddingDataExclusionsResponse>;
    },
  };
}
// Request message for '[ChangeStatusService.GetChangeStatus][google.ads.googleads.v9.services.ChangeStatusService.GetChangeStatus]'.
export type GetChangeStatusRequest = {
  // Required. The resource name of the change status to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch change statuses.
export interface ChangeStatusService {
  // Returns the requested change status in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetChangeStatus(request: GetChangeStatusRequest): Promise<googleadsgoogleadsv9resources_ChangeStatus>;
}

export function createChangeStatusServiceClient(
  handler: RequestHandler
): ChangeStatusService {
  return {
    GetChangeStatus(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ChangeStatus>;
    },
  };
}
// Describes the status of returned resource. ChangeStatus could have up to 3
// minutes delay to reflect a new change.
export type googleadsgoogleadsv9resources_ChangeStatus = {
  // Output only. The resource name of the change status.
  // Change status resource names have the form:
  // `customers/{customer_id}/changeStatus/{change_status_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Time at which the most recent change has occurred on this resource.
  //
  // Behaviors: OUTPUT_ONLY
  lastChangeDateTime?: string;
  // Output only. Represents the type of the changed resource. This dictates what fields
  // will be set. For example, for AD_GROUP, campaign and ad_group fields will
  // be set.
  //
  // Behaviors: OUTPUT_ONLY
  resourceType: googleadsgoogleadsv9enums_ChangeStatusResourceTypeEnum_ChangeStatusResourceType | undefined;
  // Output only. The Campaign affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  campaign?: string;
  // Output only. The AdGroup affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroup?: string;
  // Output only. Represents the status of the changed resource.
  //
  // Behaviors: OUTPUT_ONLY
  resourceStatus: googleadsgoogleadsv9enums_ChangeStatusOperationEnum_ChangeStatusOperation | undefined;
  // Output only. The AdGroupAd affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupAd?: string;
  // Output only. The AdGroupCriterion affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupCriterion?: string;
  // Output only. The CampaignCriterion affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  campaignCriterion?: string;
  // Output only. The Feed affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  feed?: string;
  // Output only. The FeedItem affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  feedItem?: string;
  // Output only. The AdGroupFeed affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupFeed?: string;
  // Output only. The CampaignFeed affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  campaignFeed?: string;
  // Output only. The AdGroupBidModifier affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupBidModifier?: string;
  // Output only. The SharedSet affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  sharedSet: string | undefined;
  // Output only. The CampaignSharedSet affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  campaignSharedSet: string | undefined;
  // Output only. The Asset affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  asset: string | undefined;
  // Output only. The CustomerAsset affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  customerAsset: string | undefined;
  // Output only. The CampaignAsset affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  campaignAsset: string | undefined;
  // Output only. The AdGroupAsset affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupAsset: string | undefined;
};

// Enum listing the resource types support by the ChangeStatus resource.
export type googleadsgoogleadsv9enums_ChangeStatusResourceTypeEnum_ChangeStatusResourceType =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents an unclassified resource unknown
  // in this version.
  | "UNKNOWN"
  // An AdGroup resource change.
  | "AD_GROUP"
  // An AdGroupAd resource change.
  | "AD_GROUP_AD"
  // An AdGroupCriterion resource change.
  | "AD_GROUP_CRITERION"
  // A Campaign resource change.
  | "CAMPAIGN"
  // A CampaignCriterion resource change.
  | "CAMPAIGN_CRITERION"
  // A Feed resource change.
  | "FEED"
  // A FeedItem resource change.
  | "FEED_ITEM"
  // An AdGroupFeed resource change.
  | "AD_GROUP_FEED"
  // A CampaignFeed resource change.
  | "CAMPAIGN_FEED"
  // An AdGroupBidModifier resource change.
  | "AD_GROUP_BID_MODIFIER"
  // A SharedSet resource change.
  | "SHARED_SET"
  // A CampaignSharedSet resource change.
  | "CAMPAIGN_SHARED_SET"
  // An Asset resource change.
  | "ASSET"
  // A CustomerAsset resource change.
  | "CUSTOMER_ASSET"
  // A CampaignAsset resource change.
  | "CAMPAIGN_ASSET"
  // An AdGroupAsset resource change.
  | "AD_GROUP_ASSET";
// Status of the changed resource
export type googleadsgoogleadsv9enums_ChangeStatusOperationEnum_ChangeStatusOperation =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents an unclassified resource unknown
  // in this version.
  | "UNKNOWN"
  // The resource was created.
  | "ADDED"
  // The resource was modified.
  | "CHANGED"
  // The resource was removed.
  | "REMOVED";
// Request message for [AdGroupAssetService.GetAdGroupAsset][google.ads.googleads.v9.services.AdGroupAssetService.GetAdGroupAsset].
export type GetAdGroupAssetRequest = {
  // Required. The resource name of the ad group asset to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupAssetService.MutateAdGroupAssets][google.ads.googleads.v9.services.AdGroupAssetService.MutateAdGroupAssets].
export type MutateAdGroupAssetsRequest = {
  // Required. The ID of the customer whose ad group assets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad group assets.
  //
  // Behaviors: REQUIRED
  operations: AdGroupAssetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an ad group asset mutate.
export type MutateAdGroupAssetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupAssetResult[] | undefined;
};

// Service to manage ad group assets.
export interface AdGroupAssetService {
  // Returns the requested ad group asset in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupAsset(request: GetAdGroupAssetRequest): Promise<googleadsgoogleadsv9resources_AdGroupAsset>;
  // Creates, updates, or removes ad group assets. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AssetLinkError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ContextError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [NotAllowlistedError]()
  // [QuotaError]()
  // [RequestError]()
  MutateAdGroupAssets(request: MutateAdGroupAssetsRequest): Promise<MutateAdGroupAssetsResponse>;
}

export function createAdGroupAssetServiceClient(
  handler: RequestHandler
): AdGroupAssetService {
  return {
    GetAdGroupAsset(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupAsset>;
    },
    MutateAdGroupAssets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupAssets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupAssetsResponse>;
    },
  };
}
// Request message for [FeedItemSetService.GetFeedItemSet][google.ads.googleads.v9.services.FeedItemSetService.GetFeedItemSet].
export type GetFeedItemSetRequest = {
  // Required. The resource name of the feed item set to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [FeedItemSetService.MutateFeedItemSets][google.ads.googleads.v9.services.FeedItemSetService.MutateFeedItemSets].
export type MutateFeedItemSetsRequest = {
  // Required. The ID of the customer whose feed item sets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual feed item sets.
  //
  // Behaviors: REQUIRED
  operations: FeedItemSetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for an feed item set mutate.
export type MutateFeedItemSetsResponse = {
  // All results for the mutate.
  results: MutateFeedItemSetResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage feed Item Set
export interface FeedItemSetService {
  // Returns the requested feed item set in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeedItemSet(request: GetFeedItemSetRequest): Promise<googleadsgoogleadsv9resources_FeedItemSet>;
  // Creates, updates or removes feed item sets. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateFeedItemSets(request: MutateFeedItemSetsRequest): Promise<MutateFeedItemSetsResponse>;
}

export function createFeedItemSetServiceClient(
  handler: RequestHandler
): FeedItemSetService {
  return {
    GetFeedItemSet(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_FeedItemSet>;
    },
    MutateFeedItemSets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/feedItemSets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateFeedItemSetsResponse>;
    },
  };
}
// Request message for [CampaignService.GetCampaign][google.ads.googleads.v9.services.CampaignService.GetCampaign].
export type GetCampaignRequest = {
  // Required. The resource name of the campaign to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignService.MutateCampaigns][google.ads.googleads.v9.services.CampaignService.MutateCampaigns].
export type MutateCampaignsRequest = {
  // Required. The ID of the customer whose campaigns are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaigns.
  //
  // Behaviors: REQUIRED
  operations: CampaignOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for campaign mutate.
export type MutateCampaignsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignResult[] | undefined;
};

// Service to manage campaigns.
export interface CampaignService {
  // Returns the requested campaign in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaign(request: GetCampaignRequest): Promise<googleadsgoogleadsv9resources_Campaign>;
  // Creates, updates, or removes campaigns. Operation statuses are returned.
  // List of thrown errors:
  // [AdxError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BiddingError]()
  // [BiddingStrategyError]()
  // [CampaignBudgetError]()
  // [CampaignError]()
  // [ContextError]()
  // [DatabaseError]()
  // [DateError]()
  // [DateRangeError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotAllowlistedError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RegionCodeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SettingError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateCampaigns(request: MutateCampaignsRequest): Promise<MutateCampaignsResponse>;
}

export function createCampaignServiceClient(
  handler: RequestHandler
): CampaignService {
  return {
    GetCampaign(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Campaign>;
    },
    MutateCampaigns(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaigns:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignsResponse>;
    },
  };
}
// Request message for [CustomerClientService.GetCustomerClient][google.ads.googleads.v9.services.CustomerClientService.GetCustomerClient].
export type GetCustomerClientRequest = {
  // Required. The resource name of the client to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to get clients in a customer's hierarchy.
export interface CustomerClientService {
  // Returns the requested client in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerClient(request: GetCustomerClientRequest): Promise<googleadsgoogleadsv9resources_CustomerClient>;
}

export function createCustomerClientServiceClient(
  handler: RequestHandler
): CustomerClientService {
  return {
    GetCustomerClient(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerClient>;
    },
  };
}
// A link between the given customer and a client customer. CustomerClients only
// exist for manager customers. All direct and indirect client customers are
// included, as well as the manager itself.
export type googleadsgoogleadsv9resources_CustomerClient = {
  // Output only. The resource name of the customer client.
  // CustomerClient resource names have the form:
  // `customers/{customer_id}/customerClients/{client_customer_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The resource name of the client-customer which is linked to
  // the given customer. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  clientCustomer?: string;
  // Output only. Specifies whether this is a
  // [hidden account](https://support.google.com/google-ads/answer/7519830).
  // Read only.
  //
  // Behaviors: OUTPUT_ONLY
  hidden?: boolean;
  // Output only. Distance between given customer and client. For self link, the level value
  // will be 0. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  level?: number;
  // Output only. Common Locale Data Repository (CLDR) string representation of the
  // time zone of the client, e.g. America/Los_Angeles. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  timeZone?: string;
  // Output only. Identifies if the client is a test account. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  testAccount?: boolean;
  // Output only. Identifies if the client is a manager. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  manager?: boolean;
  // Output only. Descriptive name for the client. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  descriptiveName?: string;
  // Output only. Currency code (e.g. 'USD', 'EUR') for the client. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  currencyCode?: string;
  // Output only. The ID of the client customer. Read only.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The resource names of the labels owned by the requesting customer that are
  // applied to the client customer.
  // Label resource names have the form:
  // `customers/{customer_id}/labels/{label_id}`
  //
  // Behaviors: OUTPUT_ONLY
  appliedLabels: string[] | undefined;
};

// Request message for [HotelGroupViewService.GetHotelGroupView][google.ads.googleads.v9.services.HotelGroupViewService.GetHotelGroupView].
export type GetHotelGroupViewRequest = {
  // Required. Resource name of the Hotel Group View to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage Hotel Group Views.
export interface HotelGroupViewService {
  // Returns the requested Hotel Group View in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetHotelGroupView(request: GetHotelGroupViewRequest): Promise<googleadsgoogleadsv9resources_HotelGroupView>;
}

export function createHotelGroupViewServiceClient(
  handler: RequestHandler
): HotelGroupViewService {
  return {
    GetHotelGroupView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_HotelGroupView>;
    },
  };
}
// A hotel group view.
export type googleadsgoogleadsv9resources_HotelGroupView = {
  // Output only. The resource name of the hotel group view.
  // Hotel Group view resource names have the form:
  // `customers/{customer_id}/hotelGroupViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [LocationViewService.GetLocationView][google.ads.googleads.v9.services.LocationViewService.GetLocationView].
export type GetLocationViewRequest = {
  // Required. The resource name of the location view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch location views.
export interface LocationViewService {
  // Returns the requested location view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetLocationView(request: GetLocationViewRequest): Promise<googleadsgoogleadsv9resources_LocationView>;
}

export function createLocationViewServiceClient(
  handler: RequestHandler
): LocationViewService {
  return {
    GetLocationView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_LocationView>;
    },
  };
}
// A location view summarizes the performance of campaigns by
// Location criteria.
export type googleadsgoogleadsv9resources_LocationView = {
  // Output only. The resource name of the location view.
  // Location view resource names have the form:
  // `customers/{customer_id}/locationViews/{campaign_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [CustomInterestService.GetCustomInterest][google.ads.googleads.v9.services.CustomInterestService.GetCustomInterest].
export type GetCustomInterestRequest = {
  // Required. The resource name of the custom interest to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomInterestService.MutateCustomInterests][google.ads.googleads.v9.services.CustomInterestService.MutateCustomInterests].
export type MutateCustomInterestsRequest = {
  // Required. The ID of the customer whose custom interests are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual custom interests.
  //
  // Behaviors: REQUIRED
  operations: CustomInterestOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, update) on a custom interest.
export type CustomInterestOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new custom
  // interest.
  create?: googleadsgoogleadsv9resources_CustomInterest;
  // Update operation: The custom interest is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CustomInterest;
};

// A custom interest. This is a list of users by interest.
export type googleadsgoogleadsv9resources_CustomInterest = {
  // Immutable. The resource name of the custom interest.
  // Custom interest resource names have the form:
  // `customers/{customer_id}/customInterests/{custom_interest_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. Id of the custom interest.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Status of this custom interest. Indicates whether the custom interest is
  // enabled or removed.
  status: googleadsgoogleadsv9enums_CustomInterestStatusEnum_CustomInterestStatus | undefined;
  // Name of the custom interest. It should be unique across the same custom
  // affinity audience.
  // This field is required for create operations.
  name?: string;
  // Type of the custom interest, CUSTOM_AFFINITY or CUSTOM_INTENT.
  // By default the type is set to CUSTOM_AFFINITY.
  type: googleadsgoogleadsv9enums_CustomInterestTypeEnum_CustomInterestType | undefined;
  // Description of this custom interest audience.
  description?: string;
  // List of custom interest members that this custom interest is composed of.
  // Members can be added during CustomInterest creation. If members are
  // presented in UPDATE operation, existing members will be overridden.
  members: googleadsgoogleadsv9resources_CustomInterestMember[] | undefined;
};

// Enum containing possible custom interest types.
export type googleadsgoogleadsv9enums_CustomInterestStatusEnum_CustomInterestStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Enabled status - custom interest is enabled and can be targeted to.
  | "ENABLED"
  // Removed status - custom interest is removed and cannot be used for
  // targeting.
  | "REMOVED";
// Enum containing possible custom interest types.
export type googleadsgoogleadsv9enums_CustomInterestTypeEnum_CustomInterestType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Allows brand advertisers to define custom affinity audience lists.
  | "CUSTOM_AFFINITY"
  // Allows advertisers to define custom intent audience lists.
  | "CUSTOM_INTENT";
// A member of custom interest audience. A member can be a keyword or url.
// It is immutable, that is, it can only be created or removed but not changed.
export type googleadsgoogleadsv9resources_CustomInterestMember = {
  // The type of custom interest member, KEYWORD or URL.
  memberType: googleadsgoogleadsv9enums_CustomInterestMemberTypeEnum_CustomInterestMemberType | undefined;
  // Keyword text when member_type is KEYWORD or URL string when
  // member_type is URL.
  parameter?: string;
};

// Enum containing possible custom interest member types.
export type googleadsgoogleadsv9enums_CustomInterestMemberTypeEnum_CustomInterestMemberType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Custom interest member type KEYWORD.
  | "KEYWORD"
  // Custom interest member type URL.
  | "URL";
// Response message for custom interest mutate.
export type MutateCustomInterestsResponse = {
  // All results for the mutate.
  results: MutateCustomInterestResult[] | undefined;
};

// The result for the custom interest mutate.
export type MutateCustomInterestResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage custom interests.
export interface CustomInterestService {
  // Returns the requested custom interest in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomInterest(request: GetCustomInterestRequest): Promise<googleadsgoogleadsv9resources_CustomInterest>;
  // Creates or updates custom interests. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CriterionError]()
  // [CustomInterestError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [PolicyViolationError]()
  // [QuotaError]()
  // [RequestError]()
  // [StringLengthError]()
  MutateCustomInterests(request: MutateCustomInterestsRequest): Promise<MutateCustomInterestsResponse>;
}

export function createCustomInterestServiceClient(
  handler: RequestHandler
): CustomInterestService {
  return {
    GetCustomInterest(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomInterest>;
    },
    MutateCustomInterests(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customInterests:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomInterestsResponse>;
    },
  };
}
// Request message for
// [CustomerCustomizerService.MutateCustomerCustomizers][google.ads.googleads.v9.services.CustomerCustomizerService.MutateCustomerCustomizers].
export type MutateCustomerCustomizersRequest = {
  // Required. The ID of the customer whose customer customizers are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customer customizers.
  //
  // Behaviors: REQUIRED
  operations: CustomerCustomizerOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an customizer attribute mutate.
export type MutateCustomerCustomizersResponse = {
  // All results for the mutate.
  results: MutateCustomerCustomizerResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage customer customizer
export interface CustomerCustomizerService {
  // Creates, updates or removes customer customizers. Operation statuses are
  // returned.
  MutateCustomerCustomizers(request: MutateCustomerCustomizersRequest): Promise<MutateCustomerCustomizersResponse>;
}

export function createCustomerCustomizerServiceClient(
  handler: RequestHandler
): CustomerCustomizerService {
  return {
    MutateCustomerCustomizers(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/CustomerCustomizers:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerCustomizersResponse>;
    },
  };
}
// Request message for [DetailedDemographicService.GetDetailedDemographic][google.ads.googleads.v9.services.DetailedDemographicService.GetDetailedDemographic].
export type GetDetailedDemographicRequest = {
  // Required. Resource name of the DetailedDemographic to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Google Ads Detailed Demographics.
export interface DetailedDemographicService {
  // Returns the requested detailed demographic in full detail.
  GetDetailedDemographic(request: GetDetailedDemographicRequest): Promise<googleadsgoogleadsv9resources_DetailedDemographic>;
}

export function createDetailedDemographicServiceClient(
  handler: RequestHandler
): DetailedDemographicService {
  return {
    GetDetailedDemographic(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_DetailedDemographic>;
    },
  };
}
// A detailed demographic: a particular interest-based vertical to be targeted
// to reach users based on long-term life facts.
export type googleadsgoogleadsv9resources_DetailedDemographic = {
  // Output only. The resource name of the detailed demographic.
  // Detailed demographic resource names have the form:
  // `customers/{customer_id}/detailedDemographics/{detailed_demographic_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the detailed demographic.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Output only. The name of the detailed demographic. E.g."Highest Level of Educational
  // Attainment"
  //
  // Behaviors: OUTPUT_ONLY
  name: string | undefined;
  // Output only. The parent of the detailed_demographic.
  //
  // Behaviors: OUTPUT_ONLY
  parent: string | undefined;
  // Output only. True if the detailed demographic is launched to all channels and locales.
  //
  // Behaviors: OUTPUT_ONLY
  launchedToAll: boolean | undefined;
  // Output only. Availability information of the detailed demographic.
  //
  // Behaviors: OUTPUT_ONLY
  availabilities: googleadsgoogleadsv9common_CriterionCategoryAvailability[] | undefined;
};

// Information of category availability, per advertising channel.
export type googleadsgoogleadsv9common_CriterionCategoryAvailability = {
  // Channel types and subtypes that are available to the category.
  channel: googleadsgoogleadsv9common_CriterionCategoryChannelAvailability | undefined;
  // Locales that are available to the category for the channel.
  locale: googleadsgoogleadsv9common_CriterionCategoryLocaleAvailability[] | undefined;
};

// Information of advertising channel type and subtypes a category is available
// in.
export type googleadsgoogleadsv9common_CriterionCategoryChannelAvailability = {
  // Format of the channel availability. Can be ALL_CHANNELS (the rest of the
  // fields will not be set), CHANNEL_TYPE (only advertising_channel_type type
  // will be set, the category is available to all sub types under it) or
  // CHANNEL_TYPE_AND_SUBTYPES (advertising_channel_type,
  // advertising_channel_sub_type, and include_default_channel_sub_type will all
  // be set).
  availabilityMode: googleadsgoogleadsv9enums_CriterionCategoryChannelAvailabilityModeEnum_CriterionCategoryChannelAvailabilityMode | undefined;
  // Channel type the category is available to.
  advertisingChannelType: googleadsgoogleadsv9enums_AdvertisingChannelTypeEnum_AdvertisingChannelType | undefined;
  // Channel subtypes under the channel type the category is available to.
  advertisingChannelSubType: googleadsgoogleadsv9enums_AdvertisingChannelSubTypeEnum_AdvertisingChannelSubType[] | undefined;
  // Whether default channel sub type is included. For example,
  // advertising_channel_type being DISPLAY and include_default_channel_sub_type
  // being false means that the default display campaign where channel sub type
  // is not set is not included in this availability configuration.
  includeDefaultChannelSubType?: boolean;
};

// Enum containing the possible CriterionCategoryChannelAvailabilityMode.
export type googleadsgoogleadsv9enums_CriterionCategoryChannelAvailabilityModeEnum_CriterionCategoryChannelAvailabilityMode =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The category is available to campaigns of all channel types and subtypes.
  | "ALL_CHANNELS"
  // The category is available to campaigns of a specific channel type,
  // including all subtypes under it.
  | "CHANNEL_TYPE_AND_ALL_SUBTYPES"
  // The category is available to campaigns of a specific channel type and
  // subtype(s).
  | "CHANNEL_TYPE_AND_SUBSET_SUBTYPES";
// Information about which locales a category is available in.
export type googleadsgoogleadsv9common_CriterionCategoryLocaleAvailability = {
  // Format of the locale availability. Can be LAUNCHED_TO_ALL (both country and
  // language will be empty), COUNTRY (only country will be set), LANGUAGE (only
  // language wil be set), COUNTRY_AND_LANGUAGE (both country and language will
  // be set).
  availabilityMode: googleadsgoogleadsv9enums_CriterionCategoryLocaleAvailabilityModeEnum_CriterionCategoryLocaleAvailabilityMode | undefined;
  // Code of the country.
  countryCode?: string;
  // Code of the language.
  languageCode?: string;
};

// Enum containing the possible CriterionCategoryLocaleAvailabilityMode.
export type googleadsgoogleadsv9enums_CriterionCategoryLocaleAvailabilityModeEnum_CriterionCategoryLocaleAvailabilityMode =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The category is available to campaigns of all locales.
  | "ALL_LOCALES"
  // The category is available to campaigns within a list of countries,
  // regardless of language.
  | "COUNTRY_AND_ALL_LANGUAGES"
  // The category is available to campaigns within a list of languages,
  // regardless of country.
  | "LANGUAGE_AND_ALL_COUNTRIES"
  // The category is available to campaigns within a list of country, language
  // pairs.
  | "COUNTRY_AND_LANGUAGE";
// Request message for
// [CustomizerAttributeService.MutateCustomizerAttributes][google.ads.googleads.v9.services.CustomizerAttributeService.MutateCustomizerAttributes].
export type MutateCustomizerAttributesRequest = {
  // Required. The ID of the customer whose customizer attributes are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customizer attributes.
  //
  // Behaviors: REQUIRED
  operations: CustomizerAttributeOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an customizer attribute mutate.
export type MutateCustomizerAttributesResponse = {
  // All results for the mutate.
  results: MutateCustomizerAttributeResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage customizer attribute
export interface CustomizerAttributeService {
  // Creates, updates or removes customizer attributes. Operation statuses are
  // returned.
  MutateCustomizerAttributes(request: MutateCustomizerAttributesRequest): Promise<MutateCustomizerAttributesResponse>;
}

export function createCustomizerAttributeServiceClient(
  handler: RequestHandler
): CustomizerAttributeService {
  return {
    MutateCustomizerAttributes(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customizerAttributes:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomizerAttributesResponse>;
    },
  };
}
// Request message for [ManagedPlacementViewService.GetManagedPlacementView][google.ads.googleads.v9.services.ManagedPlacementViewService.GetManagedPlacementView].
export type GetManagedPlacementViewRequest = {
  // Required. The resource name of the Managed Placement View to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage Managed Placement views.
export interface ManagedPlacementViewService {
  // Returns the requested Managed Placement view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetManagedPlacementView(request: GetManagedPlacementViewRequest): Promise<googleadsgoogleadsv9resources_ManagedPlacementView>;
}

export function createManagedPlacementViewServiceClient(
  handler: RequestHandler
): ManagedPlacementViewService {
  return {
    GetManagedPlacementView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ManagedPlacementView>;
    },
  };
}
// A managed placement view.
export type googleadsgoogleadsv9resources_ManagedPlacementView = {
  // Output only. The resource name of the Managed Placement view.
  // Managed placement view resource names have the form:
  // `customers/{customer_id}/managedPlacementViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [CampaignAudienceViewService.GetCampaignAudienceView][google.ads.googleads.v9.services.CampaignAudienceViewService.GetCampaignAudienceView].
export type GetCampaignAudienceViewRequest = {
  // Required. The resource name of the campaign audience view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage campaign audience views.
export interface CampaignAudienceViewService {
  // Returns the requested campaign audience view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignAudienceView(request: GetCampaignAudienceViewRequest): Promise<googleadsgoogleadsv9resources_CampaignAudienceView>;
}

export function createCampaignAudienceViewServiceClient(
  handler: RequestHandler
): CampaignAudienceViewService {
  return {
    GetCampaignAudienceView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignAudienceView>;
    },
  };
}
// A campaign audience view.
// Includes performance data from interests and remarketing lists for Display
// Network and YouTube Network ads, and remarketing lists for search ads (RLSA),
// aggregated by campaign and audience criterion. This view only includes
// audiences attached at the campaign level.
export type googleadsgoogleadsv9resources_CampaignAudienceView = {
  // Output only. The resource name of the campaign audience view.
  // Campaign audience view resource names have the form:
  // `customers/{customer_id}/campaignAudienceViews/{campaign_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for [ProductGroupViewService.GetProductGroupView][google.ads.googleads.v9.services.ProductGroupViewService.GetProductGroupView].
export type GetProductGroupViewRequest = {
  // Required. The resource name of the product group view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage product group views.
export interface ProductGroupViewService {
  // Returns the requested product group view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetProductGroupView(request: GetProductGroupViewRequest): Promise<googleadsgoogleadsv9resources_ProductGroupView>;
}

export function createProductGroupViewServiceClient(
  handler: RequestHandler
): ProductGroupViewService {
  return {
    GetProductGroupView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ProductGroupView>;
    },
  };
}
// A product group view.
export type googleadsgoogleadsv9resources_ProductGroupView = {
  // Output only. The resource name of the product group view.
  // Product group view resource names have the form:
  // `customers/{customer_id}/productGroupViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Request message for
// [BillingSetupService.GetBillingSetup][google.ads.googleads.v9.services.BillingSetupService.GetBillingSetup].
export type GetBillingSetupRequest = {
  // Required. The resource name of the billing setup to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for billing setup mutate operations.
export type MutateBillingSetupRequest = {
  // Required. Id of the customer to apply the billing setup mutate operation to.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform.
  //
  // Behaviors: REQUIRED
  operation: BillingSetupOperation | undefined;
};

// A single operation on a billing setup, which describes the cancellation of an
// existing billing setup.
export type BillingSetupOperation = {
  // Creates a billing setup. No resource name is expected for the new billing
  // setup.
  create?: googleadsgoogleadsv9resources_BillingSetup;
  // Resource name of the billing setup to remove. A setup cannot be
  // removed unless it is in a pending state or its scheduled start time is in
  // the future. The resource name looks like
  // `customers/{customer_id}/billingSetups/{billing_id}`.
  remove?: string;
};

// A billing setup, which associates a payments account and an advertiser. A
// billing setup is specific to one advertiser.
export type googleadsgoogleadsv9resources_BillingSetup = {
  // Immutable. The resource name of the billing setup.
  // BillingSetup resource names have the form:
  // `customers/{customer_id}/billingSetups/{billing_setup_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the billing setup.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The status of the billing setup.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_BillingSetupStatusEnum_BillingSetupStatus | undefined;
  // Immutable. The resource name of the payments account associated with this billing
  // setup. Payments resource names have the form:
  // `customers/{customer_id}/paymentsAccounts/{payments_account_id}`
  // When setting up billing, this is used to signup with an existing payments
  // account (and then payments_account_info should not be set).
  // When getting a billing setup, this and payments_account_info will be
  // populated.
  //
  // Behaviors: IMMUTABLE
  paymentsAccount?: string;
  // Immutable. The payments account information associated with this billing setup.
  // When setting up billing, this is used to signup with a new payments account
  // (and then payments_account should not be set).
  // When getting a billing setup, this and payments_account will be
  // populated.
  //
  // Behaviors: IMMUTABLE
  paymentsAccountInfo: googleadsgoogleadsv9resources_BillingSetup_PaymentsAccountInfo | undefined;
  // Immutable. The start date time in yyyy-MM-dd or yyyy-MM-dd HH:mm:ss format. Only a
  // future time is allowed.
  //
  // Behaviors: IMMUTABLE
  startDateTime?: string;
  // Immutable. The start time as a type. Only NOW is allowed.
  //
  // Behaviors: IMMUTABLE
  startTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Output only. The end date time in yyyy-MM-dd or yyyy-MM-dd HH:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  endDateTime?: string;
  // Output only. The end time as a type.  The only possible value is FOREVER.
  //
  // Behaviors: OUTPUT_ONLY
  endTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
};

// The possible statuses of a BillingSetup.
export type googleadsgoogleadsv9enums_BillingSetupStatusEnum_BillingSetupStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The billing setup is pending approval.
  | "PENDING"
  // The billing setup has been approved but the corresponding first budget
  // has not.  This can only occur for billing setups configured for monthly
  // invoicing.
  | "APPROVED_HELD"
  // The billing setup has been approved.
  | "APPROVED"
  // The billing setup was cancelled by the user prior to approval.
  | "CANCELLED";
// Container of payments account information for this billing.
export type googleadsgoogleadsv9resources_BillingSetup_PaymentsAccountInfo = {
  // Output only. A 16 digit id used to identify the payments account associated with the
  // billing setup.
  // This must be passed as a string with dashes, e.g. "1234-5678-9012-3456".
  //
  // Behaviors: OUTPUT_ONLY
  paymentsAccountId?: string;
  // Immutable. The name of the payments account associated with the billing setup.
  // This enables the user to specify a meaningful name for a payments account
  // to aid in reconciling monthly invoices.
  // This name will be printed in the monthly invoices.
  //
  // Behaviors: IMMUTABLE
  paymentsAccountName?: string;
  // Immutable. A 12 digit id used to identify the payments profile associated with the
  // billing setup.
  // This must be passed in as a string with dashes, e.g. "1234-5678-9012".
  //
  // Behaviors: IMMUTABLE
  paymentsProfileId?: string;
  // Output only. The name of the payments profile associated with the billing setup.
  //
  // Behaviors: OUTPUT_ONLY
  paymentsProfileName?: string;
  // Output only. A secondary payments profile id present in uncommon situations, e.g.
  // when a sequential liability agreement has been arranged.
  //
  // Behaviors: OUTPUT_ONLY
  secondaryPaymentsProfileId?: string;
};

// Response message for a billing setup operation.
export type MutateBillingSetupResponse = {
  // A result that identifies the resource affected by the mutate request.
  result: MutateBillingSetupResult | undefined;
};

// Result for a single billing setup mutate.
export type MutateBillingSetupResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// A service for designating the business entity responsible for accrued costs.
// A billing setup is associated with a payments account.  Billing-related
// activity for all billing setups associated with a particular payments account
// will appear on a single invoice generated monthly.
// Mutates:
// The REMOVE operation cancels a pending billing setup.
// The CREATE operation creates a new billing setup.
export interface BillingSetupService {
  // Returns a billing setup.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetBillingSetup(request: GetBillingSetupRequest): Promise<googleadsgoogleadsv9resources_BillingSetup>;
  // Creates a billing setup, or cancels an existing billing setup.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BillingSetupError]()
  // [DateError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateBillingSetup(request: MutateBillingSetupRequest): Promise<MutateBillingSetupResponse>;
}

export function createBillingSetupServiceClient(
  handler: RequestHandler
): BillingSetupService {
  return {
    GetBillingSetup(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_BillingSetup>;
    },
    MutateBillingSetup(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/billingSetups:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateBillingSetupResponse>;
    },
  };
}
// Request message for [AccountLinkService.GetAccountLink][google.ads.googleads.v9.services.AccountLinkService.GetAccountLink].
export type GetAccountLinkRequest = {
  // Required. Resource name of the account link.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [AccountLinkService.CreateAccountLink][google.ads.googleads.v9.services.AccountLinkService.CreateAccountLink].
export type CreateAccountLinkRequest = {
  // Required. The ID of the customer for which the account link is created.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The account link to be created.
  //
  // Behaviors: REQUIRED
  accountLink: googleadsgoogleadsv9resources_AccountLink | undefined;
};

// Represents the data sharing connection between a Google Ads account and
// another account
export type googleadsgoogleadsv9resources_AccountLink = {
  // Immutable. Resource name of the account link.
  // AccountLink resource names have the form:
  // `customers/{customer_id}/accountLinks/{account_link_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the link.
  // This field is read only.
  //
  // Behaviors: OUTPUT_ONLY
  accountLinkId?: number;
  // The status of the link.
  status: googleadsgoogleadsv9enums_AccountLinkStatusEnum_AccountLinkStatus | undefined;
  // Output only. The type of the linked account.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_LinkedAccountTypeEnum_LinkedAccountType | undefined;
  // Immutable. A third party app analytics link.
  //
  // Behaviors: IMMUTABLE
  thirdPartyAppAnalytics?: googleadsgoogleadsv9resources_ThirdPartyAppAnalyticsLinkIdentifier;
  // Output only. Data partner link.
  //
  // Behaviors: OUTPUT_ONLY
  dataPartner?: googleadsgoogleadsv9resources_DataPartnerLinkIdentifier;
  // Output only. Google Ads link.
  //
  // Behaviors: OUTPUT_ONLY
  googleAds?: googleadsgoogleadsv9resources_GoogleAdsLinkIdentifier;
};

// Describes the possible statuses for a link between a Google Ads customer
// and another account.
export type googleadsgoogleadsv9enums_AccountLinkStatusEnum_AccountLinkStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The link is enabled.
  | "ENABLED"
  // The link is removed/disabled.
  | "REMOVED"
  // The link to the other account has been requested. A user on the other
  // account may now approve the link by setting the status to ENABLED.
  | "REQUESTED"
  // This link has been requested by a user on the other account. It may be
  // approved by a user on this account by setting the status to ENABLED.
  | "PENDING_APPROVAL"
  // The link is rejected by the approver.
  | "REJECTED"
  // The link is revoked by the user who requested the link.
  | "REVOKED";
// Describes the possible link types between a Google Ads customer
// and another account.
export type googleadsgoogleadsv9enums_LinkedAccountTypeEnum_LinkedAccountType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // A link to provide third party app analytics data.
  | "THIRD_PARTY_APP_ANALYTICS"
  // A link to Data partner.
  | "DATA_PARTNER"
  // A link to Google Ads.
  | "GOOGLE_ADS";
// The identifiers of a Third Party App Analytics Link.
export type googleadsgoogleadsv9resources_ThirdPartyAppAnalyticsLinkIdentifier = {
  // Immutable. The ID of the app analytics provider.
  // This field should not be empty when creating a new third
  // party app analytics link. It is unable to be modified after the creation of
  // the link.
  //
  // Behaviors: IMMUTABLE
  appAnalyticsProviderId?: number;
  // Immutable. A string that uniquely identifies a mobile application from which the data
  // was collected to the Google Ads API. For iOS, the ID string is the 9 digit
  // string that appears at the end of an App Store URL (e.g., "422689480" for
  // "Gmail" whose App Store link is
  // https://apps.apple.com/us/app/gmail-email-by-google/id422689480). For
  // Android, the ID string is the application's package name (e.g.,
  // "com.google.android.gm" for "Gmail" given Google Play link
  // https://play.google.com/store/apps/details?id=com.google.android.gm)
  // This field should not be empty when creating a new third
  // party app analytics link. It is unable to be modified after the creation of
  // the link.
  //
  // Behaviors: IMMUTABLE
  appId?: string;
  // Immutable. The vendor of the app.
  // This field should not be empty when creating a new third
  // party app analytics link. It is unable to be modified after the creation of
  // the link.
  //
  // Behaviors: IMMUTABLE
  appVendor: googleadsgoogleadsv9enums_MobileAppVendorEnum_MobileAppVendor | undefined;
};

// The identifier for Data Partner account.
export type googleadsgoogleadsv9resources_DataPartnerLinkIdentifier = {
  // Immutable. The customer ID of the Data partner account.
  // This field is required and should not be empty when creating a new
  // data partner link. It is unable to be modified after the creation of
  // the link.
  //
  // Behaviors: IMMUTABLE
  dataPartnerId?: number;
};

// The identifier for Google Ads account.
export type googleadsgoogleadsv9resources_GoogleAdsLinkIdentifier = {
  // Immutable. The resource name of the Google Ads account.
  // This field is required and should not be empty when creating a new
  // Google Ads link. It is unable to be modified after the creation of
  // the link.
  //
  // Behaviors: IMMUTABLE
  customer?: string;
};

// Response message for
// [AccountLinkService.CreateAccountLink][google.ads.googleads.v9.services.AccountLinkService.CreateAccountLink].
export type CreateAccountLinkResponse = {
  // Returned for successful operations. Resource name of the account link.
  resourceName: string | undefined;
};

// Request message for [AccountLinkService.MutateAccountLink][google.ads.googleads.v9.services.AccountLinkService.MutateAccountLink].
export type MutateAccountLinkRequest = {
  // Required. The ID of the customer being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on the link.
  //
  // Behaviors: REQUIRED
  operation: AccountLinkOperation | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single update on an account link.
export type AccountLinkOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The account link is expected to have
  // a valid resource name.
  update?: googleadsgoogleadsv9resources_AccountLink;
  // Remove operation: A resource name for the account link to remove is
  // expected, in this format:
  // `customers/{customer_id}/accountLinks/{account_link_id}`
  remove?: string;
};

// Response message for account link mutate.
export type MutateAccountLinkResponse = {
  // Result for the mutate.
  result: MutateAccountLinkResult | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result for the account link mutate.
export type MutateAccountLinkResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// This service allows management of links between Google Ads accounts and other
// accounts.
export interface AccountLinkService {
  // Returns the account link in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAccountLink(request: GetAccountLinkRequest): Promise<googleadsgoogleadsv9resources_AccountLink>;
  // Creates an account link.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  // [ThirdPartyAppAnalyticsLinkError]()
  CreateAccountLink(request: CreateAccountLinkRequest): Promise<CreateAccountLinkResponse>;
  // Creates or removes an account link.
  // From V5, create is not supported through
  // AccountLinkService.MutateAccountLink. Please use
  // AccountLinkService.CreateAccountLink instead.
  // List of thrown errors:
  // [AccountLinkError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateAccountLink(request: MutateAccountLinkRequest): Promise<MutateAccountLinkResponse>;
}

export function createAccountLinkServiceClient(
  handler: RequestHandler
): AccountLinkService {
  return {
    GetAccountLink(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AccountLink>;
    },
    CreateAccountLink(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/accountLinks:create`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<CreateAccountLinkResponse>;
    },
    MutateAccountLink(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/accountLinks:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAccountLinkResponse>;
    },
  };
}
// Request message for [ReachPlanService.ListPlannableLocations][google.ads.googleads.v9.services.ReachPlanService.ListPlannableLocations].
export type ListPlannableLocationsRequest = {
};

// The list of plannable locations.
export type ListPlannableLocationsResponse = {
  // The list of locations available for planning (Countries, DMAs,
  // sub-countries).
  // For locations like Countries and DMAs see
  // https://developers.google.com/google-ads/api/reference/data/geotargets for
  // more information.
  plannableLocations: PlannableLocation[] | undefined;
};

// A plannable location: a country, a DMA, a metro region, a tv region,
// a province.
export type PlannableLocation = {
  // The location identifier.
  id?: string;
  // The unique location name in english.
  name?: string;
  // The parent country, not present if location is a country.
  // If present will always be a GeoTargetConstant ID. Additional information,
  // such as country name is provided by
  // [ReachPlanService.ListPlannableLocations][google.ads.googleads.v9.services.ReachPlanService.ListPlannableLocations] or directly by accessing
  // [GeoTargetConstantService.GetGeoTargetConstant][google.ads.googleads.v9.services.GeoTargetConstantService.GetGeoTargetConstant].
  parentCountryId?: number;
  // The ISO-3166-1 alpha-2 country code that is associated with the location.
  countryCode?: string;
  // The location's type. Location types correspond to target_type returned by
  // [GeoTargetConstantService.GetGeoTargetConstant][google.ads.googleads.v9.services.GeoTargetConstantService.GetGeoTargetConstant].
  locationType?: string;
};

// Request to list available products in a given location.
export type ListPlannableProductsRequest = {
  // Required. The ID of the selected location for planning. To list the available
  // plannable location ids use [ReachPlanService.ListPlannableLocations][google.ads.googleads.v9.services.ReachPlanService.ListPlannableLocations].
  //
  // Behaviors: REQUIRED
  plannableLocationId: string | undefined;
};

// A response with all available products.
export type ListPlannableProductsResponse = {
  // The list of products available for planning and related targeting metadata.
  productMetadata: ProductMetadata[] | undefined;
};

// The metadata associated with an available plannable product.
export type ProductMetadata = {
  // The code associated with the ad product. E.g. BUMPER, TRUEVIEW_IN_STREAM
  // To list the available plannable product codes use ListPlannableProducts.
  plannableProductCode?: string;
  // The name associated with the ad product.
  plannableProductName: string | undefined;
  // The allowed plannable targeting for this product.
  plannableTargeting: PlannableTargeting | undefined;
};

// The targeting for which traffic metrics will be reported.
export type PlannableTargeting = {
  // Allowed plannable age ranges for the product for which metrics will be
  // reported. Actual targeting is computed by mapping this age range onto
  // standard Google common.AgeRangeInfo values.
  ageRanges: googleadsgoogleadsv9enums_ReachPlanAgeRangeEnum_ReachPlanAgeRange[] | undefined;
  // Targetable genders for the ad product.
  genders: googleadsgoogleadsv9common_GenderInfo[] | undefined;
  // Targetable devices for the ad product.
  // TABLET device targeting is automatically applied to reported metrics
  // when MOBILE targeting is selected for CPM_MASTHEAD,
  // GOOGLE_PREFERRED_BUMPER and GOOGLE_PREFERRED_SHORT products.
  devices: googleadsgoogleadsv9common_DeviceInfo[] | undefined;
  // Targetable networks for the ad product.
  networks: googleadsgoogleadsv9enums_ReachPlanNetworkEnum_ReachPlanNetwork[] | undefined;
};

// Possible plannable age range values.
export type googleadsgoogleadsv9enums_ReachPlanAgeRangeEnum_ReachPlanAgeRange =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Between 18 and 24 years old.
  | "AGE_RANGE_18_24"
  // Between 18 and 34 years old.
  | "AGE_RANGE_18_34"
  // Between 18 and 44 years old.
  | "AGE_RANGE_18_44"
  // Between 18 and 49 years old.
  | "AGE_RANGE_18_49"
  // Between 18 and 54 years old.
  | "AGE_RANGE_18_54"
  // Between 18 and 64 years old.
  | "AGE_RANGE_18_64"
  // Between 18 and 65+ years old.
  | "AGE_RANGE_18_65_UP"
  // Between 21 and 34 years old.
  | "AGE_RANGE_21_34"
  // Between 25 and 34 years old.
  | "AGE_RANGE_25_34"
  // Between 25 and 44 years old.
  | "AGE_RANGE_25_44"
  // Between 25 and 49 years old.
  | "AGE_RANGE_25_49"
  // Between 25 and 54 years old.
  | "AGE_RANGE_25_54"
  // Between 25 and 64 years old.
  | "AGE_RANGE_25_64"
  // Between 25 and 65+ years old.
  | "AGE_RANGE_25_65_UP"
  // Between 35 and 44 years old.
  | "AGE_RANGE_35_44"
  // Between 35 and 49 years old.
  | "AGE_RANGE_35_49"
  // Between 35 and 54 years old.
  | "AGE_RANGE_35_54"
  // Between 35 and 64 years old.
  | "AGE_RANGE_35_64"
  // Between 35 and 65+ years old.
  | "AGE_RANGE_35_65_UP"
  // Between 45 and 54 years old.
  | "AGE_RANGE_45_54"
  // Between 45 and 64 years old.
  | "AGE_RANGE_45_64"
  // Between 45 and 65+ years old.
  | "AGE_RANGE_45_65_UP"
  // Between 50 and 65+ years old.
  | "AGE_RANGE_50_65_UP"
  // Between 55 and 64 years old.
  | "AGE_RANGE_55_64"
  // Between 55 and 65+ years old.
  | "AGE_RANGE_55_65_UP"
  // 65 years old and beyond.
  | "AGE_RANGE_65_UP";
// Possible plannable network values.
export type googleadsgoogleadsv9enums_ReachPlanNetworkEnum_ReachPlanNetwork =
  // Not specified.
  | "UNSPECIFIED"
  // Used as a return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // YouTube network.
  | "YOUTUBE"
  // Google Video Partners (GVP) network.
  | "GOOGLE_VIDEO_PARTNERS"
  // A combination of the YouTube network and the Google Video Partners
  // network.
  | "YOUTUBE_AND_GOOGLE_VIDEO_PARTNERS";
// Request message for [ReachPlanService.GenerateProductMixIdeas][google.ads.googleads.v9.services.ReachPlanService.GenerateProductMixIdeas].
export type GenerateProductMixIdeasRequest = {
  // Required. The ID of the customer.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The ID of the location, this is one of the ids returned by
  // [ReachPlanService.ListPlannableLocations][google.ads.googleads.v9.services.ReachPlanService.ListPlannableLocations].
  //
  // Behaviors: REQUIRED
  plannableLocationId: string | undefined;
  // Required. Currency code.
  // Three-character ISO 4217 currency code.
  //
  // Behaviors: REQUIRED
  currencyCode: string | undefined;
  // Required. Total budget.
  // Amount in micros. One million is equivalent to one unit.
  //
  // Behaviors: REQUIRED
  budgetMicros: number | undefined;
  // The preferences of the suggested product mix.
  // An unset preference is interpreted as all possible values are allowed,
  // unless explicitly specified.
  preferences: Preferences | undefined;
};

// Set of preferences about the planned mix.
export type Preferences = {
  // True if ad skippable.
  // If not set, default is any value.
  isSkippable?: boolean;
  // True if ad start with sound.
  // If not set, default is any value.
  startsWithSound?: boolean;
  // The length of the ad.
  // If not set, default is any value.
  adLength: googleadsgoogleadsv9enums_ReachPlanAdLengthEnum_ReachPlanAdLength | undefined;
  // True if ad will only show on the top content.
  // If not set, default is false.
  topContentOnly?: boolean;
  // True if the price guaranteed. The cost of serving the ad is agreed upfront
  // and not subject to an auction.
  // If not set, default is any value.
  hasGuaranteedPrice?: boolean;
};

// Possible ad length values.
export type googleadsgoogleadsv9enums_ReachPlanAdLengthEnum_ReachPlanAdLength =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // 6 seconds long ad.
  | "SIX_SECONDS"
  // 15 or 20 seconds long ad.
  | "FIFTEEN_OR_TWENTY_SECONDS"
  // More than 20 seconds long ad.
  | "TWENTY_SECONDS_OR_MORE";
// The suggested product mix.
export type GenerateProductMixIdeasResponse = {
  // A list of products (ad formats) and the associated budget allocation idea.
  productAllocation: ProductAllocation[] | undefined;
};

// An allocation of a part of the budget on a given product.
export type ProductAllocation = {
  // Selected product for planning. The product codes returned are within the
  // set of the ones returned by ListPlannableProducts when using the same
  // location ID.
  plannableProductCode?: string;
  // The value to be allocated for the suggested product in requested currency.
  // Amount in micros. One million is equivalent to one unit.
  budgetMicros?: number;
};

// Request message for [ReachPlanService.GenerateReachForecast][google.ads.googleads.v9.services.ReachPlanService.GenerateReachForecast].
export type GenerateReachForecastRequest = {
  // Required. The ID of the customer.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // The currency code.
  // Three-character ISO 4217 currency code.
  currencyCode?: string;
  // Required. Campaign duration.
  //
  // Behaviors: REQUIRED
  campaignDuration: CampaignDuration | undefined;
  // Desired cookie frequency cap that will be applied to each planned product.
  // This is equivalent to the frequency cap exposed in Google Ads when creating
  // a campaign, it represents the maximum number of times an ad can be shown to
  // the same user.
  // If not specified no cap is applied.
  // This field is deprecated in v4 and will eventually be removed.
  // Please use cookie_frequency_cap_setting instead.
  cookieFrequencyCap?: number;
  // Desired cookie frequency cap that will be applied to each planned product.
  // This is equivalent to the frequency cap exposed in Google Ads when creating
  // a campaign, it represents the maximum number of times an ad can be shown to
  // the same user during a specified time interval.
  // If not specified, a default of 0 (no cap) is applied.
  // This field replaces the deprecated cookie_frequency_cap field.
  cookieFrequencyCapSetting: FrequencyCap | undefined;
  // Desired minimum effective frequency (the number of times a person was
  // exposed to the ad) for the reported reach metrics [1-10].
  // This won't affect the targeting, but just the reporting.
  // If not specified, a default of 1 is applied.
  // This field cannot be combined with the effective_frequency_limit field.
  minEffectiveFrequency?: number;
  // The highest minimum effective frequency (the number of times a person was
  // exposed to the ad) value [1-10] to include in
  // Forecast.effective_frequency_breakdowns.
  // If not specified, Forecast.effective_frequency_breakdowns will not be
  // provided.
  // The effective frequency value provided here will also be used as the
  // minimum effective frequency for the reported reach metrics.
  // This field cannot be combined with the min_effective_frequency field.
  effectiveFrequencyLimit?: EffectiveFrequencyLimit;
  // The targeting to be applied to all products selected in the product mix.
  // This is planned targeting: execution details might vary based on the
  // advertising product, please consult an implementation specialist.
  // See specific metrics for details on how targeting affects them.
  targeting: Targeting | undefined;
  // Required. The products to be forecast.
  // The max number of allowed planned products is 15.
  //
  // Behaviors: REQUIRED
  plannedProducts: PlannedProduct[] | undefined;
};

// The duration of a planned campaign.
export type CampaignDuration = {
  // The duration value in days.
  // This field cannot be combined with the date_range field.
  durationInDays?: number;
  // Date range of the campaign.
  // Dates are in the yyyy-mm-dd format and inclusive.
  // The end date must be < 1 year in the future and the
  // date range must be <= 92 days long.
  // This field cannot be combined with the duration_in_days field.
  dateRange: googleadsgoogleadsv9common_DateRange | undefined;
};

// A rule specifying the maximum number of times an ad can be shown to a user
// over a particular time period.
export type FrequencyCap = {
  // Required. The number of impressions, inclusive.
  //
  // Behaviors: REQUIRED
  impressions: number | undefined;
  // Required. The type of time unit.
  //
  // Behaviors: REQUIRED
  timeUnit: googleadsgoogleadsv9enums_FrequencyCapTimeUnitEnum_FrequencyCapTimeUnit | undefined;
};

// Effective frequency limit.
export type EffectiveFrequencyLimit = {
  // The highest effective frequency value to include in
  // Forecast.effective_frequency_breakdowns.
  // This field supports frequencies 1-10, inclusive.
  effectiveFrequencyBreakdownLimit: number | undefined;
};

// The targeting for which traffic metrics will be reported.
export type Targeting = {
  // Required. The ID of the selected location. Plannable location IDs can be
  // obtained from [ReachPlanService.ListPlannableLocations][google.ads.googleads.v9.services.ReachPlanService.ListPlannableLocations].
  plannableLocationId?: string;
  // Targeted age range.
  // An unset value is equivalent to targeting all ages.
  ageRange: googleadsgoogleadsv9enums_ReachPlanAgeRangeEnum_ReachPlanAgeRange | undefined;
  // Targeted genders.
  // An unset value is equivalent to targeting MALE and FEMALE.
  genders: googleadsgoogleadsv9common_GenderInfo[] | undefined;
  // Targeted devices.
  // If not specified, targets all applicable devices. Applicable devices vary
  // by product and region and can be obtained from
  // [ReachPlanService.ListPlannableProducts][google.ads.googleads.v9.services.ReachPlanService.ListPlannableProducts].
  devices: googleadsgoogleadsv9common_DeviceInfo[] | undefined;
  // Targetable network for the ad product.
  // If not specified, targets all applicable networks. Applicable networks vary
  // by product and region and can be obtained from
  // [ReachPlanService.ListPlannableProducts][google.ads.googleads.v9.services.ReachPlanService.ListPlannableProducts].
  network: googleadsgoogleadsv9enums_ReachPlanNetworkEnum_ReachPlanNetwork | undefined;
};

// A product being planned for reach.
export type PlannedProduct = {
  // Required. Selected product for planning.
  // The code associated with the ad product. E.g. Trueview, Bumper
  // To list the available plannable product codes use
  // [ReachPlanService.ListPlannableProducts][google.ads.googleads.v9.services.ReachPlanService.ListPlannableProducts].
  plannableProductCode?: string;
  // Required. Maximum budget allocation in micros for the selected product.
  // The value is specified in the selected planning currency_code.
  // E.g. 1 000 000$ = 1 000 000 000 000 micros.
  budgetMicros?: number;
};

// Response message containing the generated reach curve.
export type GenerateReachForecastResponse = {
  // Reference on target audiences for this curve.
  onTargetAudienceMetrics: OnTargetAudienceMetrics | undefined;
  // The generated reach curve for the planned product mix.
  reachCurve: ReachCurve | undefined;
};

// Audience metrics for the planned products.
// These metrics consider the following targeting dimensions:
// - Location
// - PlannableAgeRange
// - Gender
export type OnTargetAudienceMetrics = {
  // Reference audience size matching the considered targeting for YouTube.
  youtubeAudienceSize?: number;
  // Reference audience size matching the considered targeting for Census.
  censusAudienceSize?: number;
};

// The reach curve for the planned products.
export type ReachCurve = {
  // All points on the reach curve.
  reachForecasts: ReachForecast[] | undefined;
};

// A point on reach curve.
export type ReachForecast = {
  // The cost in micros.
  costMicros: number | undefined;
  // Forecasted traffic metrics for this point.
  forecast: Forecast | undefined;
  // The forecasted allocation and traffic metrics for each planned product
  // at this point on the reach curve.
  plannedProductReachForecasts: PlannedProductReachForecast[] | undefined;
};

// Forecasted traffic metrics for the planned products and targeting.
export type Forecast = {
  // Number of unique people reached at least
  // GenerateReachForecastRequest.min_effective_frequency or
  // GenerateReachForecastRequest.effective_frequency_limit times that exactly
  // matches the Targeting.
  // Note that a minimum number of unique people must be reached in order for
  // data to be reported. If the minimum number is not met, the on_target_reach
  // value will be rounded to 0.
  onTargetReach?: number;
  // Total number of unique people reached at least
  // GenerateReachForecastRequest.min_effective_frequency or
  // GenerateReachForecastRequest.effective_frequency_limit times. This includes
  // people that may fall outside the specified Targeting.
  // Note that a minimum number of unique people must be reached in order for
  // data to be reported. If the minimum number is not met, the total_reach
  // value will be rounded to 0.
  totalReach?: number;
  // Number of ad impressions that exactly matches the Targeting.
  onTargetImpressions?: number;
  // Total number of ad impressions. This includes impressions that may fall
  // outside the specified Targeting, due to insufficient information on
  // signed-in users.
  totalImpressions?: number;
  // Number of times the ad's impressions were considered viewable.
  // See https://support.google.com/google-ads/answer/7029393 for
  // more information about what makes an ad viewable and how
  // viewability is measured.
  viewableImpressions?: number;
  // A list of effective frequency forecasts. The list is ordered starting with
  // 1+ and ending with the value set in
  // GenerateReachForecastRequest.effective_frequency_limit. If no
  // effective_frequency_limit was set, this list will be empty.
  effectiveFrequencyBreakdowns: EffectiveFrequencyBreakdown[] | undefined;
};

// A breakdown of the number of unique people reached at a given effective
// frequency.
export type EffectiveFrequencyBreakdown = {
  // The effective frequency [1-10].
  effectiveFrequency: number | undefined;
  // The number of unique people reached at least effective_frequency times that
  // exactly matches the Targeting.
  // Note that a minimum number of unique people must be reached in order for
  // data to be reported. If the minimum number is not met, the on_target_reach
  // value will be rounded to 0.
  onTargetReach: number | undefined;
  // Total number of unique people reached at least effective_frequency times.
  // This includes people that may fall outside the specified Targeting.
  // Note that a minimum number of unique people must be reached in order for
  // data to be reported. If the minimum number is not met, the total_reach
  // value will be rounded to 0.
  totalReach: number | undefined;
};

// The forecasted allocation and traffic metrics for a specific product
// at a point on the reach curve.
export type PlannedProductReachForecast = {
  // Selected product for planning. The product codes returned are within the
  // set of the ones returned by ListPlannableProducts when using the same
  // location ID.
  plannableProductCode: string | undefined;
  // The cost in micros. This may differ from the product's input allocation
  // if one or more planned products cannot fulfill the budget because of
  // limited inventory.
  costMicros: number | undefined;
  // Forecasted traffic metrics for this product.
  plannedProductForecast: PlannedProductForecast | undefined;
};

// Forecasted traffic metrics for a planned product.
export type PlannedProductForecast = {
  // Number of unique people reached that exactly matches the Targeting.
  // Note that a minimum number of unique people must be reached in order for
  // data to be reported. If the minimum number is not met, the on_target_reach
  // value will be rounded to 0.
  onTargetReach: number | undefined;
  // Number of unique people reached. This includes people that may fall
  // outside the specified Targeting.
  // Note that a minimum number of unique people must be reached in order for
  // data to be reported. If the minimum number is not met, the total_reach
  // value will be rounded to 0.
  totalReach: number | undefined;
  // Number of ad impressions that exactly matches the Targeting.
  onTargetImpressions: number | undefined;
  // Total number of ad impressions. This includes impressions that may fall
  // outside the specified Targeting, due to insufficient information on
  // signed-in users.
  totalImpressions: number | undefined;
  // Number of times the ad's impressions were considered viewable.
  // See https://support.google.com/google-ads/answer/7029393 for
  // more information about what makes an ad viewable and how
  // viewability is measured.
  viewableImpressions?: number;
};

// Reach Plan Service gives users information about audience size that can
// be reached through advertisement on YouTube. In particular,
// GenerateReachForecast provides estimated number of people of specified
// demographics that can be reached by an ad in a given market by a campaign of
// certain duration with a defined budget.
export interface ReachPlanService {
  // Returns the list of plannable locations (for example, countries & DMAs).
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListPlannableLocations(request: ListPlannableLocationsRequest): Promise<ListPlannableLocationsResponse>;
  // Returns the list of per-location plannable YouTube ad formats with allowed
  // targeting.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListPlannableProducts(request: ListPlannableProductsRequest): Promise<ListPlannableProductsResponse>;
  // Generates a product mix ideas given a set of preferences. This method
  // helps the advertiser to obtain a good mix of ad formats and budget
  // allocations based on its preferences.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [ReachPlanError]()
  // [RequestError]()
  GenerateProductMixIdeas(request: GenerateProductMixIdeasRequest): Promise<GenerateProductMixIdeasResponse>;
  // Generates a reach forecast for a given targeting / product mix.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RangeError]()
  // [ReachPlanError]()
  // [RequestError]()
  GenerateReachForecast(request: GenerateReachForecastRequest): Promise<GenerateReachForecastResponse>;
}

export function createReachPlanServiceClient(
  handler: RequestHandler
): ReachPlanService {
  return {
    ListPlannableLocations(request) {
      const path = `v9:listPlannableLocations`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<ListPlannableLocationsResponse>;
    },
    ListPlannableProducts(request) {
      const path = `v9:listPlannableProducts`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<ListPlannableProductsResponse>;
    },
    GenerateProductMixIdeas(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:generateProductMixIdeas`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateProductMixIdeasResponse>;
    },
    GenerateReachForecast(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:generateReachForecast`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateReachForecastResponse>;
    },
  };
}
// Request message for [GoogleAdsService.Search][google.ads.googleads.v9.services.GoogleAdsService.Search].
export type SearchGoogleAdsRequest = {
  // Required. The ID of the customer being queried.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The query string.
  //
  // Behaviors: REQUIRED
  query: string | undefined;
  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  pageToken: string | undefined;
  // Number of elements to retrieve in a single page.
  // When too large a page is requested, the server may decide to
  // further limit the number of returned resources.
  pageSize: number | undefined;
  // If true, the request is validated but not executed.
  validateOnly: boolean | undefined;
  // If true, the total number of results that match the query ignoring the
  // LIMIT clause will be included in the response.
  // Default is false.
  returnTotalResultsCount: boolean | undefined;
  // Determines whether a summary row will be returned. By default, summary row
  // is not returned. If requested, the summary row will be sent in a response
  // by itself after all other query results are returned.
  summaryRowSetting: googleadsgoogleadsv9enums_SummaryRowSettingEnum_SummaryRowSetting | undefined;
};

// Enum describing return summary row settings.
export type googleadsgoogleadsv9enums_SummaryRowSettingEnum_SummaryRowSetting =
  // Not specified.
  | "UNSPECIFIED"
  // Represent unknown values of return summary row.
  | "UNKNOWN"
  // Do not return summary row.
  | "NO_SUMMARY_ROW"
  // Return summary row along with results. The summary row will be returned
  // in the last batch alone (last batch will contain no results).
  | "SUMMARY_ROW_WITH_RESULTS"
  // Return summary row only and return no results.
  | "SUMMARY_ROW_ONLY";
// Response message for [GoogleAdsService.Search][google.ads.googleads.v9.services.GoogleAdsService.Search].
export type SearchGoogleAdsResponse = {
  // The list of rows that matched the query.
  results: GoogleAdsRow[] | undefined;
  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  nextPageToken: string | undefined;
  // Total number of results that match the query ignoring the LIMIT
  // clause.
  totalResultsCount: number | undefined;
  // FieldMask that represents what fields were requested by the user.
  fieldMask: wellKnownFieldMask | undefined;
  // Summary row that contains summary of metrics in results.
  // Summary of metrics means aggregation of metrics across all results,
  // here aggregation could be sum, average, rate, etc.
  summaryRow: GoogleAdsRow | undefined;
};

// A returned row from the query.
export type GoogleAdsRow = {
  // The account budget in the query.
  accountBudget: googleadsgoogleadsv9resources_AccountBudget | undefined;
  // The account budget proposal referenced in the query.
  accountBudgetProposal: googleadsgoogleadsv9resources_AccountBudgetProposal | undefined;
  // The AccountLink referenced in the query.
  accountLink: googleadsgoogleadsv9resources_AccountLink | undefined;
  // The ad group referenced in the query.
  adGroup: googleadsgoogleadsv9resources_AdGroup | undefined;
  // The ad referenced in the query.
  adGroupAd: googleadsgoogleadsv9resources_AdGroupAd | undefined;
  // The ad group ad asset view in the query.
  adGroupAdAssetView: googleadsgoogleadsv9resources_AdGroupAdAssetView | undefined;
  // The ad group ad label referenced in the query.
  adGroupAdLabel: googleadsgoogleadsv9resources_AdGroupAdLabel | undefined;
  // The ad group asset referenced in the query.
  adGroupAsset: googleadsgoogleadsv9resources_AdGroupAsset | undefined;
  // The ad group audience view referenced in the query.
  adGroupAudienceView: googleadsgoogleadsv9resources_AdGroupAudienceView | undefined;
  // The bid modifier referenced in the query.
  adGroupBidModifier: googleadsgoogleadsv9resources_AdGroupBidModifier | undefined;
  // The criterion referenced in the query.
  adGroupCriterion: googleadsgoogleadsv9resources_AdGroupCriterion | undefined;
  // The ad group criterion customizer referenced in the query.
  adGroupCriterionCustomizer: googleadsgoogleadsv9resources_AdGroupCriterionCustomizer | undefined;
  // The ad group criterion label referenced in the query.
  adGroupCriterionLabel: googleadsgoogleadsv9resources_AdGroupCriterionLabel | undefined;
  // The ad group criterion simulation referenced in the query.
  adGroupCriterionSimulation: googleadsgoogleadsv9resources_AdGroupCriterionSimulation | undefined;
  // The ad group customizer referenced in the query.
  adGroupCustomizer: googleadsgoogleadsv9resources_AdGroupCustomizer | undefined;
  // The ad group extension setting referenced in the query.
  adGroupExtensionSetting: googleadsgoogleadsv9resources_AdGroupExtensionSetting | undefined;
  // The ad group feed referenced in the query.
  adGroupFeed: googleadsgoogleadsv9resources_AdGroupFeed | undefined;
  // The ad group label referenced in the query.
  adGroupLabel: googleadsgoogleadsv9resources_AdGroupLabel | undefined;
  // The ad group simulation referenced in the query.
  adGroupSimulation: googleadsgoogleadsv9resources_AdGroupSimulation | undefined;
  // The ad parameter referenced in the query.
  adParameter: googleadsgoogleadsv9resources_AdParameter | undefined;
  // The age range view referenced in the query.
  ageRangeView: googleadsgoogleadsv9resources_AgeRangeView | undefined;
  // The ad schedule view referenced in the query.
  adScheduleView: googleadsgoogleadsv9resources_AdScheduleView | undefined;
  // The domain category referenced in the query.
  domainCategory: googleadsgoogleadsv9resources_DomainCategory | undefined;
  // The asset referenced in the query.
  asset: googleadsgoogleadsv9resources_Asset | undefined;
  // The asset field type view referenced in the query.
  assetFieldTypeView: googleadsgoogleadsv9resources_AssetFieldTypeView | undefined;
  // The asset group asset referenced in the query.
  assetGroupAsset: googleadsgoogleadsv9resources_AssetGroupAsset | undefined;
  // The asset group listing group filter referenced in the query.
  assetGroupListingGroupFilter: googleadsgoogleadsv9resources_AssetGroupListingGroupFilter | undefined;
  // The asset group product group view referenced in the query.
  assetGroupProductGroupView: googleadsgoogleadsv9resources_AssetGroupProductGroupView | undefined;
  // The asset group referenced in the query.
  assetGroup: googleadsgoogleadsv9resources_AssetGroup | undefined;
  // The asset set asset referenced in the query.
  assetSetAsset: googleadsgoogleadsv9resources_AssetSetAsset | undefined;
  // The asset set referenced in the query.
  assetSet: googleadsgoogleadsv9resources_AssetSet | undefined;
  // The batch job referenced in the query.
  batchJob: googleadsgoogleadsv9resources_BatchJob | undefined;
  // The bidding data exclusion referenced in the query.
  biddingDataExclusion: googleadsgoogleadsv9resources_BiddingDataExclusion | undefined;
  // The bidding seasonality adjustment referenced in the query.
  biddingSeasonalityAdjustment: googleadsgoogleadsv9resources_BiddingSeasonalityAdjustment | undefined;
  // The bidding strategy referenced in the query.
  biddingStrategy: googleadsgoogleadsv9resources_BiddingStrategy | undefined;
  // The bidding strategy simulation referenced in the query.
  biddingStrategySimulation: googleadsgoogleadsv9resources_BiddingStrategySimulation | undefined;
  // The billing setup referenced in the query.
  billingSetup: googleadsgoogleadsv9resources_BillingSetup | undefined;
  // The call view referenced in the query.
  callView: googleadsgoogleadsv9resources_CallView | undefined;
  // The campaign budget referenced in the query.
  campaignBudget: googleadsgoogleadsv9resources_CampaignBudget | undefined;
  // The campaign referenced in the query.
  campaign: googleadsgoogleadsv9resources_Campaign | undefined;
  // The campaign asset referenced in the query.
  campaignAsset: googleadsgoogleadsv9resources_CampaignAsset | undefined;
  // The campaign asset set referenced in the query.
  campaignAssetSet: googleadsgoogleadsv9resources_CampaignAssetSet | undefined;
  // The campaign audience view referenced in the query.
  campaignAudienceView: googleadsgoogleadsv9resources_CampaignAudienceView | undefined;
  // The campaign bid modifier referenced in the query.
  campaignBidModifier: googleadsgoogleadsv9resources_CampaignBidModifier | undefined;
  // The CampaignConversionGoal referenced in the query.
  campaignConversionGoal: googleadsgoogleadsv9resources_CampaignConversionGoal | undefined;
  // The campaign criterion referenced in the query.
  campaignCriterion: googleadsgoogleadsv9resources_CampaignCriterion | undefined;
  // The campaign criterion simulation referenced in the query.
  campaignCriterionSimulation: googleadsgoogleadsv9resources_CampaignCriterionSimulation | undefined;
  // The campaign customizer referenced in the query.
  campaignCustomizer: googleadsgoogleadsv9resources_CampaignCustomizer | undefined;
  // The campaign draft referenced in the query.
  campaignDraft: googleadsgoogleadsv9resources_CampaignDraft | undefined;
  // The campaign experiment referenced in the query.
  campaignExperiment: googleadsgoogleadsv9resources_CampaignExperiment | undefined;
  // The campaign extension setting referenced in the query.
  campaignExtensionSetting: googleadsgoogleadsv9resources_CampaignExtensionSetting | undefined;
  // The campaign feed referenced in the query.
  campaignFeed: googleadsgoogleadsv9resources_CampaignFeed | undefined;
  // The campaign label referenced in the query.
  campaignLabel: googleadsgoogleadsv9resources_CampaignLabel | undefined;
  // Campaign Shared Set referenced in AWQL query.
  campaignSharedSet: googleadsgoogleadsv9resources_CampaignSharedSet | undefined;
  // The campaign simulation referenced in the query.
  campaignSimulation: googleadsgoogleadsv9resources_CampaignSimulation | undefined;
  // The carrier constant referenced in the query.
  carrierConstant: googleadsgoogleadsv9resources_CarrierConstant | undefined;
  // The ChangeEvent referenced in the query.
  changeEvent: googleadsgoogleadsv9resources_ChangeEvent | undefined;
  // The ChangeStatus referenced in the query.
  changeStatus: googleadsgoogleadsv9resources_ChangeStatus | undefined;
  // The CombinedAudience referenced in the query.
  combinedAudience: googleadsgoogleadsv9resources_CombinedAudience | undefined;
  // The conversion action referenced in the query.
  conversionAction: googleadsgoogleadsv9resources_ConversionAction | undefined;
  // The conversion custom variable referenced in the query.
  conversionCustomVariable: googleadsgoogleadsv9resources_ConversionCustomVariable | undefined;
  // The ConversionGoalCampaignConfig referenced in the query.
  conversionGoalCampaignConfig: googleadsgoogleadsv9resources_ConversionGoalCampaignConfig | undefined;
  // The conversion value rule referenced in the query.
  conversionValueRule: googleadsgoogleadsv9resources_ConversionValueRule | undefined;
  // The conversion value rule set referenced in the query.
  conversionValueRuleSet: googleadsgoogleadsv9resources_ConversionValueRuleSet | undefined;
  // The ClickView referenced in the query.
  clickView: googleadsgoogleadsv9resources_ClickView | undefined;
  // The currency constant referenced in the query.
  currencyConstant: googleadsgoogleadsv9resources_CurrencyConstant | undefined;
  // The CustomAudience referenced in the query.
  customAudience: googleadsgoogleadsv9resources_CustomAudience | undefined;
  // The CustomConversionGoal referenced in the query.
  customConversionGoal: googleadsgoogleadsv9resources_CustomConversionGoal | undefined;
  // The CustomInterest referenced in the query.
  customInterest: googleadsgoogleadsv9resources_CustomInterest | undefined;
  // The customer referenced in the query.
  customer: googleadsgoogleadsv9resources_Customer | undefined;
  // The customer asset referenced in the query.
  customerAsset: googleadsgoogleadsv9resources_CustomerAsset | undefined;
  // The accessible bidding strategy referenced in the query.
  accessibleBiddingStrategy: googleadsgoogleadsv9resources_AccessibleBiddingStrategy | undefined;
  // The customer customizer referenced in the query.
  customerCustomizer: googleadsgoogleadsv9resources_CustomerCustomizer | undefined;
  // The CustomerManagerLink referenced in the query.
  customerManagerLink: googleadsgoogleadsv9resources_CustomerManagerLink | undefined;
  // The CustomerClientLink referenced in the query.
  customerClientLink: googleadsgoogleadsv9resources_CustomerClientLink | undefined;
  // The CustomerClient referenced in the query.
  customerClient: googleadsgoogleadsv9resources_CustomerClient | undefined;
  // The CustomerConversionGoal referenced in the query.
  customerConversionGoal: googleadsgoogleadsv9resources_CustomerConversionGoal | undefined;
  // The customer extension setting referenced in the query.
  customerExtensionSetting: googleadsgoogleadsv9resources_CustomerExtensionSetting | undefined;
  // The customer feed referenced in the query.
  customerFeed: googleadsgoogleadsv9resources_CustomerFeed | undefined;
  // The customer label referenced in the query.
  customerLabel: googleadsgoogleadsv9resources_CustomerLabel | undefined;
  // The customer negative criterion referenced in the query.
  customerNegativeCriterion: googleadsgoogleadsv9resources_CustomerNegativeCriterion | undefined;
  // The CustomerUserAccess referenced in the query.
  customerUserAccess: googleadsgoogleadsv9resources_CustomerUserAccess | undefined;
  // The CustomerUserAccessInvitation referenced in the query.
  customerUserAccessInvitation: googleadsgoogleadsv9resources_CustomerUserAccessInvitation | undefined;
  // The customizer attribute referenced in the query.
  customizerAttribute: googleadsgoogleadsv9resources_CustomizerAttribute | undefined;
  // The detail placement view referenced in the query.
  detailPlacementView: googleadsgoogleadsv9resources_DetailPlacementView | undefined;
  // The detailed demographic referenced in the query.
  detailedDemographic: googleadsgoogleadsv9resources_DetailedDemographic | undefined;
  // The display keyword view referenced in the query.
  displayKeywordView: googleadsgoogleadsv9resources_DisplayKeywordView | undefined;
  // The distance view referenced in the query.
  distanceView: googleadsgoogleadsv9resources_DistanceView | undefined;
  // The dynamic search ads search term view referenced in the query.
  dynamicSearchAdsSearchTermView: googleadsgoogleadsv9resources_DynamicSearchAdsSearchTermView | undefined;
  // The expanded landing page view referenced in the query.
  expandedLandingPageView: googleadsgoogleadsv9resources_ExpandedLandingPageView | undefined;
  // The extension feed item referenced in the query.
  extensionFeedItem: googleadsgoogleadsv9resources_ExtensionFeedItem | undefined;
  // The feed referenced in the query.
  feed: googleadsgoogleadsv9resources_Feed | undefined;
  // The feed item referenced in the query.
  feedItem: googleadsgoogleadsv9resources_FeedItem | undefined;
  // The feed item set referenced in the query.
  feedItemSet: googleadsgoogleadsv9resources_FeedItemSet | undefined;
  // The feed item set link referenced in the query.
  feedItemSetLink: googleadsgoogleadsv9resources_FeedItemSetLink | undefined;
  // The feed item target referenced in the query.
  feedItemTarget: googleadsgoogleadsv9resources_FeedItemTarget | undefined;
  // The feed mapping referenced in the query.
  feedMapping: googleadsgoogleadsv9resources_FeedMapping | undefined;
  // The feed placeholder view referenced in the query.
  feedPlaceholderView: googleadsgoogleadsv9resources_FeedPlaceholderView | undefined;
  // The gender view referenced in the query.
  genderView: googleadsgoogleadsv9resources_GenderView | undefined;
  // The geo target constant referenced in the query.
  geoTargetConstant: googleadsgoogleadsv9resources_GeoTargetConstant | undefined;
  // The geographic view referenced in the query.
  geographicView: googleadsgoogleadsv9resources_GeographicView | undefined;
  // The group placement view referenced in the query.
  groupPlacementView: googleadsgoogleadsv9resources_GroupPlacementView | undefined;
  // The hotel group view referenced in the query.
  hotelGroupView: googleadsgoogleadsv9resources_HotelGroupView | undefined;
  // The hotel performance view referenced in the query.
  hotelPerformanceView: googleadsgoogleadsv9resources_HotelPerformanceView | undefined;
  // The hotel reconciliation referenced in the query.
  hotelReconciliation: googleadsgoogleadsv9resources_HotelReconciliation | undefined;
  // The income range view referenced in the query.
  incomeRangeView: googleadsgoogleadsv9resources_IncomeRangeView | undefined;
  // The keyword view referenced in the query.
  keywordView: googleadsgoogleadsv9resources_KeywordView | undefined;
  // The keyword plan referenced in the query.
  keywordPlan: googleadsgoogleadsv9resources_KeywordPlan | undefined;
  // The keyword plan campaign referenced in the query.
  keywordPlanCampaign: googleadsgoogleadsv9resources_KeywordPlanCampaign | undefined;
  // The keyword plan campaign keyword referenced in the query.
  keywordPlanCampaignKeyword: googleadsgoogleadsv9resources_KeywordPlanCampaignKeyword | undefined;
  // The keyword plan ad group referenced in the query.
  keywordPlanAdGroup: googleadsgoogleadsv9resources_KeywordPlanAdGroup | undefined;
  // The keyword plan ad group referenced in the query.
  keywordPlanAdGroupKeyword: googleadsgoogleadsv9resources_KeywordPlanAdGroupKeyword | undefined;
  // The keyword theme constant referenced in the query.
  keywordThemeConstant: googleadsgoogleadsv9resources_KeywordThemeConstant | undefined;
  // The label referenced in the query.
  label: googleadsgoogleadsv9resources_Label | undefined;
  // The landing page view referenced in the query.
  landingPageView: googleadsgoogleadsv9resources_LandingPageView | undefined;
  // The language constant referenced in the query.
  languageConstant: googleadsgoogleadsv9resources_LanguageConstant | undefined;
  // The location view referenced in the query.
  locationView: googleadsgoogleadsv9resources_LocationView | undefined;
  // The managed placement view referenced in the query.
  managedPlacementView: googleadsgoogleadsv9resources_ManagedPlacementView | undefined;
  // The media file referenced in the query.
  mediaFile: googleadsgoogleadsv9resources_MediaFile | undefined;
  // The mobile app category constant referenced in the query.
  mobileAppCategoryConstant: googleadsgoogleadsv9resources_MobileAppCategoryConstant | undefined;
  // The mobile device constant referenced in the query.
  mobileDeviceConstant: googleadsgoogleadsv9resources_MobileDeviceConstant | undefined;
  // The offline user data job referenced in the query.
  offlineUserDataJob: googleadsgoogleadsv9resources_OfflineUserDataJob | undefined;
  // The operating system version constant referenced in the query.
  operatingSystemVersionConstant: googleadsgoogleadsv9resources_OperatingSystemVersionConstant | undefined;
  // The paid organic search term view referenced in the query.
  paidOrganicSearchTermView: googleadsgoogleadsv9resources_PaidOrganicSearchTermView | undefined;
  // The parental status view referenced in the query.
  parentalStatusView: googleadsgoogleadsv9resources_ParentalStatusView | undefined;
  // The Product Bidding Category referenced in the query.
  productBiddingCategoryConstant: googleadsgoogleadsv9resources_ProductBiddingCategoryConstant | undefined;
  // The product group view referenced in the query.
  productGroupView: googleadsgoogleadsv9resources_ProductGroupView | undefined;
  // The recommendation referenced in the query.
  recommendation: googleadsgoogleadsv9resources_Recommendation | undefined;
  // The search term view referenced in the query.
  searchTermView: googleadsgoogleadsv9resources_SearchTermView | undefined;
  // The shared set referenced in the query.
  sharedCriterion: googleadsgoogleadsv9resources_SharedCriterion | undefined;
  // The shared set referenced in the query.
  sharedSet: googleadsgoogleadsv9resources_SharedSet | undefined;
  // The Smart campaign setting referenced in the query.
  smartCampaignSetting: googleadsgoogleadsv9resources_SmartCampaignSetting | undefined;
  // The shopping performance view referenced in the query.
  shoppingPerformanceView: googleadsgoogleadsv9resources_ShoppingPerformanceView | undefined;
  // The Smart campaign search term view referenced in the query.
  smartCampaignSearchTermView: googleadsgoogleadsv9resources_SmartCampaignSearchTermView | undefined;
  // The AccountLink referenced in the query.
  thirdPartyAppAnalyticsLink: googleadsgoogleadsv9resources_ThirdPartyAppAnalyticsLink | undefined;
  // The topic view referenced in the query.
  topicView: googleadsgoogleadsv9resources_TopicView | undefined;
  // The user interest referenced in the query.
  userInterest: googleadsgoogleadsv9resources_UserInterest | undefined;
  // The life event referenced in the query.
  lifeEvent: googleadsgoogleadsv9resources_LifeEvent | undefined;
  // The user list referenced in the query.
  userList: googleadsgoogleadsv9resources_UserList | undefined;
  // The user location view referenced in the query.
  userLocationView: googleadsgoogleadsv9resources_UserLocationView | undefined;
  // The remarketing action referenced in the query.
  remarketingAction: googleadsgoogleadsv9resources_RemarketingAction | undefined;
  // The topic constant referenced in the query.
  topicConstant: googleadsgoogleadsv9resources_TopicConstant | undefined;
  // The video referenced in the query.
  video: googleadsgoogleadsv9resources_Video | undefined;
  // The webpage view referenced in the query.
  webpageView: googleadsgoogleadsv9resources_WebpageView | undefined;
  // The metrics.
  metrics: googleadsgoogleadsv9common_Metrics | undefined;
  // The segments.
  segments: googleadsgoogleadsv9common_Segments | undefined;
};

// An account-level budget proposal.
// All fields prefixed with 'proposed' may not necessarily be applied directly.
// For example, proposed spending limits may be adjusted before their
// application.  This is true if the 'proposed' field has an 'approved'
// counterpart, e.g. spending limits.
// Please note that the proposal type (proposal_type) changes which fields are
// required and which must remain empty.
export type googleadsgoogleadsv9resources_AccountBudgetProposal = {
  // Immutable. The resource name of the proposal.
  // AccountBudgetProposal resource names have the form:
  // `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The ID of the proposal.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Immutable. The resource name of the billing setup associated with this proposal.
  //
  // Behaviors: IMMUTABLE
  billingSetup?: string;
  // Immutable. The resource name of the account-level budget associated with this
  // proposal.
  //
  // Behaviors: IMMUTABLE
  accountBudget?: string;
  // Immutable. The type of this proposal, e.g. END to end the budget associated with this
  // proposal.
  //
  // Behaviors: IMMUTABLE
  proposalType: googleadsgoogleadsv9enums_AccountBudgetProposalTypeEnum_AccountBudgetProposalType | undefined;
  // Output only. The status of this proposal.
  // When a new proposal is created, the status defaults to PENDING.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_AccountBudgetProposalStatusEnum_AccountBudgetProposalStatus | undefined;
  // Immutable. The name to assign to the account-level budget.
  //
  // Behaviors: IMMUTABLE
  proposedName?: string;
  // Output only. The approved start date time in yyyy-mm-dd hh:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  approvedStartDateTime?: string;
  // Immutable. A purchase order number is a value that enables the user to help them
  // reference this budget in their monthly invoices.
  //
  // Behaviors: IMMUTABLE
  proposedPurchaseOrderNumber?: string;
  // Immutable. Notes associated with this budget.
  //
  // Behaviors: IMMUTABLE
  proposedNotes?: string;
  // Output only. The date time when this account-level budget proposal was created, which is
  // not the same as its approval date time, if applicable.
  //
  // Behaviors: OUTPUT_ONLY
  creationDateTime?: string;
  // Output only. The date time when this account-level budget was approved, if applicable.
  //
  // Behaviors: OUTPUT_ONLY
  approvalDateTime?: string;
  // Immutable. The proposed start date time in yyyy-mm-dd hh:mm:ss format.
  //
  // Behaviors: IMMUTABLE
  proposedStartDateTime?: string;
  // Immutable. The proposed start date time as a well-defined type, e.g. NOW.
  //
  // Behaviors: IMMUTABLE
  proposedStartTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Immutable. The proposed end date time in yyyy-mm-dd hh:mm:ss format.
  //
  // Behaviors: IMMUTABLE
  proposedEndDateTime?: string;
  // Immutable. The proposed end date time as a well-defined type, e.g. FOREVER.
  //
  // Behaviors: IMMUTABLE
  proposedEndTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Output only. The approved end date time in yyyy-mm-dd hh:mm:ss format.
  //
  // Behaviors: OUTPUT_ONLY
  approvedEndDateTime?: string;
  // Output only. The approved end date time as a well-defined type, e.g. FOREVER.
  //
  // Behaviors: OUTPUT_ONLY
  approvedEndTimeType?: googleadsgoogleadsv9enums_TimeTypeEnum_TimeType;
  // Immutable. The proposed spending limit in micros.  One million is equivalent to
  // one unit.
  //
  // Behaviors: IMMUTABLE
  proposedSpendingLimitMicros?: number;
  // Immutable. The proposed spending limit as a well-defined type, e.g. INFINITE.
  //
  // Behaviors: IMMUTABLE
  proposedSpendingLimitType?: googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType;
  // Output only. The approved spending limit in micros.  One million is equivalent to
  // one unit.
  //
  // Behaviors: OUTPUT_ONLY
  approvedSpendingLimitMicros?: number;
  // Output only. The approved spending limit as a well-defined type, e.g. INFINITE.
  //
  // Behaviors: OUTPUT_ONLY
  approvedSpendingLimitType?: googleadsgoogleadsv9enums_SpendingLimitTypeEnum_SpendingLimitType;
};

// The possible statuses of an AccountBudgetProposal.
export type googleadsgoogleadsv9enums_AccountBudgetProposalStatusEnum_AccountBudgetProposalStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The proposal is pending approval.
  | "PENDING"
  // The proposal has been approved but the corresponding billing setup
  // has not.  This can occur for proposals that set up the first budget
  // when signing up for billing or when performing a change of bill-to
  // operation.
  | "APPROVED_HELD"
  // The proposal has been approved.
  | "APPROVED"
  // The proposal has been cancelled by the user.
  | "CANCELLED"
  // The proposal has been rejected by the user, e.g. by rejecting an
  // acceptance email.
  | "REJECTED";
// A link between an AdGroupAd and an Asset.
// Currently we only support AdGroupAdAssetView for AppAds.
export type googleadsgoogleadsv9resources_AdGroupAdAssetView = {
  // Output only. The resource name of the ad group ad asset view.
  // Ad group ad asset view resource names have the form (Before V4):
  // `customers/{customer_id}/adGroupAdAssets/{AdGroupAdAsset.ad_group_id}~{AdGroupAdAsset.ad.ad_id}~{AdGroupAdAsset.asset_id}~{AdGroupAdAsset.field_type}`
  // Ad group ad asset view resource names have the form (Beginning from V4):
  // `customers/{customer_id}/adGroupAdAssetViews/{AdGroupAdAsset.ad_group_id}~{AdGroupAdAsset.ad_id}~{AdGroupAdAsset.asset_id}~{AdGroupAdAsset.field_type}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ad group ad to which the asset is linked.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupAd?: string;
  // Output only. The asset which is linked to the ad group ad.
  //
  // Behaviors: OUTPUT_ONLY
  asset?: string;
  // Output only. Role that the asset takes in the ad.
  //
  // Behaviors: OUTPUT_ONLY
  fieldType: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType | undefined;
  // Output only. The status between the asset and the latest version of the ad. If true, the
  // asset is linked to the latest version of the ad. If false, it means the
  // link once existed but has been removed and is no longer present in the
  // latest version of the ad.
  //
  // Behaviors: OUTPUT_ONLY
  enabled?: boolean;
  // Output only. Policy information for the ad group ad asset.
  //
  // Behaviors: OUTPUT_ONLY
  policySummary: googleadsgoogleadsv9resources_AdGroupAdAssetPolicySummary | undefined;
  // Output only. Performance of an asset linkage.
  //
  // Behaviors: OUTPUT_ONLY
  performanceLabel: googleadsgoogleadsv9enums_AssetPerformanceLabelEnum_AssetPerformanceLabel | undefined;
};

// Contains policy information for an ad group ad asset.
export type googleadsgoogleadsv9resources_AdGroupAdAssetPolicySummary = {
  // Output only. The list of policy findings for the ad group ad asset.
  //
  // Behaviors: OUTPUT_ONLY
  policyTopicEntries: googleadsgoogleadsv9common_PolicyTopicEntry[] | undefined;
  // Output only. Where in the review process this ad group ad asset is.
  //
  // Behaviors: OUTPUT_ONLY
  reviewStatus: googleadsgoogleadsv9enums_PolicyReviewStatusEnum_PolicyReviewStatus | undefined;
  // Output only. The overall approval status of this ad group ad asset, calculated based on
  // the status of its individual policy topic entries.
  //
  // Behaviors: OUTPUT_ONLY
  approvalStatus: googleadsgoogleadsv9enums_PolicyApprovalStatusEnum_PolicyApprovalStatus | undefined;
};

// An ad group audience view.
// Includes performance data from interests and remarketing lists for Display
// Network and YouTube Network ads, and remarketing lists for search ads (RLSA),
// aggregated at the audience level.
export type googleadsgoogleadsv9resources_AdGroupAudienceView = {
  // Output only. The resource name of the ad group audience view.
  // Ad group audience view resource names have the form:
  // `customers/{customer_id}/adGroupAudienceViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// An asset field type view.
// This view reports non-overcounted metrics for each asset field type when the
// asset is used as extension.
export type googleadsgoogleadsv9resources_AssetFieldTypeView = {
  // Output only. The resource name of the asset field type view.
  // Asset field type view resource names have the form:
  // `customers/{customer_id}/assetFieldTypeViews/{field_type}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The asset field type of the asset field type view.
  //
  // Behaviors: OUTPUT_ONLY
  fieldType: googleadsgoogleadsv9enums_AssetFieldTypeEnum_AssetFieldType | undefined;
};

// An asset group product group view.
export type googleadsgoogleadsv9resources_AssetGroupProductGroupView = {
  // Output only. The resource name of the asset group product group view.
  // Asset group product group view resource names have the form:
  // `customers/{customer_id}/assetGroupProductGroupViews/{asset_group_id}~{listing_group_filter_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// A call view that includes data for call tracking of call-only ads or call
// extensions.
export type googleadsgoogleadsv9resources_CallView = {
  // Output only. The resource name of the call view.
  // Call view resource names have the form:
  // `customers/{customer_id}/callViews/{call_detail_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Country code of the caller.
  //
  // Behaviors: OUTPUT_ONLY
  callerCountryCode: string | undefined;
  // Output only. Area code of the caller. Null if the call duration is shorter than 15
  // seconds.
  //
  // Behaviors: OUTPUT_ONLY
  callerAreaCode: string | undefined;
  // Output only. The advertiser-provided call duration in seconds.
  //
  // Behaviors: OUTPUT_ONLY
  callDurationSeconds: number | undefined;
  // Output only. The advertiser-provided call start date time.
  //
  // Behaviors: OUTPUT_ONLY
  startCallDateTime: string | undefined;
  // Output only. The advertiser-provided call end date time.
  //
  // Behaviors: OUTPUT_ONLY
  endCallDateTime: string | undefined;
  // Output only. The call tracking display location.
  //
  // Behaviors: OUTPUT_ONLY
  callTrackingDisplayLocation: googleadsgoogleadsv9enums_CallTrackingDisplayLocationEnum_CallTrackingDisplayLocation | undefined;
  // Output only. The type of the call.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_CallTypeEnum_CallType | undefined;
  // Output only. The status of the call.
  //
  // Behaviors: OUTPUT_ONLY
  callStatus: googleadsgoogleadsv9enums_GoogleVoiceCallStatusEnum_GoogleVoiceCallStatus | undefined;
};

// Possible call tracking display locations.
export type googleadsgoogleadsv9enums_CallTrackingDisplayLocationEnum_CallTrackingDisplayLocation =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The phone call placed from the ad.
  | "AD"
  // The phone call placed from the landing page ad points to.
  | "LANDING_PAGE";
// Possible types of property from where the call was made.
export type googleadsgoogleadsv9enums_CallTypeEnum_CallType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The phone call was manually dialed.
  | "MANUALLY_DIALED"
  // The phone call was a mobile click-to-call.
  | "HIGH_END_MOBILE_SEARCH";
// Possible statuses of a google voice call.
export type googleadsgoogleadsv9enums_GoogleVoiceCallStatusEnum_GoogleVoiceCallStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The call was missed.
  | "MISSED"
  // The call was received.
  | "RECEIVED";
// A campaign simulation. Supported combinations of advertising
// channel type, simulation type and simulation modification
// method is detailed below respectively.
// SEARCH - CPC_BID - UNIFORM
// SEARCH - CPC_BID - SCALING
// SEARCH - TARGET_CPA - UNIFORM
// SEARCH - TARGET_CPA - SCALING
// SEARCH - TARGET_ROAS - UNIFORM
// SEARCH - TARGET_IMPRESSION_SHARE - UNIFORM
// SEARCH - BUDGET - UNIFORM
// SHOPPING - BUDGET - UNIFORM
// SHOPPING - TARGET_ROAS - UNIFORM
// MULTIPLE - TARGET_CPA - UNIFORM
// OWNED_AND_OPERATED - TARGET_CPA - DEFAULT
// DISPLAY - TARGET_CPA - UNIFORM
export type googleadsgoogleadsv9resources_CampaignSimulation = {
  // Output only. The resource name of the campaign simulation.
  // Campaign simulation resource names have the form:
  // `customers/{customer_id}/campaignSimulations/{campaign_id}~{type}~{modification_method}~{start_date}~{end_date}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Campaign id of the simulation.
  //
  // Behaviors: OUTPUT_ONLY
  campaignId: number | undefined;
  // Output only. The field that the simulation modifies.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_SimulationTypeEnum_SimulationType | undefined;
  // Output only. How the simulation modifies the field.
  //
  // Behaviors: OUTPUT_ONLY
  modificationMethod: googleadsgoogleadsv9enums_SimulationModificationMethodEnum_SimulationModificationMethod | undefined;
  // Output only. First day on which the simulation is based, in YYYY-MM-DD format.
  //
  // Behaviors: OUTPUT_ONLY
  startDate: string | undefined;
  // Output only. Last day on which the simulation is based, in YYYY-MM-DD format
  //
  // Behaviors: OUTPUT_ONLY
  endDate: string | undefined;
  // Output only. Simulation points if the simulation type is CPC_BID.
  //
  // Behaviors: OUTPUT_ONLY
  cpcBidPointList?: googleadsgoogleadsv9common_CpcBidSimulationPointList;
  // Output only. Simulation points if the simulation type is TARGET_CPA.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpaPointList?: googleadsgoogleadsv9common_TargetCpaSimulationPointList;
  // Output only. Simulation points if the simulation type is TARGET_ROAS.
  //
  // Behaviors: OUTPUT_ONLY
  targetRoasPointList?: googleadsgoogleadsv9common_TargetRoasSimulationPointList;
  // Output only. Simulation points if the simulation type is TARGET_IMPRESSION_SHARE.
  //
  // Behaviors: OUTPUT_ONLY
  targetImpressionSharePointList?: googleadsgoogleadsv9common_TargetImpressionShareSimulationPointList;
  // Output only. Simulation points if the simulation type is BUDGET.
  //
  // Behaviors: OUTPUT_ONLY
  budgetPointList?: googleadsgoogleadsv9common_BudgetSimulationPointList;
};

// A container for simulation points for simulations of type
// TARGET_IMPRESSION_SHARE.
export type googleadsgoogleadsv9common_TargetImpressionShareSimulationPointList = {
  // Projected metrics for a specific target impression share value.
  points: googleadsgoogleadsv9common_TargetImpressionShareSimulationPoint[] | undefined;
};

// Projected metrics for a specific target impression share value.
export type googleadsgoogleadsv9common_TargetImpressionShareSimulationPoint = {
  // The simulated target impression share value (in micros) upon which
  // projected metrics are based.
  // E.g. 10% impression share, which is equal to 0.1, is stored as 100_000.
  // This value is validated and will not exceed 1M (100%).
  targetImpressionShareMicros: number | undefined;
  // Projected required daily cpc bid ceiling that the advertiser must set to
  // realize this simulation, in micros of the advertiser currency.
  requiredCpcBidCeilingMicros: number | undefined;
  // Projected required daily budget that the advertiser must set in order to
  // receive the estimated traffic, in micros of advertiser currency.
  requiredBudgetAmountMicros: number | undefined;
  // Projected number of biddable conversions.
  biddableConversions: number | undefined;
  // Projected total value of biddable conversions.
  biddableConversionsValue: number | undefined;
  // Projected number of clicks.
  clicks: number | undefined;
  // Projected cost in micros.
  costMicros: number | undefined;
  // Projected number of impressions.
  impressions: number | undefined;
  // Projected number of top slot impressions.
  // Only search advertising channel type supports this field.
  topSlotImpressions: number | undefined;
  // Projected number of absolute top impressions.
  // Only search advertising channel type supports this field.
  absoluteTopImpressions: number | undefined;
};

// A container for simulation points for simulations of type BUDGET.
export type googleadsgoogleadsv9common_BudgetSimulationPointList = {
  // Projected metrics for a series of budget amounts.
  points: googleadsgoogleadsv9common_BudgetSimulationPoint[] | undefined;
};

// Projected metrics for a specific budget amount.
export type googleadsgoogleadsv9common_BudgetSimulationPoint = {
  // The simulated budget upon which projected metrics are based.
  budgetAmountMicros: number | undefined;
  // Projected required daily cpc bid ceiling that the advertiser must set to
  // realize this simulation, in micros of the advertiser currency.
  // Only campaigns with the Target Spend bidding strategy support this field.
  requiredCpcBidCeilingMicros: number | undefined;
  // Projected number of biddable conversions.
  biddableConversions: number | undefined;
  // Projected total value of biddable conversions.
  biddableConversionsValue: number | undefined;
  // Projected number of clicks.
  clicks: number | undefined;
  // Projected cost in micros.
  costMicros: number | undefined;
  // Projected number of impressions.
  impressions: number | undefined;
  // Projected number of top slot impressions.
  // Only search advertising channel type supports this field.
  topSlotImpressions: number | undefined;
};

// Describes the granular change of returned resource of certain resource types.
// Changes made through UI, API and new versions of Editor
// by external users (including external users, and internal users that can be
// shown externally) in the past 30 days will be shown. The change shows the old
// values of the changed fields before the change and the new values right after
// the change. ChangeEvent could have up to 3 minutes delay to reflect a new
// change.
export type googleadsgoogleadsv9resources_ChangeEvent = {
  // Output only. The resource name of the change event.
  // Change event resource names have the form:
  // `customers/{customer_id}/changeEvents/{timestamp_micros}~{command_index}~{mutate_index}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Time at which the change was committed on this resource.
  //
  // Behaviors: OUTPUT_ONLY
  changeDateTime: string | undefined;
  // Output only. The type of the changed resource. This dictates what resource
  // will be set in old_resource and new_resource.
  //
  // Behaviors: OUTPUT_ONLY
  changeResourceType: googleadsgoogleadsv9enums_ChangeEventResourceTypeEnum_ChangeEventResourceType | undefined;
  // Output only. The Simply resource this change occurred on.
  //
  // Behaviors: OUTPUT_ONLY
  changeResourceName: string | undefined;
  // Output only. Where the change was made through.
  //
  // Behaviors: OUTPUT_ONLY
  clientType: googleadsgoogleadsv9enums_ChangeClientTypeEnum_ChangeClientType | undefined;
  // Output only. The email of the user who made this change.
  //
  // Behaviors: OUTPUT_ONLY
  userEmail: string | undefined;
  // Output only. The old resource before the change. Only changed fields will be populated.
  //
  // Behaviors: OUTPUT_ONLY
  oldResource: googleadsgoogleadsv9resources_ChangeEvent_ChangedResource | undefined;
  // Output only. The new resource after the change. Only changed fields will be populated.
  //
  // Behaviors: OUTPUT_ONLY
  newResource: googleadsgoogleadsv9resources_ChangeEvent_ChangedResource | undefined;
  // Output only. The operation on the changed resource.
  //
  // Behaviors: OUTPUT_ONLY
  resourceChangeOperation: googleadsgoogleadsv9enums_ResourceChangeOperationEnum_ResourceChangeOperation | undefined;
  // Output only. A list of fields that are changed in the returned resource.
  //
  // Behaviors: OUTPUT_ONLY
  changedFields: wellKnownFieldMask | undefined;
  // Output only. The Campaign affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  campaign: string | undefined;
  // Output only. The AdGroup affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  adGroup: string | undefined;
  // Output only. The Feed affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  feed: string | undefined;
  // Output only. The FeedItem affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  feedItem: string | undefined;
  // Output only. The Asset affected by this change.
  //
  // Behaviors: OUTPUT_ONLY
  asset: string | undefined;
};

// Enum listing the resource types support by the ChangeEvent resource.
export type googleadsgoogleadsv9enums_ChangeEventResourceTypeEnum_ChangeEventResourceType =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents an unclassified resource unknown
  // in this version.
  | "UNKNOWN"
  // An Ad resource change.
  | "AD"
  // An AdGroup resource change.
  | "AD_GROUP"
  // An AdGroupCriterion resource change.
  | "AD_GROUP_CRITERION"
  // A Campaign resource change.
  | "CAMPAIGN"
  // A CampaignBudget resource change.
  | "CAMPAIGN_BUDGET"
  // An AdGroupBidModifier resource change.
  | "AD_GROUP_BID_MODIFIER"
  // A CampaignCriterion resource change.
  | "CAMPAIGN_CRITERION"
  // A Feed resource change.
  | "FEED"
  // A FeedItem resource change.
  | "FEED_ITEM"
  // A CampaignFeed resource change.
  | "CAMPAIGN_FEED"
  // An AdGroupFeed resource change.
  | "AD_GROUP_FEED"
  // An AdGroupAd resource change.
  | "AD_GROUP_AD"
  // An Asset resource change.
  | "ASSET"
  // A CustomerAsset resource change.
  | "CUSTOMER_ASSET"
  // A CampaignAsset resource change.
  | "CAMPAIGN_ASSET"
  // An AdGroupAsset resource change.
  | "AD_GROUP_ASSET";
// The source that the change_event resource was made through.
export type googleadsgoogleadsv9enums_ChangeClientTypeEnum_ChangeClientType =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents an unclassified client type
  // unknown in this version.
  | "UNKNOWN"
  // Changes made through the "ads.google.com".
  // For example, changes made through campaign management.
  | "GOOGLE_ADS_WEB_CLIENT"
  // Changes made through Google Ads automated rules.
  | "GOOGLE_ADS_AUTOMATED_RULE"
  // Changes made through Google Ads scripts.
  | "GOOGLE_ADS_SCRIPTS"
  // Changes made by Google Ads bulk upload.
  | "GOOGLE_ADS_BULK_UPLOAD"
  // Changes made by Google Ads API.
  | "GOOGLE_ADS_API"
  // Changes made by Google Ads Editor.
  | "GOOGLE_ADS_EDITOR"
  // Changes made by Google Ads mobile app.
  | "GOOGLE_ADS_MOBILE_APP"
  // Changes made through Google Ads recommendations.
  | "GOOGLE_ADS_RECOMMENDATIONS"
  // Changes made through Search Ads 360 Sync.
  | "SEARCH_ADS_360_SYNC"
  // Changes made through Search Ads 360 Post.
  | "SEARCH_ADS_360_POST"
  // Changes made through internal tools.
  // For example, when a user sets a URL template on an entity like a
  // Campaign, it's automatically wrapped with the SA360 Clickserver URL.
  | "INTERNAL_TOOL"
  // Types of changes that are not categorized, for example,
  // changes made by coupon redemption through Google Ads.
  | "OTHER";
// A wrapper proto presenting all supported resources.
// Only the resource of the change_resource_type will be set.
export type googleadsgoogleadsv9resources_ChangeEvent_ChangedResource = {
  // Output only. Set if change_resource_type == AD.
  //
  // Behaviors: OUTPUT_ONLY
  ad: googleadsgoogleadsv9resources_Ad | undefined;
  // Output only. Set if change_resource_type == AD_GROUP.
  //
  // Behaviors: OUTPUT_ONLY
  adGroup: googleadsgoogleadsv9resources_AdGroup | undefined;
  // Output only. Set if change_resource_type == AD_GROUP_CRITERION.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupCriterion: googleadsgoogleadsv9resources_AdGroupCriterion | undefined;
  // Output only. Set if change_resource_type == CAMPAIGN.
  //
  // Behaviors: OUTPUT_ONLY
  campaign: googleadsgoogleadsv9resources_Campaign | undefined;
  // Output only. Set if change_resource_type == CAMPAIGN_BUDGET.
  //
  // Behaviors: OUTPUT_ONLY
  campaignBudget: googleadsgoogleadsv9resources_CampaignBudget | undefined;
  // Output only. Set if change_resource_type == AD_GROUP_BID_MODIFIER.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupBidModifier: googleadsgoogleadsv9resources_AdGroupBidModifier | undefined;
  // Output only. Set if change_resource_type == CAMPAIGN_CRITERION.
  //
  // Behaviors: OUTPUT_ONLY
  campaignCriterion: googleadsgoogleadsv9resources_CampaignCriterion | undefined;
  // Output only. Set if change_resource_type == FEED.
  //
  // Behaviors: OUTPUT_ONLY
  feed: googleadsgoogleadsv9resources_Feed | undefined;
  // Output only. Set if change_resource_type == FEED_ITEM.
  //
  // Behaviors: OUTPUT_ONLY
  feedItem: googleadsgoogleadsv9resources_FeedItem | undefined;
  // Output only. Set if change_resource_type == CAMPAIGN_FEED.
  //
  // Behaviors: OUTPUT_ONLY
  campaignFeed: googleadsgoogleadsv9resources_CampaignFeed | undefined;
  // Output only. Set if change_resource_type == AD_GROUP_FEED.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupFeed: googleadsgoogleadsv9resources_AdGroupFeed | undefined;
  // Output only. Set if change_resource_type == AD_GROUP_AD.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupAd: googleadsgoogleadsv9resources_AdGroupAd | undefined;
  // Output only. Set if change_resource_type == ASSET.
  //
  // Behaviors: OUTPUT_ONLY
  asset: googleadsgoogleadsv9resources_Asset | undefined;
  // Output only. Set if change_resource_type == CUSTOMER_ASSET.
  //
  // Behaviors: OUTPUT_ONLY
  customerAsset: googleadsgoogleadsv9resources_CustomerAsset | undefined;
  // Output only. Set if change_resource_type == CAMPAIGN_ASSET.
  //
  // Behaviors: OUTPUT_ONLY
  campaignAsset: googleadsgoogleadsv9resources_CampaignAsset | undefined;
  // Output only. Set if change_resource_type == AD_GROUP_ASSET.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupAsset: googleadsgoogleadsv9resources_AdGroupAsset | undefined;
};

// The operation on the changed resource in change_event resource.
export type googleadsgoogleadsv9enums_ResourceChangeOperationEnum_ResourceChangeOperation =
  // No value has been specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents an unclassified operation unknown
  // in this version.
  | "UNKNOWN"
  // The resource was created.
  | "CREATE"
  // The resource was modified.
  | "UPDATE"
  // The resource was removed.
  | "REMOVE";
// Describe a resource for combined audiences which includes different
// audiences.
export type googleadsgoogleadsv9resources_CombinedAudience = {
  // Immutable. The resource name of the combined audience.
  // Combined audience names have the form:
  // `customers/{customer_id}/combinedAudience/{combined_audience_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. ID of the combined audience.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Output only. Status of this combined audience. Indicates whether the combined audience
  // is enabled or removed.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CombinedAudienceStatusEnum_CombinedAudienceStatus | undefined;
  // Output only. Name of the combined audience. It should be unique across all combined
  // audiences.
  //
  // Behaviors: OUTPUT_ONLY
  name: string | undefined;
  // Output only. Description of this combined audience.
  //
  // Behaviors: OUTPUT_ONLY
  description: string | undefined;
};

// Enum containing possible combined audience status types.
export type googleadsgoogleadsv9enums_CombinedAudienceStatusEnum_CombinedAudienceStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Enabled status - combined audience is enabled and can be targeted.
  | "ENABLED"
  // Removed status - combined audience is removed and cannot be used for
  // targeting.
  | "REMOVED";
// A click view with metrics aggregated at each click level, including both
// valid and invalid clicks. For non-Search campaigns, metrics.clicks
// represents the number of valid and invalid interactions.
// Queries including ClickView must have a filter limiting the results to one
// day and can be requested for dates back to 90 days before the time of the
// request.
export type googleadsgoogleadsv9resources_ClickView = {
  // Output only. The resource name of the click view.
  // Click view resource names have the form:
  // `customers/{customer_id}/clickViews/{date (yyyy-MM-dd)}~{gclid}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The Google Click ID.
  //
  // Behaviors: OUTPUT_ONLY
  gclid?: string;
  // Output only. The location criteria matching the area of interest associated with the
  // impression.
  //
  // Behaviors: OUTPUT_ONLY
  areaOfInterest: googleadsgoogleadsv9common_ClickLocation | undefined;
  // Output only. The location criteria matching the location of presence associated with the
  // impression.
  //
  // Behaviors: OUTPUT_ONLY
  locationOfPresence: googleadsgoogleadsv9common_ClickLocation | undefined;
  // Output only. Page number in search results where the ad was shown.
  //
  // Behaviors: OUTPUT_ONLY
  pageNumber?: number;
  // Output only. The associated ad.
  //
  // Behaviors: OUTPUT_ONLY
  adGroupAd?: string;
  // Output only. The associated campaign location target, if one exists.
  //
  // Behaviors: OUTPUT_ONLY
  campaignLocationTarget?: string;
  // Output only. The associated user list, if one exists.
  //
  // Behaviors: OUTPUT_ONLY
  userList?: string;
  // Output only. The associated keyword, if one exists and the click corresponds to the
  // SEARCH channel.
  //
  // Behaviors: OUTPUT_ONLY
  keyword: string | undefined;
  // Output only. Basic information about the associated keyword, if it exists.
  //
  // Behaviors: OUTPUT_ONLY
  keywordInfo: googleadsgoogleadsv9common_KeywordInfo | undefined;
};

// Location criteria associated with a click.
export type googleadsgoogleadsv9common_ClickLocation = {
  // The city location criterion associated with the impression.
  city?: string;
  // The country location criterion associated with the impression.
  country?: string;
  // The metro location criterion associated with the impression.
  metro?: string;
  // The most specific location criterion associated with the impression.
  mostSpecific?: string;
  // The region location criterion associated with the impression.
  region?: string;
};

// A currency constant.
export type googleadsgoogleadsv9resources_CurrencyConstant = {
  // Output only. The resource name of the currency constant.
  // Currency constant resource names have the form:
  // `currencyConstants/{code}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. ISO 4217 three-letter currency code, e.g. "USD"
  //
  // Behaviors: OUTPUT_ONLY
  code?: string;
  // Output only. Full English name of the currency.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. Standard symbol for describing this currency, e.g. '$' for US Dollars.
  //
  // Behaviors: OUTPUT_ONLY
  symbol?: string;
  // Output only. The billable unit for this currency. Billed amounts should be multiples of
  // this value.
  //
  // Behaviors: OUTPUT_ONLY
  billableUnitMicros?: number;
};

// A custom audience. This is a list of users by interest.
export type googleadsgoogleadsv9resources_CustomAudience = {
  // Immutable. The resource name of the custom audience.
  // Custom audience resource names have the form:
  // `customers/{customer_id}/customAudiences/{custom_audience_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. ID of the custom audience.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Output only. Status of this custom audience. Indicates whether the custom audience is
  // enabled or removed.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_CustomAudienceStatusEnum_CustomAudienceStatus | undefined;
  // Name of the custom audience. It should be unique for all custom audiences
  // created by a customer.
  // This field is required for creating operations.
  name: string | undefined;
  // Type of the custom audience.
  // ("INTEREST" OR "PURCHASE_INTENT" is not allowed for newly created custom
  // audience but kept for existing audiences)
  type: googleadsgoogleadsv9enums_CustomAudienceTypeEnum_CustomAudienceType | undefined;
  // Description of this custom audience.
  description: string | undefined;
  // List of custom audience members that this custom audience is composed of.
  // Members can be added during CustomAudience creation. If members are
  // presented in UPDATE operation, existing members will be overridden.
  members: googleadsgoogleadsv9resources_CustomAudienceMember[] | undefined;
};

// Enum containing possible custom audience statuses.
export type googleadsgoogleadsv9enums_CustomAudienceStatusEnum_CustomAudienceStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Enabled status - custom audience is enabled and can be targeted.
  | "ENABLED"
  // Removed status - custom audience is removed and cannot be used for
  // targeting.
  | "REMOVED";
// Enum containing possible custom audience types.
export type googleadsgoogleadsv9enums_CustomAudienceTypeEnum_CustomAudienceType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Google Ads will auto-select the best interpretation at serving
  // time.
  | "AUTO"
  // Matches users by their interests.
  | "INTEREST"
  // Matches users by topics they are researching or products they are
  // considering for purchase.
  | "PURCHASE_INTENT"
  // Matches users by what they searched on Google Search.
  | "SEARCH";
// A member of custom audience. A member can be a KEYWORD, URL,
// PLACE_CATEGORY or APP. It can only be created or removed but not changed.
export type googleadsgoogleadsv9resources_CustomAudienceMember = {
  // The type of custom audience member, KEYWORD, URL, PLACE_CATEGORY or APP.
  memberType: googleadsgoogleadsv9enums_CustomAudienceMemberTypeEnum_CustomAudienceMemberType | undefined;
  // A keyword or keyword phrase — at most 10 words and 80 characters.
  // Languages with double-width characters such as Chinese, Japanese,
  // or Korean, are allowed 40 characters, which describes the user's
  // interests or actions.
  keyword?: string;
  // An HTTP URL, protocol-included — at most 2048 characters, which includes
  // contents users have interests in.
  url?: string;
  // A place type described by a place category users visit.
  placeCategory?: number;
  // A package name of Android apps which users installed such as
  // com.google.example.
  app?: string;
};

// Enum containing possible custom audience member types.
export type googleadsgoogleadsv9enums_CustomAudienceMemberTypeEnum_CustomAudienceMemberType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Users whose interests or actions are described by a keyword.
  | "KEYWORD"
  // Users who have interests related to the website's content.
  | "URL"
  // Users who visit place types described by a place category.
  | "PLACE_CATEGORY"
  // Users who have installed a mobile app.
  | "APP";
// Represents the permission of a single user onto a single customer.
export type googleadsgoogleadsv9resources_CustomerUserAccess = {
  // Immutable. Name of the resource.
  // Resource names have the form:
  // `customers/{customer_id}/customerUserAccesses/{user_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. User id of the user with the customer access.
  // Read only field
  //
  // Behaviors: OUTPUT_ONLY
  userId: number | undefined;
  // Output only. Email address of the user.
  // Read only field
  //
  // Behaviors: OUTPUT_ONLY
  emailAddress?: string;
  // Access role of the user.
  accessRole: googleadsgoogleadsv9enums_AccessRoleEnum_AccessRole | undefined;
  // Output only. The customer user access creation time.
  // Read only field
  // The format is "YYYY-MM-DD HH:MM:SS".
  // Examples: "2018-03-05 09:15:00" or "2018-02-01 14:34:30"
  //
  // Behaviors: OUTPUT_ONLY
  accessCreationDateTime?: string;
  // Output only. The email address of the inviter user.
  // Read only field
  //
  // Behaviors: OUTPUT_ONLY
  inviterUserEmailAddress?: string;
};

// A display keyword view.
export type googleadsgoogleadsv9resources_DisplayKeywordView = {
  // Output only. The resource name of the display keyword view.
  // Display Keyword view resource names have the form:
  // `customers/{customer_id}/displayKeywordViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// A distance view with metrics aggregated by the user's distance from an
// advertiser's location extensions. Each DistanceBucket includes all
// impressions that fall within its distance and a single impression will
// contribute to the metrics for all DistanceBuckets that include the user's
// distance.
export type googleadsgoogleadsv9resources_DistanceView = {
  // Output only. The resource name of the distance view.
  // Distance view resource names have the form:
  // `customers/{customer_id}/distanceViews/1~{distance_bucket}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Grouping of user distance from location extensions.
  //
  // Behaviors: OUTPUT_ONLY
  distanceBucket: googleadsgoogleadsv9enums_DistanceBucketEnum_DistanceBucket | undefined;
  // Output only. True if the DistanceBucket is using the metric system, false otherwise.
  //
  // Behaviors: OUTPUT_ONLY
  metricSystem?: boolean;
};

// The distance bucket for a user’s distance from an advertiser’s location
// extension.
export type googleadsgoogleadsv9enums_DistanceBucketEnum_DistanceBucket =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // User was within 700m of the location.
  | "WITHIN_700M"
  // User was within 1KM of the location.
  | "WITHIN_1KM"
  // User was within 5KM of the location.
  | "WITHIN_5KM"
  // User was within 10KM of the location.
  | "WITHIN_10KM"
  // User was within 15KM of the location.
  | "WITHIN_15KM"
  // User was within 20KM of the location.
  | "WITHIN_20KM"
  // User was within 25KM of the location.
  | "WITHIN_25KM"
  // User was within 30KM of the location.
  | "WITHIN_30KM"
  // User was within 35KM of the location.
  | "WITHIN_35KM"
  // User was within 40KM of the location.
  | "WITHIN_40KM"
  // User was within 45KM of the location.
  | "WITHIN_45KM"
  // User was within 50KM of the location.
  | "WITHIN_50KM"
  // User was within 55KM of the location.
  | "WITHIN_55KM"
  // User was within 60KM of the location.
  | "WITHIN_60KM"
  // User was within 65KM of the location.
  | "WITHIN_65KM"
  // User was beyond 65KM of the location.
  | "BEYOND_65KM"
  // User was within 0.7 miles of the location.
  | "WITHIN_0_7MILES"
  // User was within 1 mile of the location.
  | "WITHIN_1MILE"
  // User was within 5 miles of the location.
  | "WITHIN_5MILES"
  // User was within 10 miles of the location.
  | "WITHIN_10MILES"
  // User was within 15 miles of the location.
  | "WITHIN_15MILES"
  // User was within 20 miles of the location.
  | "WITHIN_20MILES"
  // User was within 25 miles of the location.
  | "WITHIN_25MILES"
  // User was within 30 miles of the location.
  | "WITHIN_30MILES"
  // User was within 35 miles of the location.
  | "WITHIN_35MILES"
  // User was within 40 miles of the location.
  | "WITHIN_40MILES"
  // User was beyond 40 miles of the location.
  | "BEYOND_40MILES";
// A feed placeholder view.
export type googleadsgoogleadsv9resources_FeedPlaceholderView = {
  // Output only. The resource name of the feed placeholder view.
  // Feed placeholder view resource names have the form:
  // `customers/{customer_id}/feedPlaceholderViews/{placeholder_type}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The placeholder type of the feed placeholder view.
  //
  // Behaviors: OUTPUT_ONLY
  placeholderType: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType | undefined;
};

// A gender view.
export type googleadsgoogleadsv9resources_GenderView = {
  // Output only. The resource name of the gender view.
  // Gender view resource names have the form:
  // `customers/{customer_id}/genderViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// A geo target constant.
export type googleadsgoogleadsv9resources_GeoTargetConstant = {
  // Output only. The resource name of the geo target constant.
  // Geo target constant resource names have the form:
  // `geoTargetConstants/{geo_target_constant_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the geo target constant.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. Geo target constant English name.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The ISO-3166-1 alpha-2 country code that is associated with the target.
  //
  // Behaviors: OUTPUT_ONLY
  countryCode?: string;
  // Output only. Geo target constant target type.
  //
  // Behaviors: OUTPUT_ONLY
  targetType?: string;
  // Output only. Geo target constant status.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_GeoTargetConstantStatusEnum_GeoTargetConstantStatus | undefined;
  // Output only. The fully qualified English name, consisting of the target's name and that
  // of its parent and country.
  //
  // Behaviors: OUTPUT_ONLY
  canonicalName?: string;
  // Output only. The resource name of the parent geo target constant.
  // Geo target constant resource names have the form:
  // `geoTargetConstants/{parent_geo_target_constant_id}`
  //
  // Behaviors: OUTPUT_ONLY
  parentGeoTarget?: string;
};

// The possible statuses of a geo target constant.
export type googleadsgoogleadsv9enums_GeoTargetConstantStatusEnum_GeoTargetConstantStatus =
  // No value has been specified.
  | "UNSPECIFIED"
  // The received value is not known in this version.
  // This is a response-only value.
  | "UNKNOWN"
  // The geo target constant is valid.
  | "ENABLED"
  // The geo target constant is obsolete and will be removed.
  | "REMOVAL_PLANNED";
// A group placement view.
export type googleadsgoogleadsv9resources_GroupPlacementView = {
  // Output only. The resource name of the group placement view.
  // Group placement view resource names have the form:
  // `customers/{customer_id}/groupPlacementViews/{ad_group_id}~{base64_placement}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The automatic placement string at group level, e. g. web domain, mobile
  // app ID, or a YouTube channel ID.
  //
  // Behaviors: OUTPUT_ONLY
  placement?: string;
  // Output only. Domain name for websites and YouTube channel name for YouTube channels.
  //
  // Behaviors: OUTPUT_ONLY
  displayName?: string;
  // Output only. URL of the group placement, e.g. domain, link to the mobile application in
  // app store, or a YouTube channel URL.
  //
  // Behaviors: OUTPUT_ONLY
  targetUrl?: string;
  // Output only. Type of the placement, e.g. Website, YouTube Channel, Mobile Application.
  //
  // Behaviors: OUTPUT_ONLY
  placementType: googleadsgoogleadsv9enums_PlacementTypeEnum_PlacementType | undefined;
};

// A hotel reconciliation. It contains conversion information from Hotel
// bookings to reconcile with advertiser records. These rows may be updated
// or canceled before billing via Bulk Uploads.
export type googleadsgoogleadsv9resources_HotelReconciliation = {
  // Immutable. The resource name of the hotel reconciliation.
  // Hotel reconciliation resource names have the form:
  // `customers/{customer_id}/hotelReconciliations/{commission_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Required. Output only. The commission ID is Google's ID for this booking. Every booking event is
  // assigned a Commission ID to help you match it to a guest stay.
  //
  // Behaviors: REQUIRED, OUTPUT_ONLY
  commissionId: string | undefined;
  // Output only. The order ID is the identifier for this booking as provided in the
  // 'transaction_id' parameter of the conversion tracking tag.
  //
  // Behaviors: OUTPUT_ONLY
  orderId: string | undefined;
  // Output only. Identifier for the Hotel Center account which provides the rates for the
  // Hotel campaign.
  //
  // Behaviors: OUTPUT_ONLY
  hotelCenterId: number | undefined;
  // Output only. Unique identifier for the booked property, as provided in the Hotel Center
  // feed. The hotel ID comes from the 'ID' parameter of the conversion tracking
  // tag.
  //
  // Behaviors: OUTPUT_ONLY
  hotelId: string | undefined;
  // Output only. Check-in date recorded when the booking is made. If the check-in date is
  // modified at reconciliation, the revised date will then take the place of
  // the original date in this column. Format is YYYY-MM-DD.
  //
  // Behaviors: OUTPUT_ONLY
  checkInDate: string | undefined;
  // Output only. Check-out date recorded when the booking is made. If the check-in date is
  // modified at reconciliation, the revised date will then take the place of
  // the original date in this column. Format is YYYY-MM-DD.
  //
  // Behaviors: OUTPUT_ONLY
  checkOutDate: string | undefined;
  // Required. Output only. Reconciled value is the final value of a booking as paid by the guest. If
  // original booking value changes for any reason, such as itinerary changes or
  // room upsells, the reconciled value should be the full final amount
  // collected. If a booking is canceled, the reconciled value should include
  // the value of any cancellation fees or non-refundable nights charged. Value
  // is in millionths of the base unit currency. For example, $12.35 would be
  // represented as 12350000. Currency unit is in the default customer currency.
  //
  // Behaviors: REQUIRED, OUTPUT_ONLY
  reconciledValueMicros: number | undefined;
  // Output only. Whether a given booking has been billed. Once billed, a booking can't be
  // modified.
  //
  // Behaviors: OUTPUT_ONLY
  billed: boolean | undefined;
  // Required. Output only. Current status of a booking with regards to reconciliation and billing.
  // Bookings should be reconciled within 45 days after the check-out date.
  // Any booking not reconciled within 45 days will be billed at its original
  // value.
  //
  // Behaviors: REQUIRED, OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_HotelReconciliationStatusEnum_HotelReconciliationStatus | undefined;
};

// Status of the hotel booking reconciliation.
export type googleadsgoogleadsv9enums_HotelReconciliationStatusEnum_HotelReconciliationStatus =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Bookings are for a future date, or a stay is underway but the check-out
  // date hasn't passed. An active reservation can't be reconciled.
  | "RESERVATION_ENABLED"
  // Check-out has already taken place, or the booked dates have passed
  // without cancellation. Bookings that are not reconciled within 45 days of
  // the check-out date are billed based on the original booking price.
  | "RECONCILIATION_NEEDED"
  // These bookings have been reconciled. Reconciled bookings are billed 45
  // days after the check-out date.
  | "RECONCILED"
  // This booking was marked as canceled. Canceled stays with a value greater
  // than zero (due to minimum stay rules or cancellation fees) are billed 45
  // days after the check-out date.
  | "CANCELED";
// A landing page view with metrics aggregated at the unexpanded final URL
// level.
export type googleadsgoogleadsv9resources_LandingPageView = {
  // Output only. The resource name of the landing page view.
  // Landing page view resource names have the form:
  // `customers/{customer_id}/landingPageViews/{unexpanded_final_url_fingerprint}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The advertiser-specified final URL.
  //
  // Behaviors: OUTPUT_ONLY
  unexpandedFinalUrl?: string;
};

// A language.
export type googleadsgoogleadsv9resources_LanguageConstant = {
  // Output only. The resource name of the language constant.
  // Language constant resource names have the form:
  // `languageConstants/{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the language constant.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. The language code, e.g. "en_US", "en_AU", "es", "fr", etc.
  //
  // Behaviors: OUTPUT_ONLY
  code?: string;
  // Output only. The full name of the language in English, e.g., "English (US)", "Spanish",
  // etc.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. Whether the language is targetable.
  //
  // Behaviors: OUTPUT_ONLY
  targetable?: boolean;
};

// A mobile application category constant.
export type googleadsgoogleadsv9resources_MobileAppCategoryConstant = {
  // Output only. The resource name of the mobile app category constant.
  // Mobile app category constant resource names have the form:
  // `mobileAppCategoryConstants/{mobile_app_category_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the mobile app category constant.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. Mobile app category name.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
};

// A mobile operating system version or a range of versions, depending on
// `operator_type`. List of available mobile platforms at
// https://developers.google.com/google-ads/api/reference/data/codes-formats#mobile-platforms
export type googleadsgoogleadsv9resources_OperatingSystemVersionConstant = {
  // Output only. The resource name of the operating system version constant.
  // Operating system version constant resource names have the form:
  // `operatingSystemVersionConstants/{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the operating system version.
  //
  // Behaviors: OUTPUT_ONLY
  id?: number;
  // Output only. Name of the operating system.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The OS Major Version number.
  //
  // Behaviors: OUTPUT_ONLY
  osMajorVersion?: number;
  // Output only. The OS Minor Version number.
  //
  // Behaviors: OUTPUT_ONLY
  osMinorVersion?: number;
  // Output only. Determines whether this constant represents a single version or a range of
  // versions.
  //
  // Behaviors: OUTPUT_ONLY
  operatorType: googleadsgoogleadsv9enums_OperatingSystemVersionOperatorTypeEnum_OperatingSystemVersionOperatorType | undefined;
};

// The type of operating system version.
export type googleadsgoogleadsv9enums_OperatingSystemVersionOperatorTypeEnum_OperatingSystemVersionOperatorType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Equals to the specified version.
  | "EQUALS_TO"
  // Greater than or equals to the specified version.
  | "GREATER_THAN_EQUALS_TO";
// A paid organic search term view providing a view of search stats across
// ads and organic listings aggregated by search term at the ad group level.
export type googleadsgoogleadsv9resources_PaidOrganicSearchTermView = {
  // Output only. The resource name of the search term view.
  // Search term view resource names have the form:
  // `customers/{customer_id}/paidOrganicSearchTermViews/{campaign_id}~
  // {ad_group_id}~{URL-base64 search term}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The search term.
  //
  // Behaviors: OUTPUT_ONLY
  searchTerm?: string;
};

// A parental status view.
export type googleadsgoogleadsv9resources_ParentalStatusView = {
  // Output only. The resource name of the parental status view.
  // Parental Status view resource names have the form:
  // `customers/{customer_id}/parentalStatusViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// A recommendation.
export type googleadsgoogleadsv9resources_Recommendation = {
  // Immutable. The resource name of the recommendation.
  // `customers/{customer_id}/recommendations/{recommendation_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The type of recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  type: googleadsgoogleadsv9enums_RecommendationTypeEnum_RecommendationType | undefined;
  // Output only. The impact on account performance as a result of applying the
  // recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  impact: googleadsgoogleadsv9resources_Recommendation_RecommendationImpact | undefined;
  // Output only. The budget targeted by this recommendation. This will be set only when
  // the recommendation affects a single campaign budget.
  // This field will be set for the following recommendation types:
  // CAMPAIGN_BUDGET, FORECASTING_CAMPAIGN_BUDGET, MARGINAL_ROI_CAMPAIGN_BUDGET,
  // MOVE_UNUSED_BUDGET
  //
  // Behaviors: OUTPUT_ONLY
  campaignBudget?: string;
  // Output only. The campaign targeted by this recommendation. This will be set only when
  // the recommendation affects a single campaign.
  // This field will be set for the following recommendation types:
  // CALL_EXTENSION, CALLOUT_EXTENSION, ENHANCED_CPC_OPT_IN, KEYWORD,
  // KEYWORD_MATCH_TYPE, MAXIMIZE_CLICKS_OPT_IN, MAXIMIZE_CONVERSIONS_OPT_IN,
  // OPTIMIZE_AD_ROTATION, RESPONSIVE_SEARCH_AD, SEARCH_PARTNERS_OPT_IN,
  // SITELINK_EXTENSION, TARGET_CPA_OPT_IN, TARGET_ROAS_OPT_IN, TEXT_AD
  //
  // Behaviors: OUTPUT_ONLY
  campaign?: string;
  // Output only. The ad group targeted by this recommendation. This will be set only when
  // the recommendation affects a single ad group.
  // This field will be set for the following recommendation types:
  // KEYWORD, OPTIMIZE_AD_ROTATION, RESPONSIVE_SEARCH_AD, TEXT_AD
  //
  // Behaviors: OUTPUT_ONLY
  adGroup?: string;
  // Output only. Whether the recommendation is dismissed or not.
  //
  // Behaviors: OUTPUT_ONLY
  dismissed?: boolean;
  // Output only. The campaign budget recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  campaignBudgetRecommendation?: googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation;
  // Output only. The forecasting campaign budget recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  forecastingCampaignBudgetRecommendation?: googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation;
  // Output only. The keyword recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  keywordRecommendation?: googleadsgoogleadsv9resources_Recommendation_KeywordRecommendation;
  // Output only. Add expanded text ad recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  textAdRecommendation?: googleadsgoogleadsv9resources_Recommendation_TextAdRecommendation;
  // Output only. The TargetCPA opt-in recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpaOptInRecommendation?: googleadsgoogleadsv9resources_Recommendation_TargetCpaOptInRecommendation;
  // Output only. The MaximizeConversions Opt-In recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  maximizeConversionsOptInRecommendation?: googleadsgoogleadsv9resources_Recommendation_MaximizeConversionsOptInRecommendation;
  // Output only. The Enhanced Cost-Per-Click Opt-In recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  enhancedCpcOptInRecommendation?: googleadsgoogleadsv9resources_Recommendation_EnhancedCpcOptInRecommendation;
  // Output only. The Search Partners Opt-In recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  searchPartnersOptInRecommendation?: googleadsgoogleadsv9resources_Recommendation_SearchPartnersOptInRecommendation;
  // Output only. The MaximizeClicks Opt-In recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  maximizeClicksOptInRecommendation?: googleadsgoogleadsv9resources_Recommendation_MaximizeClicksOptInRecommendation;
  // Output only. The Optimize Ad Rotation recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  optimizeAdRotationRecommendation?: googleadsgoogleadsv9resources_Recommendation_OptimizeAdRotationRecommendation;
  // Output only. The Callout extension recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  calloutExtensionRecommendation?: googleadsgoogleadsv9resources_Recommendation_CalloutExtensionRecommendation;
  // Output only. The Sitelink extension recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  sitelinkExtensionRecommendation?: googleadsgoogleadsv9resources_Recommendation_SitelinkExtensionRecommendation;
  // Output only. The Call extension recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  callExtensionRecommendation?: googleadsgoogleadsv9resources_Recommendation_CallExtensionRecommendation;
  // Output only. The keyword match type recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  keywordMatchTypeRecommendation?: googleadsgoogleadsv9resources_Recommendation_KeywordMatchTypeRecommendation;
  // Output only. The move unused budget recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  moveUnusedBudgetRecommendation?: googleadsgoogleadsv9resources_Recommendation_MoveUnusedBudgetRecommendation;
  // Output only. The Target ROAS opt-in recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  targetRoasOptInRecommendation?: googleadsgoogleadsv9resources_Recommendation_TargetRoasOptInRecommendation;
  // Output only. The add responsive search ad recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  responsiveSearchAdRecommendation?: googleadsgoogleadsv9resources_Recommendation_ResponsiveSearchAdRecommendation;
  // Output only. The marginal ROI campaign budget recommendation.
  //
  // Behaviors: OUTPUT_ONLY
  marginalRoiCampaignBudgetRecommendation?: googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation;
};

// Types of recommendations.
export type googleadsgoogleadsv9enums_RecommendationTypeEnum_RecommendationType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Budget recommendation for campaigns that are currently budget-constrained
  // (as opposed to the FORECASTING_CAMPAIGN_BUDGET recommendation, which
  // applies to campaigns that are expected to become budget-constrained in
  // the future).
  | "CAMPAIGN_BUDGET"
  // Keyword recommendation.
  | "KEYWORD"
  // Recommendation to add a new text ad.
  | "TEXT_AD"
  // Recommendation to update a campaign to use a Target CPA bidding strategy.
  | "TARGET_CPA_OPT_IN"
  // Recommendation to update a campaign to use the Maximize Conversions
  // bidding strategy.
  | "MAXIMIZE_CONVERSIONS_OPT_IN"
  // Recommendation to enable Enhanced Cost Per Click for a campaign.
  | "ENHANCED_CPC_OPT_IN"
  // Recommendation to start showing your campaign's ads on Google Search
  // Partners Websites.
  | "SEARCH_PARTNERS_OPT_IN"
  // Recommendation to update a campaign to use a Maximize Clicks bidding
  // strategy.
  | "MAXIMIZE_CLICKS_OPT_IN"
  // Recommendation to start using the "Optimize" ad rotation setting for the
  // given ad group.
  | "OPTIMIZE_AD_ROTATION"
  // Recommendation to add callout extensions to a campaign.
  | "CALLOUT_EXTENSION"
  // Recommendation to add sitelink extensions to a campaign.
  | "SITELINK_EXTENSION"
  // Recommendation to add call extensions to a campaign.
  | "CALL_EXTENSION"
  // Recommendation to change an existing keyword from one match type to a
  // broader match type.
  | "KEYWORD_MATCH_TYPE"
  // Recommendation to move unused budget from one budget to a constrained
  // budget.
  | "MOVE_UNUSED_BUDGET"
  // Budget recommendation for campaigns that are expected to become
  // budget-constrained in the future (as opposed to the CAMPAIGN_BUDGET
  // recommendation, which applies to campaigns that are currently
  // budget-constrained).
  | "FORECASTING_CAMPAIGN_BUDGET"
  // Recommendation to update a campaign to use a Target ROAS bidding
  // strategy.
  | "TARGET_ROAS_OPT_IN"
  // Recommendation to add a new responsive search ad.
  | "RESPONSIVE_SEARCH_AD"
  // Budget recommendation for campaigns whose ROI is predicted to increase
  // with a budget adjustment.
  | "MARGINAL_ROI_CAMPAIGN_BUDGET";
// The impact of making the change as described in the recommendation.
// Some types of recommendations may not have impact information.
export type googleadsgoogleadsv9resources_Recommendation_RecommendationImpact = {
  // Output only. Base metrics at the time the recommendation was generated.
  //
  // Behaviors: OUTPUT_ONLY
  baseMetrics: googleadsgoogleadsv9resources_Recommendation_RecommendationMetrics | undefined;
  // Output only. Estimated metrics if the recommendation is applied.
  //
  // Behaviors: OUTPUT_ONLY
  potentialMetrics: googleadsgoogleadsv9resources_Recommendation_RecommendationMetrics | undefined;
};

// Weekly account performance metrics. For some recommendation types, these
// are averaged over the past 90-day period and hence can be fractional.
export type googleadsgoogleadsv9resources_Recommendation_RecommendationMetrics = {
  // Output only. Number of ad impressions.
  //
  // Behaviors: OUTPUT_ONLY
  impressions?: number;
  // Output only. Number of ad clicks.
  //
  // Behaviors: OUTPUT_ONLY
  clicks?: number;
  // Output only. Cost (in micros) for advertising, in the local currency for the account.
  //
  // Behaviors: OUTPUT_ONLY
  costMicros?: number;
  // Output only. Number of conversions.
  //
  // Behaviors: OUTPUT_ONLY
  conversions?: number;
  // Output only. Number of video views for a video ad campaign.
  //
  // Behaviors: OUTPUT_ONLY
  videoViews?: number;
};

// The budget recommendation for budget constrained campaigns.
export type googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation = {
  // Output only. The current budget amount in micros.
  //
  // Behaviors: OUTPUT_ONLY
  currentBudgetAmountMicros?: number;
  // Output only. The recommended budget amount in micros.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetAmountMicros?: number;
  // Output only. The budget amounts and associated impact estimates for some values of
  // possible budget amounts.
  //
  // Behaviors: OUTPUT_ONLY
  budgetOptions: googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation_CampaignBudgetRecommendationOption[] | undefined;
};

// The impact estimates for a given budget amount.
export type googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation_CampaignBudgetRecommendationOption = {
  // Output only. The budget amount for this option.
  //
  // Behaviors: OUTPUT_ONLY
  budgetAmountMicros?: number;
  // Output only. The impact estimate if budget is changed to amount specified in this
  // option.
  //
  // Behaviors: OUTPUT_ONLY
  impact: googleadsgoogleadsv9resources_Recommendation_RecommendationImpact | undefined;
};

// The keyword recommendation.
export type googleadsgoogleadsv9resources_Recommendation_KeywordRecommendation = {
  // Output only. The recommended keyword.
  //
  // Behaviors: OUTPUT_ONLY
  keyword: googleadsgoogleadsv9common_KeywordInfo | undefined;
  // Output only. The recommended CPC (cost-per-click) bid.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedCpcBidMicros?: number;
};

// The text ad recommendation.
export type googleadsgoogleadsv9resources_Recommendation_TextAdRecommendation = {
  // Output only. Recommended ad.
  //
  // Behaviors: OUTPUT_ONLY
  ad: googleadsgoogleadsv9resources_Ad | undefined;
  // Output only. Creation date of the recommended ad.
  // YYYY-MM-DD format, e.g., 2018-04-17.
  //
  // Behaviors: OUTPUT_ONLY
  creationDate?: string;
  // Output only. Date, if present, is the earliest when the recommendation will be auto
  // applied.
  // YYYY-MM-DD format, e.g., 2018-04-17.
  //
  // Behaviors: OUTPUT_ONLY
  autoApplyDate?: string;
};

// The Target CPA opt-in recommendation.
export type googleadsgoogleadsv9resources_Recommendation_TargetCpaOptInRecommendation = {
  // Output only. The available goals and corresponding options for Target CPA strategy.
  //
  // Behaviors: OUTPUT_ONLY
  options: googleadsgoogleadsv9resources_Recommendation_TargetCpaOptInRecommendation_TargetCpaOptInRecommendationOption[] | undefined;
  // Output only. The recommended average CPA target. See required budget amount and impact
  // of using this recommendation in options list.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedTargetCpaMicros?: number;
};

// The Target CPA opt-in option with impact estimate.
export type googleadsgoogleadsv9resources_Recommendation_TargetCpaOptInRecommendation_TargetCpaOptInRecommendationOption = {
  // Output only. The goal achieved by this option.
  //
  // Behaviors: OUTPUT_ONLY
  goal: googleadsgoogleadsv9enums_TargetCpaOptInRecommendationGoalEnum_TargetCpaOptInRecommendationGoal | undefined;
  // Output only. Average CPA target.
  //
  // Behaviors: OUTPUT_ONLY
  targetCpaMicros?: number;
  // Output only. The minimum campaign budget, in local currency for the account,
  // required to achieve the target CPA.
  // Amount is specified in micros, where one million is equivalent to one
  // currency unit.
  //
  // Behaviors: OUTPUT_ONLY
  requiredCampaignBudgetAmountMicros?: number;
  // Output only. The impact estimate if this option is selected.
  //
  // Behaviors: OUTPUT_ONLY
  impact: googleadsgoogleadsv9resources_Recommendation_RecommendationImpact | undefined;
};

// Goal of TargetCpaOptIn recommendation.
export type googleadsgoogleadsv9enums_TargetCpaOptInRecommendationGoalEnum_TargetCpaOptInRecommendationGoal =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Recommendation to set Target CPA to maintain the same cost.
  | "SAME_COST"
  // Recommendation to set Target CPA to maintain the same conversions.
  | "SAME_CONVERSIONS"
  // Recommendation to set Target CPA to maintain the same CPA.
  | "SAME_CPA"
  // Recommendation to set Target CPA to a value that is as close as possible
  // to, yet lower than, the actual CPA (computed for past 28 days).
  | "CLOSEST_CPA";
// The Maximize Conversions Opt-In recommendation.
export type googleadsgoogleadsv9resources_Recommendation_MaximizeConversionsOptInRecommendation = {
  // Output only. The recommended new budget amount.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetAmountMicros?: number;
};

// The Enhanced Cost-Per-Click Opt-In recommendation.
export type googleadsgoogleadsv9resources_Recommendation_EnhancedCpcOptInRecommendation = {
};

// The Search Partners Opt-In recommendation.
export type googleadsgoogleadsv9resources_Recommendation_SearchPartnersOptInRecommendation = {
};

// The Maximize Clicks opt-in recommendation.
export type googleadsgoogleadsv9resources_Recommendation_MaximizeClicksOptInRecommendation = {
  // Output only. The recommended new budget amount.
  // Only set if the current budget is too high.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedBudgetAmountMicros?: number;
};

// The Optimize Ad Rotation recommendation.
export type googleadsgoogleadsv9resources_Recommendation_OptimizeAdRotationRecommendation = {
};

// The Callout extension recommendation.
export type googleadsgoogleadsv9resources_Recommendation_CalloutExtensionRecommendation = {
  // Output only. Callout extensions recommended to be added.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedExtensions: googleadsgoogleadsv9common_CalloutFeedItem[] | undefined;
};

// The Sitelink extension recommendation.
export type googleadsgoogleadsv9resources_Recommendation_SitelinkExtensionRecommendation = {
  // Output only. Sitelink extensions recommended to be added.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedExtensions: googleadsgoogleadsv9common_SitelinkFeedItem[] | undefined;
};

// The Call extension recommendation.
export type googleadsgoogleadsv9resources_Recommendation_CallExtensionRecommendation = {
  // Output only. Call extensions recommended to be added.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedExtensions: googleadsgoogleadsv9common_CallFeedItem[] | undefined;
};

// The keyword match type recommendation.
export type googleadsgoogleadsv9resources_Recommendation_KeywordMatchTypeRecommendation = {
  // Output only. The existing keyword where the match type should be more broad.
  //
  // Behaviors: OUTPUT_ONLY
  keyword: googleadsgoogleadsv9common_KeywordInfo | undefined;
  // Output only. The recommended new match type.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedMatchType: googleadsgoogleadsv9enums_KeywordMatchTypeEnum_KeywordMatchType | undefined;
};

// The move unused budget recommendation.
export type googleadsgoogleadsv9resources_Recommendation_MoveUnusedBudgetRecommendation = {
  // Output only. The excess budget's resource_name.
  //
  // Behaviors: OUTPUT_ONLY
  excessCampaignBudget?: string;
  // Output only. The recommendation for the constrained budget to increase.
  //
  // Behaviors: OUTPUT_ONLY
  budgetRecommendation: googleadsgoogleadsv9resources_Recommendation_CampaignBudgetRecommendation | undefined;
};

// The Target ROAS opt-in recommendation.
export type googleadsgoogleadsv9resources_Recommendation_TargetRoasOptInRecommendation = {
  // Output only. The recommended target ROAS (revenue per unit of spend).
  // The value is between 0.01 and 1000.0, inclusive.
  //
  // Behaviors: OUTPUT_ONLY
  recommendedTargetRoas?: number;
  // Output only. The minimum campaign budget, in local currency for the account,
  // required to achieve the target ROAS.
  // Amount is specified in micros, where one million is equivalent to one
  // currency unit.
  //
  // Behaviors: OUTPUT_ONLY
  requiredCampaignBudgetAmountMicros?: number;
};

// The add responsive search ad recommendation.
export type googleadsgoogleadsv9resources_Recommendation_ResponsiveSearchAdRecommendation = {
  // Output only. Recommended ad.
  //
  // Behaviors: OUTPUT_ONLY
  ad: googleadsgoogleadsv9resources_Ad | undefined;
};

// A search term view with metrics aggregated by search term at the ad group
// level.
export type googleadsgoogleadsv9resources_SearchTermView = {
  // Output only. The resource name of the search term view.
  // Search term view resource names have the form:
  // `customers/{customer_id}/searchTermViews/{campaign_id}~{ad_group_id}~{URL-base64_search_term}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The search term.
  //
  // Behaviors: OUTPUT_ONLY
  searchTerm?: string;
  // Output only. The ad group the search term served in.
  //
  // Behaviors: OUTPUT_ONLY
  adGroup?: string;
  // Output only. Indicates whether the search term is currently one of your
  // targeted or excluded keywords.
  //
  // Behaviors: OUTPUT_ONLY
  status: googleadsgoogleadsv9enums_SearchTermTargetingStatusEnum_SearchTermTargetingStatus | undefined;
};

// Indicates whether the search term is one of your targeted or excluded
// keywords.
export type googleadsgoogleadsv9enums_SearchTermTargetingStatusEnum_SearchTermTargetingStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Search term is added to targeted keywords.
  | "ADDED"
  // Search term matches a negative keyword.
  | "EXCLUDED"
  // Search term has been both added and excluded.
  | "ADDED_EXCLUDED"
  // Search term is neither targeted nor excluded.
  | "NONE";
// A Smart campaign search term view.
export type googleadsgoogleadsv9resources_SmartCampaignSearchTermView = {
  // Output only. The resource name of the Smart campaign search term view.
  // Smart campaign search term view resource names have the form:
  // `customers/{customer_id}/smartCampaignSearchTermViews/{campaign_id}~{URL-base64_search_term}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The search term.
  //
  // Behaviors: OUTPUT_ONLY
  searchTerm: string | undefined;
  // Output only. The Smart campaign the search term served in.
  //
  // Behaviors: OUTPUT_ONLY
  campaign: string | undefined;
};

// A data sharing connection, allowing the import of third party app analytics
// into a Google Ads Customer.
export type googleadsgoogleadsv9resources_ThirdPartyAppAnalyticsLink = {
  // Immutable. The resource name of the third party app analytics link.
  // Third party app analytics link resource names have the form:
  // `customers/{customer_id}/thirdPartyAppAnalyticsLinks/{account_link_id}`
  //
  // Behaviors: IMMUTABLE
  resourceName: string | undefined;
  // Output only. The shareable link ID that should be provided to the third party when
  // setting up app analytics. This is able to be regenerated using regenerate
  // method in the ThirdPartyAppAnalyticsLinkService.
  //
  // Behaviors: OUTPUT_ONLY
  shareableLinkId?: string;
};

// A user interest: a particular interest-based vertical to be targeted.
export type googleadsgoogleadsv9resources_UserInterest = {
  // Output only. The resource name of the user interest.
  // User interest resource names have the form:
  // `customers/{customer_id}/userInterests/{user_interest_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Taxonomy type of the user interest.
  //
  // Behaviors: OUTPUT_ONLY
  taxonomyType: googleadsgoogleadsv9enums_UserInterestTaxonomyTypeEnum_UserInterestTaxonomyType | undefined;
  // Output only. The ID of the user interest.
  //
  // Behaviors: OUTPUT_ONLY
  userInterestId?: number;
  // Output only. The name of the user interest.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The parent of the user interest.
  //
  // Behaviors: OUTPUT_ONLY
  userInterestParent?: string;
  // Output only. True if the user interest is launched to all channels and locales.
  //
  // Behaviors: OUTPUT_ONLY
  launchedToAll?: boolean;
  // Output only. Availability information of the user interest.
  //
  // Behaviors: OUTPUT_ONLY
  availabilities: googleadsgoogleadsv9common_CriterionCategoryAvailability[] | undefined;
};

// Enum containing the possible UserInterestTaxonomyTypes.
export type googleadsgoogleadsv9enums_UserInterestTaxonomyTypeEnum_UserInterestTaxonomyType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The affinity for this user interest.
  | "AFFINITY"
  // The market for this user interest.
  | "IN_MARKET"
  // Users known to have installed applications in the specified categories.
  | "MOBILE_APP_INSTALL_USER"
  // The geographical location of the interest-based vertical.
  | "VERTICAL_GEO"
  // User interest criteria for new smart phone users.
  | "NEW_SMART_PHONE_USER";
// A life event: a particular interest-based vertical to be targeted to reach
// users when they are in the midst of important life milestones.
export type googleadsgoogleadsv9resources_LifeEvent = {
  // Output only. The resource name of the life event.
  // Life event resource names have the form:
  // `customers/{customer_id}/lifeEvents/{life_event_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The ID of the life event.
  //
  // Behaviors: OUTPUT_ONLY
  id: number | undefined;
  // Output only. The name of the life event. E.g.,"Recently Moved"
  //
  // Behaviors: OUTPUT_ONLY
  name: string | undefined;
  // Output only. The parent of the life_event.
  //
  // Behaviors: OUTPUT_ONLY
  parent: string | undefined;
  // Output only. True if the life event is launched to all channels and locales.
  //
  // Behaviors: OUTPUT_ONLY
  launchedToAll: boolean | undefined;
  // Output only. Availability information of the life event.
  //
  // Behaviors: OUTPUT_ONLY
  availabilities: googleadsgoogleadsv9common_CriterionCategoryAvailability[] | undefined;
};

// A user location view.
// User Location View includes all metrics aggregated at the country level,
// one row per country. It reports metrics at the actual physical location of
// the user by targeted or not targeted location. If other segment fields are
// used, you may get more than one row per country.
export type googleadsgoogleadsv9resources_UserLocationView = {
  // Output only. The resource name of the user location view.
  // UserLocation view resource names have the form:
  // `customers/{customer_id}/userLocationViews/{country_criterion_id}~{targeting_location}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. Criterion Id for the country.
  //
  // Behaviors: OUTPUT_ONLY
  countryCriterionId?: number;
  // Output only. Indicates whether location was targeted or not.
  //
  // Behaviors: OUTPUT_ONLY
  targetingLocation?: boolean;
};

// A webpage view.
export type googleadsgoogleadsv9resources_WebpageView = {
  // Output only. The resource name of the webpage view.
  // Webpage view resource names have the form:
  // `customers/{customer_id}/webpageViews/{ad_group_id}~{criterion_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
};

// Metrics data.
export type googleadsgoogleadsv9common_Metrics = {
  // The percent of your ad impressions that are shown as the very first ad
  // above the organic search results.
  absoluteTopImpressionPercentage?: number;
  // Average cost of viewable impressions (`active_view_impressions`).
  activeViewCpm?: number;
  // Active view measurable clicks divided by active view viewable impressions.
  // This metric is reported only for display network.
  activeViewCtr?: number;
  // A measurement of how often your ad has become viewable on a Display
  // Network site.
  activeViewImpressions?: number;
  // The ratio of impressions that could be measured by Active View over the
  // number of served impressions.
  activeViewMeasurability?: number;
  // The cost of the impressions you received that were measurable by Active
  // View.
  activeViewMeasurableCostMicros?: number;
  // The number of times your ads are appearing on placements in positions
  // where they can be seen.
  activeViewMeasurableImpressions?: number;
  // The percentage of time when your ad appeared on an Active View enabled site
  // (measurable impressions) and was viewable (viewable impressions).
  activeViewViewability?: number;
  // All conversions from interactions (as oppose to view through conversions)
  // divided by the number of ad interactions.
  allConversionsFromInteractionsRate?: number;
  // The value of all conversions.
  allConversionsValue?: number;
  // The value of all conversions. When this column is selected with date, the
  // values in date column means the conversion date. Details for the
  // by_conversion_date columns are available at
  // https://support.google.com/google-ads/answer/9549009.
  allConversionsValueByConversionDate: number | undefined;
  // The total number of conversions. This includes all conversions regardless
  // of the value of include_in_conversions_metric.
  allConversions?: number;
  // The total number of conversions. This includes all conversions regardless
  // of the value of include_in_conversions_metric. When this column is selected
  // with date, the values in date column means the conversion date. Details for
  // the by_conversion_date columns are available at
  // https://support.google.com/google-ads/answer/9549009.
  allConversionsByConversionDate: number | undefined;
  // The value of all conversions divided by the total cost of ad interactions
  // (such as clicks for text ads or views for video ads).
  allConversionsValuePerCost?: number;
  // The number of times people clicked the "Call" button to call a store during
  // or after clicking an ad. This number doesn't include whether or not calls
  // were connected, or the duration of any calls.
  // This metric applies to feed items only.
  allConversionsFromClickToCall?: number;
  // The number of times people clicked a "Get directions" button to navigate to
  // a store after clicking an ad.
  // This metric applies to feed items only.
  allConversionsFromDirections?: number;
  // The value of all conversions from interactions divided by the total number
  // of interactions.
  allConversionsFromInteractionsValuePerInteraction?: number;
  // The number of times people clicked a link to view a store's menu after
  // clicking an ad.
  // This metric applies to feed items only.
  allConversionsFromMenu?: number;
  // The number of times people placed an order at a store after clicking an ad.
  // This metric applies to feed items only.
  allConversionsFromOrder?: number;
  // The number of other conversions (for example, posting a review or saving a
  // location for a store) that occurred after people clicked an ad.
  // This metric applies to feed items only.
  allConversionsFromOtherEngagement?: number;
  // Estimated number of times people visited a store after clicking an ad.
  // This metric applies to feed items only.
  allConversionsFromStoreVisit?: number;
  // The number of times that people were taken to a store's URL after clicking
  // an ad.
  // This metric applies to feed items only.
  allConversionsFromStoreWebsite?: number;
  // The average amount you pay per interaction. This amount is the total cost
  // of your ads divided by the total number of interactions.
  averageCost?: number;
  // The total cost of all clicks divided by the total number of clicks
  // received.
  averageCpc?: number;
  // The average amount that you've been charged for an ad engagement. This
  // amount is the total cost of all ad engagements divided by the total number
  // of ad engagements.
  averageCpe?: number;
  // Average cost-per-thousand impressions (CPM).
  averageCpm?: number;
  // The average amount you pay each time someone views your ad.
  // The average CPV is defined by the total cost of all ad views divided by
  // the number of views.
  averageCpv?: number;
  // Average number of pages viewed per session.
  averagePageViews?: number;
  // Total duration of all sessions (in seconds) / number of sessions. Imported
  // from Google Analytics.
  averageTimeOnSite?: number;
  // An indication of how other advertisers are bidding on similar products.
  benchmarkAverageMaxCpc?: number;
  // An indication on how other advertisers' Shopping ads for similar products
  // are performing based on how often people who see their ad click on it.
  benchmarkCtr?: number;
  // Percentage of clicks where the user only visited a single page on your
  // site. Imported from Google Analytics.
  bounceRate?: number;
  // The number of clicks.
  clicks?: number;
  // The number of times your ad or your site's listing in the unpaid
  // results was clicked. See the help page at
  // https://support.google.com/google-ads/answer/3097241 for details.
  combinedClicks?: number;
  // The number of times your ad or your site's listing in the unpaid
  // results was clicked (combined_clicks) divided by combined_queries. See the
  // help page at https://support.google.com/google-ads/answer/3097241 for
  // details.
  combinedClicksPerQuery?: number;
  // The number of searches that returned pages from your site in the unpaid
  // results or showed one of your text ads. See the help page at
  // https://support.google.com/google-ads/answer/3097241 for details.
  combinedQueries?: number;
  // The estimated percent of times that your ad was eligible to show
  // on the Display Network but didn't because your budget was too low.
  // Note: Content budget lost impression share is reported in the range of 0
  // to 0.9. Any value above 0.9 is reported as 0.9001.
  contentBudgetLostImpressionShare?: number;
  // The impressions you've received on the Display Network divided
  // by the estimated number of impressions you were eligible to receive.
  // Note: Content impression share is reported in the range of 0.1 to 1. Any
  // value below 0.1 is reported as 0.0999.
  contentImpressionShare?: number;
  // The last date/time a conversion tag for this conversion action successfully
  // fired and was seen by Google Ads. This firing event may not have been the
  // result of an attributable conversion (e.g. because the tag was fired from a
  // browser that did not previously click an ad from an appropriate
  // advertiser). The date/time is in the customer's time zone.
  conversionLastReceivedRequestDateTime?: string;
  // The date of the most recent conversion for this conversion action. The date
  // is in the customer's time zone.
  conversionLastConversionDate?: string;
  // The estimated percentage of impressions on the Display Network
  // that your ads didn't receive due to poor Ad Rank.
  // Note: Content rank lost impression share is reported in the range of 0
  // to 0.9. Any value above 0.9 is reported as 0.9001.
  contentRankLostImpressionShare?: number;
  // Conversions from interactions divided by the number of ad interactions
  // (such as clicks for text ads or views for video ads). This only includes
  // conversion actions which include_in_conversions_metric attribute is set to
  // true. If you use conversion-based bidding, your bid strategies will
  // optimize for these conversions.
  conversionsFromInteractionsRate?: number;
  // The value of conversions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  conversionsValue?: number;
  // The value of conversions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions. When this column is selected with date, the values in date
  // column means the conversion date. Details for the by_conversion_date
  // columns are available at
  // https://support.google.com/google-ads/answer/9549009.
  conversionsValueByConversionDate: number | undefined;
  // The value of conversions divided by the cost of ad interactions. This only
  // includes conversion actions which include_in_conversions_metric attribute
  // is set to true. If you use conversion-based bidding, your bid strategies
  // will optimize for these conversions.
  conversionsValuePerCost?: number;
  // The value of conversions from interactions divided by the number of ad
  // interactions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  conversionsFromInteractionsValuePerInteraction?: number;
  // The number of conversions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  conversions?: number;
  // The number of conversions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions. When this column is selected with date, the values in date
  // column means the conversion date. Details for the by_conversion_date
  // columns are available at
  // https://support.google.com/google-ads/answer/9549009.
  conversionsByConversionDate: number | undefined;
  // The sum of your cost-per-click (CPC) and cost-per-thousand impressions
  // (CPM) costs during this period.
  costMicros?: number;
  // The cost of ad interactions divided by all conversions.
  costPerAllConversions?: number;
  // The cost of ad interactions divided by conversions. This only includes
  // conversion actions which include_in_conversions_metric attribute is set to
  // true. If you use conversion-based bidding, your bid strategies will
  // optimize for these conversions.
  costPerConversion?: number;
  // The cost of ad interactions divided by current model attributed
  // conversions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  costPerCurrentModelAttributedConversion?: number;
  // Conversions from when a customer clicks on a Google Ads ad on one device,
  // then converts on a different device or browser.
  // Cross-device conversions are already included in all_conversions.
  crossDeviceConversions?: number;
  // The number of clicks your ad receives (Clicks) divided by the number
  // of times your ad is shown (Impressions).
  ctr?: number;
  // Shows how your historic conversions data would look under the attribution
  // model you've currently selected. This only includes conversion actions
  // which include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  currentModelAttributedConversions?: number;
  // Current model attributed conversions from interactions divided by the
  // number of ad interactions (such as clicks for text ads or views for video
  // ads). This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  currentModelAttributedConversionsFromInteractionsRate?: number;
  // The value of current model attributed conversions from interactions divided
  // by the number of ad interactions. This only includes conversion actions
  // which include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  currentModelAttributedConversionsFromInteractionsValuePerInteraction?: number;
  // The value of current model attributed conversions. This only includes
  // conversion actions which include_in_conversions_metric attribute is set to
  // true. If you use conversion-based bidding, your bid strategies will
  // optimize for these conversions.
  currentModelAttributedConversionsValue?: number;
  // The value of current model attributed conversions divided by the cost of ad
  // interactions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  currentModelAttributedConversionsValuePerCost?: number;
  // How often people engage with your ad after it's shown to them. This is the
  // number of ad expansions divided by the number of times your ad is shown.
  engagementRate?: number;
  // The number of engagements.
  // An engagement occurs when a viewer expands your Lightbox ad. Also, in the
  // future, other ad types may support engagement metrics.
  engagements?: number;
  // Average lead value based on clicks.
  hotelAverageLeadValueMicros?: number;
  // The average price difference between the price offered by reporting hotel
  // advertiser and the cheapest price offered by the competing advertiser.
  hotelPriceDifferencePercentage?: number;
  // The number of impressions that hotel partners could have had given their
  // feed performance.
  hotelEligibleImpressions?: number;
  // The creative historical quality score.
  historicalCreativeQualityScore: googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket | undefined;
  // The quality of historical landing page experience.
  historicalLandingPageQualityScore: googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket | undefined;
  // The historical quality score.
  historicalQualityScore?: number;
  // The historical search predicted click through rate (CTR).
  historicalSearchPredictedCtr: googleadsgoogleadsv9enums_QualityScoreBucketEnum_QualityScoreBucket | undefined;
  // The number of times the ad was forwarded to someone else as a message.
  gmailForwards?: number;
  // The number of times someone has saved your Gmail ad to their inbox as a
  // message.
  gmailSaves?: number;
  // The number of clicks to the landing page on the expanded state of Gmail
  // ads.
  gmailSecondaryClicks?: number;
  // The number of times a store's location-based ad was shown.
  // This metric applies to feed items only.
  impressionsFromStoreReach?: number;
  // Count of how often your ad has appeared on a search results page or
  // website on the Google Network.
  impressions?: number;
  // How often people interact with your ad after it is shown to them.
  // This is the number of interactions divided by the number of times your ad
  // is shown.
  interactionRate?: number;
  // The number of interactions.
  // An interaction is the main user action associated with an ad format-clicks
  // for text and shopping ads, views for video ads, and so on.
  interactions?: number;
  // The types of payable and free interactions.
  interactionEventTypes: googleadsgoogleadsv9enums_InteractionEventTypeEnum_InteractionEventType[] | undefined;
  // The percentage of clicks filtered out of your total number of clicks
  // (filtered + non-filtered clicks) during the reporting period.
  invalidClickRate?: number;
  // Number of clicks Google considers illegitimate and doesn't charge you for.
  invalidClicks?: number;
  // Number of message chats initiated for Click To Message impressions that
  // were message tracking eligible.
  messageChats?: number;
  // Number of Click To Message impressions that were message tracking eligible.
  messageImpressions?: number;
  // Number of message chats initiated (message_chats) divided by the number
  // of message impressions (message_impressions).
  // Rate at which a user initiates a message chat from an ad impression with
  // a messaging option and message tracking enabled.
  // Note that this rate can be more than 1.0 for a given message impression.
  messageChatRate?: number;
  // The percentage of mobile clicks that go to a mobile-friendly page.
  mobileFriendlyClicksPercentage?: number;
  // Total optimization score uplift of all recommendations.
  optimizationScoreUplift?: number;
  // URL for the optimization score page in the Google Ads web interface.
  // This metric can be selected from `customer` or `campaign`, and can be
  // segmented by `segments.recommendation_type`. For example, `SELECT
  // metrics.optimization_score_url, segments.recommendation_type FROM
  // customer` will return a URL for each unique (customer, recommendation_type)
  // combination.
  optimizationScoreUrl?: string;
  // The number of times someone clicked your site's listing in the unpaid
  // results for a particular query. See the help page at
  // https://support.google.com/google-ads/answer/3097241 for details.
  organicClicks?: number;
  // The number of times someone clicked your site's listing in the unpaid
  // results (organic_clicks) divided by the total number of searches that
  // returned pages from your site (organic_queries). See the help page at
  // https://support.google.com/google-ads/answer/3097241 for details.
  organicClicksPerQuery?: number;
  // The number of listings for your site in the unpaid search results. See the
  // help page at https://support.google.com/google-ads/answer/3097241 for
  // details.
  organicImpressions?: number;
  // The number of times a page from your site was listed in the unpaid search
  // results (organic_impressions) divided by the number of searches returning
  // your site's listing in the unpaid results (organic_queries). See the help
  // page at https://support.google.com/google-ads/answer/3097241 for details.
  organicImpressionsPerQuery?: number;
  // The total number of searches that returned your site's listing in the
  // unpaid results. See the help page at
  // https://support.google.com/google-ads/answer/3097241 for details.
  organicQueries?: number;
  // Percentage of first-time sessions (from people who had never visited your
  // site before). Imported from Google Analytics.
  percentNewVisitors?: number;
  // Number of offline phone calls.
  phoneCalls?: number;
  // Number of offline phone impressions.
  phoneImpressions?: number;
  // Number of phone calls received (phone_calls) divided by the number of
  // times your phone number is shown (phone_impressions).
  phoneThroughRate?: number;
  // Your clickthrough rate (Ctr) divided by the average clickthrough rate of
  // all advertisers on the websites that show your ads. Measures how your ads
  // perform on Display Network sites compared to other ads on the same sites.
  relativeCtr?: number;
  // The percentage of the customer's Shopping or Search ad impressions that are
  // shown in the most prominent Shopping position. See
  // https://support.google.com/google-ads/answer/7501826
  // for details. Any value below 0.1 is reported as 0.0999.
  searchAbsoluteTopImpressionShare?: number;
  // The number estimating how often your ad wasn't the very first ad above the
  // organic search results due to a low budget. Note: Search
  // budget lost absolute top impression share is reported in the range of 0 to
  // 0.9. Any value above 0.9 is reported as 0.9001.
  searchBudgetLostAbsoluteTopImpressionShare?: number;
  // The estimated percent of times that your ad was eligible to show on the
  // Search Network but didn't because your budget was too low. Note: Search
  // budget lost impression share is reported in the range of 0 to 0.9. Any
  // value above 0.9 is reported as 0.9001.
  searchBudgetLostImpressionShare?: number;
  // The number estimating how often your ad didn't show anywhere above the
  // organic search results due to a low budget. Note: Search
  // budget lost top impression share is reported in the range of 0 to 0.9. Any
  // value above 0.9 is reported as 0.9001.
  searchBudgetLostTopImpressionShare?: number;
  // The number of clicks you've received on the Search Network
  // divided by the estimated number of clicks you were eligible to receive.
  // Note: Search click share is reported in the range of 0.1 to 1. Any value
  // below 0.1 is reported as 0.0999.
  searchClickShare?: number;
  // The impressions you've received divided by the estimated number of
  // impressions you were eligible to receive on the Search Network for search
  // terms that matched your keywords exactly (or were close variants of your
  // keyword), regardless of your keyword match types. Note: Search exact match
  // impression share is reported in the range of 0.1 to 1. Any value below 0.1
  // is reported as 0.0999.
  searchExactMatchImpressionShare?: number;
  // The impressions you've received on the Search Network divided
  // by the estimated number of impressions you were eligible to receive.
  // Note: Search impression share is reported in the range of 0.1 to 1. Any
  // value below 0.1 is reported as 0.0999.
  searchImpressionShare?: number;
  // The number estimating how often your ad wasn't the very first ad above the
  // organic search results due to poor Ad Rank.
  // Note: Search rank lost absolute top impression share is reported in the
  // range of 0 to 0.9. Any value above 0.9 is reported as 0.9001.
  searchRankLostAbsoluteTopImpressionShare?: number;
  // The estimated percentage of impressions on the Search Network
  // that your ads didn't receive due to poor Ad Rank.
  // Note: Search rank lost impression share is reported in the range of 0 to
  // 0.9. Any value above 0.9 is reported as 0.9001.
  searchRankLostImpressionShare?: number;
  // The number estimating how often your ad didn't show anywhere above the
  // organic search results due to poor Ad Rank.
  // Note: Search rank lost top impression share is reported in the range of 0
  // to 0.9. Any value above 0.9 is reported as 0.9001.
  searchRankLostTopImpressionShare?: number;
  // The impressions you've received in the top location (anywhere above the
  // organic search results) compared to the estimated number of impressions you
  // were eligible to receive in the top location.
  // Note: Search top impression share is reported in the range of 0.1 to 1. Any
  // value below 0.1 is reported as 0.0999.
  searchTopImpressionShare?: number;
  // A measure of how quickly your page loads after clicks on your mobile ads.
  // The score is a range from 1 to 10, 10 being the fastest.
  speedScore?: number;
  // The percent of your ad impressions that are shown anywhere above the
  // organic search results.
  topImpressionPercentage?: number;
  // The percentage of ad clicks to Accelerated Mobile Pages (AMP) landing pages
  // that reach a valid AMP page.
  validAcceleratedMobilePagesClicksPercentage?: number;
  // The value of all conversions divided by the number of all conversions.
  valuePerAllConversions?: number;
  // The value of all conversions divided by the number of all conversions. When
  // this column is selected with date, the values in date column means the
  // conversion date. Details for the by_conversion_date columns are available
  // at https://support.google.com/google-ads/answer/9549009.
  valuePerAllConversionsByConversionDate?: number;
  // The value of conversions divided by the number of conversions. This only
  // includes conversion actions which include_in_conversions_metric attribute
  // is set to true. If you use conversion-based bidding, your bid strategies
  // will optimize for these conversions.
  valuePerConversion?: number;
  // The value of conversions divided by the number of conversions. This only
  // includes conversion actions which include_in_conversions_metric attribute
  // is set to true. If you use conversion-based bidding, your bid strategies
  // will optimize for these conversions. When this column is selected with
  // date, the values in date column means the conversion date. Details for the
  // by_conversion_date columns are available at
  // https://support.google.com/google-ads/answer/9549009.
  valuePerConversionsByConversionDate?: number;
  // The value of current model attributed conversions divided by the number of
  // the conversions. This only includes conversion actions which
  // include_in_conversions_metric attribute is set to true. If you use
  // conversion-based bidding, your bid strategies will optimize for these
  // conversions.
  valuePerCurrentModelAttributedConversion?: number;
  // Percentage of impressions where the viewer watched all of your video.
  videoQuartileP100Rate?: number;
  // Percentage of impressions where the viewer watched 25% of your video.
  videoQuartileP25Rate?: number;
  // Percentage of impressions where the viewer watched 50% of your video.
  videoQuartileP50Rate?: number;
  // Percentage of impressions where the viewer watched 75% of your video.
  videoQuartileP75Rate?: number;
  // The number of views your TrueView video ad receives divided by its number
  // of impressions, including thumbnail impressions for TrueView in-display
  // ads.
  videoViewRate?: number;
  // The number of times your video ads were viewed.
  videoViews?: number;
  // The total number of view-through conversions.
  // These happen when a customer sees an image or rich media ad, then later
  // completes a conversion on your site without interacting with (e.g.,
  // clicking on) another ad.
  viewThroughConversions?: number;
  // The number of iOS Store Kit Ad Network conversions.
  skAdNetworkConversions: number | undefined;
};

// Enum describing possible types of payable and free interactions.
export type googleadsgoogleadsv9enums_InteractionEventTypeEnum_InteractionEventType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Click to site. In most cases, this interaction navigates to an external
  // location, usually the advertiser's landing page. This is also the default
  // InteractionEventType for click events.
  | "CLICK"
  // The user's expressed intent to engage with the ad in-place.
  | "ENGAGEMENT"
  // User viewed a video ad.
  | "VIDEO_VIEW"
  // The default InteractionEventType for ad conversion events.
  // This is used when an ad conversion row does NOT indicate
  // that the free interactions (i.e., the ad conversions)
  // should be 'promoted' and reported as part of the core metrics.
  // These are simply other (ad) conversions.
  | "NONE";
// Segment only fields.
export type googleadsgoogleadsv9common_Segments = {
  // Ad Destination type.
  adDestinationType: googleadsgoogleadsv9enums_AdDestinationTypeEnum_AdDestinationType | undefined;
  // Ad network type.
  adNetworkType: googleadsgoogleadsv9enums_AdNetworkTypeEnum_AdNetworkType | undefined;
  // Budget campaign association status.
  budgetCampaignAssociationStatus: googleadsgoogleadsv9common_BudgetCampaignAssociationStatus | undefined;
  // Click type.
  clickType: googleadsgoogleadsv9enums_ClickTypeEnum_ClickType | undefined;
  // Resource name of the conversion action.
  conversionAction?: string;
  // Conversion action category.
  conversionActionCategory: googleadsgoogleadsv9enums_ConversionActionCategoryEnum_ConversionActionCategory | undefined;
  // Conversion action name.
  conversionActionName?: string;
  // This segments your conversion columns by the original conversion and
  // conversion value vs. the delta if conversions were adjusted. False row has
  // the data as originally stated; While true row has the delta between data
  // now and the data as originally stated. Summing the two together results
  // post-adjustment data.
  conversionAdjustment?: boolean;
  // Conversion attribution event type.
  conversionAttributionEventType: googleadsgoogleadsv9enums_ConversionAttributionEventTypeEnum_ConversionAttributionEventType | undefined;
  // An enum value representing the number of days between the impression and
  // the conversion.
  conversionLagBucket: googleadsgoogleadsv9enums_ConversionLagBucketEnum_ConversionLagBucket | undefined;
  // An enum value representing the number of days between the impression and
  // the conversion or between the impression and adjustments to the conversion.
  conversionOrAdjustmentLagBucket: googleadsgoogleadsv9enums_ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket | undefined;
  // Date to which metrics apply.
  // yyyy-MM-dd format, e.g., 2018-04-17.
  date?: string;
  // Day of the week, e.g., MONDAY.
  dayOfWeek: googleadsgoogleadsv9enums_DayOfWeekEnum_DayOfWeek | undefined;
  // Device to which metrics apply.
  device: googleadsgoogleadsv9enums_DeviceEnum_Device | undefined;
  // External conversion source.
  externalConversionSource: googleadsgoogleadsv9enums_ExternalConversionSourceEnum_ExternalConversionSource | undefined;
  // Resource name of the geo target constant that represents an airport.
  geoTargetAirport?: string;
  // Resource name of the geo target constant that represents a canton.
  geoTargetCanton?: string;
  // Resource name of the geo target constant that represents a city.
  geoTargetCity?: string;
  // Resource name of the geo target constant that represents a country.
  geoTargetCountry?: string;
  // Resource name of the geo target constant that represents a county.
  geoTargetCounty?: string;
  // Resource name of the geo target constant that represents a district.
  geoTargetDistrict?: string;
  // Resource name of the geo target constant that represents a metro.
  geoTargetMetro?: string;
  // Resource name of the geo target constant that represents the most
  // specific location.
  geoTargetMostSpecificLocation?: string;
  // Resource name of the geo target constant that represents a postal code.
  geoTargetPostalCode?: string;
  // Resource name of the geo target constant that represents a province.
  geoTargetProvince?: string;
  // Resource name of the geo target constant that represents a region.
  geoTargetRegion?: string;
  // Resource name of the geo target constant that represents a state.
  geoTargetState?: string;
  // Hotel booking window in days.
  hotelBookingWindowDays?: number;
  // Hotel center ID.
  hotelCenterId?: number;
  // Hotel check-in date. Formatted as yyyy-MM-dd.
  hotelCheckInDate?: string;
  // Hotel check-in day of week.
  hotelCheckInDayOfWeek: googleadsgoogleadsv9enums_DayOfWeekEnum_DayOfWeek | undefined;
  // Hotel city.
  hotelCity?: string;
  // Hotel class.
  hotelClass?: number;
  // Hotel country.
  hotelCountry?: string;
  // Hotel date selection type.
  hotelDateSelectionType: googleadsgoogleadsv9enums_HotelDateSelectionTypeEnum_HotelDateSelectionType | undefined;
  // Hotel length of stay.
  hotelLengthOfStay?: number;
  // Hotel rate rule ID.
  hotelRateRuleId?: string;
  // Hotel rate type.
  hotelRateType: googleadsgoogleadsv9enums_HotelRateTypeEnum_HotelRateType | undefined;
  // Hotel price bucket.
  hotelPriceBucket: googleadsgoogleadsv9enums_HotelPriceBucketEnum_HotelPriceBucket | undefined;
  // Hotel state.
  hotelState?: string;
  // Hour of day as a number between 0 and 23, inclusive.
  hour?: number;
  // Only used with feed item metrics.
  // Indicates whether the interaction metrics occurred on the feed item itself
  // or a different extension or ad unit.
  interactionOnThisExtension?: boolean;
  // Keyword criterion.
  keyword: googleadsgoogleadsv9common_Keyword | undefined;
  // Month as represented by the date of the first day of a month. Formatted as
  // yyyy-MM-dd.
  month?: string;
  // Month of the year, e.g., January.
  monthOfYear: googleadsgoogleadsv9enums_MonthOfYearEnum_MonthOfYear | undefined;
  // Partner hotel ID.
  partnerHotelId?: string;
  // Placeholder type. This is only used with feed item metrics.
  placeholderType: googleadsgoogleadsv9enums_PlaceholderTypeEnum_PlaceholderType | undefined;
  // Aggregator ID of the product.
  productAggregatorId?: number;
  // Bidding category (level 1) of the product.
  productBiddingCategoryLevel1?: string;
  // Bidding category (level 2) of the product.
  productBiddingCategoryLevel2?: string;
  // Bidding category (level 3) of the product.
  productBiddingCategoryLevel3?: string;
  // Bidding category (level 4) of the product.
  productBiddingCategoryLevel4?: string;
  // Bidding category (level 5) of the product.
  productBiddingCategoryLevel5?: string;
  // Brand of the product.
  productBrand?: string;
  // Channel of the product.
  productChannel: googleadsgoogleadsv9enums_ProductChannelEnum_ProductChannel | undefined;
  // Channel exclusivity of the product.
  productChannelExclusivity: googleadsgoogleadsv9enums_ProductChannelExclusivityEnum_ProductChannelExclusivity | undefined;
  // Condition of the product.
  productCondition: googleadsgoogleadsv9enums_ProductConditionEnum_ProductCondition | undefined;
  // Resource name of the geo target constant for the country of sale of the
  // product.
  productCountry?: string;
  // Custom attribute 0 of the product.
  productCustomAttribute0?: string;
  // Custom attribute 1 of the product.
  productCustomAttribute1?: string;
  // Custom attribute 2 of the product.
  productCustomAttribute2?: string;
  // Custom attribute 3 of the product.
  productCustomAttribute3?: string;
  // Custom attribute 4 of the product.
  productCustomAttribute4?: string;
  // Item ID of the product.
  productItemId?: string;
  // Resource name of the language constant for the language of the product.
  productLanguage?: string;
  // Merchant ID of the product.
  productMerchantId?: number;
  // Store ID of the product.
  productStoreId?: string;
  // Title of the product.
  productTitle?: string;
  // Type (level 1) of the product.
  productTypeL1?: string;
  // Type (level 2) of the product.
  productTypeL2?: string;
  // Type (level 3) of the product.
  productTypeL3?: string;
  // Type (level 4) of the product.
  productTypeL4?: string;
  // Type (level 5) of the product.
  productTypeL5?: string;
  // Quarter as represented by the date of the first day of a quarter.
  // Uses the calendar year for quarters, e.g., the second quarter of 2018
  // starts on 2018-04-01. Formatted as yyyy-MM-dd.
  quarter?: string;
  // Recommendation type.
  recommendationType: googleadsgoogleadsv9enums_RecommendationTypeEnum_RecommendationType | undefined;
  // Type of the search engine results page.
  searchEngineResultsPageType: googleadsgoogleadsv9enums_SearchEngineResultsPageTypeEnum_SearchEngineResultsPageType | undefined;
  // Match type of the keyword that triggered the ad, including variants.
  searchTermMatchType: googleadsgoogleadsv9enums_SearchTermMatchTypeEnum_SearchTermMatchType | undefined;
  // Position of the ad.
  slot: googleadsgoogleadsv9enums_SlotEnum_Slot | undefined;
  // Primary dimension of applied conversion value rules.
  // NO_RULE_APPLIED shows the total recorded value of conversions that
  // do not have a value rule applied.
  // ORIGINAL shows the original value of conversions to which a value rule
  // has been applied.
  // GEO_LOCATION, DEVICE, AUDIENCE show the net adjustment after value
  // rules were applied.
  conversionValueRulePrimaryDimension: googleadsgoogleadsv9enums_ConversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimension | undefined;
  // Resource name of the ad group criterion that represents webpage criterion.
  webpage?: string;
  // Week as defined as Monday through Sunday, and represented by the date of
  // Monday. Formatted as yyyy-MM-dd.
  week?: string;
  // Year, formatted as yyyy.
  year?: number;
  // iOS Store Kit Ad Network conversion value.
  // Null value means this segment is not applicable, e.g. non-iOS campaign.
  skAdNetworkConversionValue?: number;
  // Only used with CustomerAsset, CampaignAsset and AdGroupAsset metrics.
  // Indicates whether the interaction metrics occurred on the asset itself
  // or a different asset or ad unit.
  // Interactions (e.g. clicks) are counted across all the parts of the served
  // ad (e.g. Ad itself and other components like Sitelinks) when they are
  // served together. When interaction_on_this_asset is true, it means the
  // interactions are on this specific asset and when interaction_on_this_asset
  // is false, it means the interactions is not on this specific asset but on
  // other parts of the served ad this asset is served with.
  assetInteractionTarget?: googleadsgoogleadsv9common_AssetInteractionTarget;
};

// Enumerates Google Ads destination types
export type googleadsgoogleadsv9enums_AdDestinationTypeEnum_AdDestinationType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Ads that don't intend to drive users off from ads to other destinations
  | "NOT_APPLICABLE"
  // Website
  | "WEBSITE"
  // App Deep Link
  | "APP_DEEP_LINK"
  // iOS App Store or Play Store
  | "APP_STORE"
  // Call Dialer
  | "PHONE_CALL"
  // Map App
  | "MAP_DIRECTIONS"
  // Location Dedicated Page
  | "LOCATION_LISTING"
  // Text Message
  | "MESSAGE"
  // Lead Generation Form
  | "LEAD_FORM"
  // YouTube
  | "YOUTUBE"
  // Ad Destination for Conversions with keys unknown
  | "UNMODELED_FOR_CONVERSIONS";
// Enumerates Google Ads network types.
export type googleadsgoogleadsv9enums_AdNetworkTypeEnum_AdNetworkType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Google search.
  | "SEARCH"
  // Search partners.
  | "SEARCH_PARTNERS"
  // Display Network.
  | "CONTENT"
  // YouTube Search.
  | "YOUTUBE_SEARCH"
  // YouTube Videos
  | "YOUTUBE_WATCH"
  // Cross-network.
  | "MIXED";
// A BudgetCampaignAssociationStatus segment.
export type googleadsgoogleadsv9common_BudgetCampaignAssociationStatus = {
  // The campaign resource name.
  campaign?: string;
  // Budget campaign association status.
  status: googleadsgoogleadsv9enums_BudgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatus | undefined;
};

// Possible statuses of the association between the Budget and the Campaign.
export type googleadsgoogleadsv9enums_BudgetCampaignAssociationStatusEnum_BudgetCampaignAssociationStatus =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // The campaign is currently using the budget.
  | "ENABLED"
  // The campaign is no longer using the budget.
  | "REMOVED";
// Enumerates Google Ads click types.
export type googleadsgoogleadsv9enums_ClickTypeEnum_ClickType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // App engagement ad deep link.
  | "APP_DEEPLINK"
  // Breadcrumbs.
  | "BREADCRUMBS"
  // Broadband Plan.
  | "BROADBAND_PLAN"
  // Manually dialed phone calls.
  | "CALL_TRACKING"
  // Phone calls.
  | "CALLS"
  // Click on engagement ad.
  | "CLICK_ON_ENGAGEMENT_AD"
  // Driving direction.
  | "GET_DIRECTIONS"
  // Get location details.
  | "LOCATION_EXPANSION"
  // Call.
  | "LOCATION_FORMAT_CALL"
  // Directions.
  | "LOCATION_FORMAT_DIRECTIONS"
  // Image(s).
  | "LOCATION_FORMAT_IMAGE"
  // Go to landing page.
  | "LOCATION_FORMAT_LANDING_PAGE"
  // Map.
  | "LOCATION_FORMAT_MAP"
  // Go to store info.
  | "LOCATION_FORMAT_STORE_INFO"
  // Text.
  | "LOCATION_FORMAT_TEXT"
  // Mobile phone calls.
  | "MOBILE_CALL_TRACKING"
  // Print offer.
  | "OFFER_PRINTS"
  // Other.
  | "OTHER"
  // Product plusbox offer.
  | "PRODUCT_EXTENSION_CLICKS"
  // Shopping - Product - Online.
  | "PRODUCT_LISTING_AD_CLICKS"
  // Sitelink.
  | "SITELINKS"
  // Show nearby locations.
  | "STORE_LOCATOR"
  // Headline.
  | "URL_CLICKS"
  // App store.
  | "VIDEO_APP_STORE_CLICKS"
  // Call-to-Action overlay.
  | "VIDEO_CALL_TO_ACTION_CLICKS"
  // Cards.
  | "VIDEO_CARD_ACTION_HEADLINE_CLICKS"
  // End cap.
  | "VIDEO_END_CAP_CLICKS"
  // Website.
  | "VIDEO_WEBSITE_CLICKS"
  // Visual Sitelinks.
  | "VISUAL_SITELINKS"
  // Wireless Plan.
  | "WIRELESS_PLAN"
  // Shopping - Product - Local.
  | "PRODUCT_LISTING_AD_LOCAL"
  // Shopping - Product - MultiChannel Local.
  | "PRODUCT_LISTING_AD_MULTICHANNEL_LOCAL"
  // Shopping - Product - MultiChannel Online.
  | "PRODUCT_LISTING_AD_MULTICHANNEL_ONLINE"
  // Shopping - Product - Coupon.
  | "PRODUCT_LISTING_ADS_COUPON"
  // Shopping - Product - Sell on Google.
  | "PRODUCT_LISTING_AD_TRANSACTABLE"
  // Shopping - Product - App engagement ad deep link.
  | "PRODUCT_AD_APP_DEEPLINK"
  // Shopping - Showcase - Category.
  | "SHOWCASE_AD_CATEGORY_LINK"
  // Shopping - Showcase - Local storefront.
  | "SHOWCASE_AD_LOCAL_STOREFRONT_LINK"
  // Shopping - Showcase - Online product.
  | "SHOWCASE_AD_ONLINE_PRODUCT_LINK"
  // Shopping - Showcase - Local product.
  | "SHOWCASE_AD_LOCAL_PRODUCT_LINK"
  // Promotion Extension.
  | "PROMOTION_EXTENSION"
  // Ad Headline.
  | "SWIPEABLE_GALLERY_AD_HEADLINE"
  // Swipes.
  | "SWIPEABLE_GALLERY_AD_SWIPES"
  // See More.
  | "SWIPEABLE_GALLERY_AD_SEE_MORE"
  // Sitelink 1.
  | "SWIPEABLE_GALLERY_AD_SITELINK_ONE"
  // Sitelink 2.
  | "SWIPEABLE_GALLERY_AD_SITELINK_TWO"
  // Sitelink 3.
  | "SWIPEABLE_GALLERY_AD_SITELINK_THREE"
  // Sitelink 4.
  | "SWIPEABLE_GALLERY_AD_SITELINK_FOUR"
  // Sitelink 5.
  | "SWIPEABLE_GALLERY_AD_SITELINK_FIVE"
  // Hotel price.
  | "HOTEL_PRICE"
  // Price Extension.
  | "PRICE_EXTENSION"
  // Book on Google hotel room selection.
  | "HOTEL_BOOK_ON_GOOGLE_ROOM_SELECTION"
  // Shopping - Comparison Listing.
  | "SHOPPING_COMPARISON_LISTING";
// The event type of conversions that are attributed to.
export type googleadsgoogleadsv9enums_ConversionAttributionEventTypeEnum_ConversionAttributionEventType =
  // Not specified.
  | "UNSPECIFIED"
  // Represents value unknown in this version.
  | "UNKNOWN"
  // The conversion is attributed to an impression.
  | "IMPRESSION"
  // The conversion is attributed to an interaction.
  | "INTERACTION";
// Enum representing the number of days between impression and conversion.
export type googleadsgoogleadsv9enums_ConversionLagBucketEnum_ConversionLagBucket =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conversion lag bucket from 0 to 1 day. 0 day is included, 1 day is not.
  | "LESS_THAN_ONE_DAY"
  // Conversion lag bucket from 1 to 2 days. 1 day is included, 2 days is not.
  | "ONE_TO_TWO_DAYS"
  // Conversion lag bucket from 2 to 3 days. 2 days is included,
  // 3 days is not.
  | "TWO_TO_THREE_DAYS"
  // Conversion lag bucket from 3 to 4 days. 3 days is included,
  // 4 days is not.
  | "THREE_TO_FOUR_DAYS"
  // Conversion lag bucket from 4 to 5 days. 4 days is included,
  // 5 days is not.
  | "FOUR_TO_FIVE_DAYS"
  // Conversion lag bucket from 5 to 6 days. 5 days is included,
  // 6 days is not.
  | "FIVE_TO_SIX_DAYS"
  // Conversion lag bucket from 6 to 7 days. 6 days is included,
  // 7 days is not.
  | "SIX_TO_SEVEN_DAYS"
  // Conversion lag bucket from 7 to 8 days. 7 days is included,
  // 8 days is not.
  | "SEVEN_TO_EIGHT_DAYS"
  // Conversion lag bucket from 8 to 9 days. 8 days is included,
  // 9 days is not.
  | "EIGHT_TO_NINE_DAYS"
  // Conversion lag bucket from 9 to 10 days. 9 days is included,
  // 10 days is not.
  | "NINE_TO_TEN_DAYS"
  // Conversion lag bucket from 10 to 11 days. 10 days is included,
  // 11 days is not.
  | "TEN_TO_ELEVEN_DAYS"
  // Conversion lag bucket from 11 to 12 days. 11 days is included,
  // 12 days is not.
  | "ELEVEN_TO_TWELVE_DAYS"
  // Conversion lag bucket from 12 to 13 days. 12 days is included,
  // 13 days is not.
  | "TWELVE_TO_THIRTEEN_DAYS"
  // Conversion lag bucket from 13 to 14 days. 13 days is included,
  // 14 days is not.
  | "THIRTEEN_TO_FOURTEEN_DAYS"
  // Conversion lag bucket from 14 to 21 days. 14 days is included,
  // 21 days is not.
  | "FOURTEEN_TO_TWENTY_ONE_DAYS"
  // Conversion lag bucket from 21 to 30 days. 21 days is included,
  // 30 days is not.
  | "TWENTY_ONE_TO_THIRTY_DAYS"
  // Conversion lag bucket from 30 to 45 days. 30 days is included,
  // 45 days is not.
  | "THIRTY_TO_FORTY_FIVE_DAYS"
  // Conversion lag bucket from 45 to 60 days. 45 days is included,
  // 60 days is not.
  | "FORTY_FIVE_TO_SIXTY_DAYS"
  // Conversion lag bucket from 60 to 90 days. 60 days is included,
  // 90 days is not.
  | "SIXTY_TO_NINETY_DAYS";
// Enum representing the number of days between the impression and the
// conversion or between the impression and adjustments to the conversion.
export type googleadsgoogleadsv9enums_ConversionOrAdjustmentLagBucketEnum_ConversionOrAdjustmentLagBucket =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Conversion lag bucket from 0 to 1 day. 0 day is included, 1 day is not.
  | "CONVERSION_LESS_THAN_ONE_DAY"
  // Conversion lag bucket from 1 to 2 days. 1 day is included, 2 days is not.
  | "CONVERSION_ONE_TO_TWO_DAYS"
  // Conversion lag bucket from 2 to 3 days. 2 days is included,
  // 3 days is not.
  | "CONVERSION_TWO_TO_THREE_DAYS"
  // Conversion lag bucket from 3 to 4 days. 3 days is included,
  // 4 days is not.
  | "CONVERSION_THREE_TO_FOUR_DAYS"
  // Conversion lag bucket from 4 to 5 days. 4 days is included,
  // 5 days is not.
  | "CONVERSION_FOUR_TO_FIVE_DAYS"
  // Conversion lag bucket from 5 to 6 days. 5 days is included,
  // 6 days is not.
  | "CONVERSION_FIVE_TO_SIX_DAYS"
  // Conversion lag bucket from 6 to 7 days. 6 days is included,
  // 7 days is not.
  | "CONVERSION_SIX_TO_SEVEN_DAYS"
  // Conversion lag bucket from 7 to 8 days. 7 days is included,
  // 8 days is not.
  | "CONVERSION_SEVEN_TO_EIGHT_DAYS"
  // Conversion lag bucket from 8 to 9 days. 8 days is included,
  // 9 days is not.
  | "CONVERSION_EIGHT_TO_NINE_DAYS"
  // Conversion lag bucket from 9 to 10 days. 9 days is included,
  // 10 days is not.
  | "CONVERSION_NINE_TO_TEN_DAYS"
  // Conversion lag bucket from 10 to 11 days. 10 days is included,
  // 11 days is not.
  | "CONVERSION_TEN_TO_ELEVEN_DAYS"
  // Conversion lag bucket from 11 to 12 days. 11 days is included,
  // 12 days is not.
  | "CONVERSION_ELEVEN_TO_TWELVE_DAYS"
  // Conversion lag bucket from 12 to 13 days. 12 days is included,
  // 13 days is not.
  | "CONVERSION_TWELVE_TO_THIRTEEN_DAYS"
  // Conversion lag bucket from 13 to 14 days. 13 days is included,
  // 14 days is not.
  | "CONVERSION_THIRTEEN_TO_FOURTEEN_DAYS"
  // Conversion lag bucket from 14 to 21 days. 14 days is included,
  // 21 days is not.
  | "CONVERSION_FOURTEEN_TO_TWENTY_ONE_DAYS"
  // Conversion lag bucket from 21 to 30 days. 21 days is included,
  // 30 days is not.
  | "CONVERSION_TWENTY_ONE_TO_THIRTY_DAYS"
  // Conversion lag bucket from 30 to 45 days. 30 days is included,
  // 45 days is not.
  | "CONVERSION_THIRTY_TO_FORTY_FIVE_DAYS"
  // Conversion lag bucket from 45 to 60 days. 45 days is included,
  // 60 days is not.
  | "CONVERSION_FORTY_FIVE_TO_SIXTY_DAYS"
  // Conversion lag bucket from 60 to 90 days. 60 days is included,
  // 90 days is not.
  | "CONVERSION_SIXTY_TO_NINETY_DAYS"
  // Conversion adjustment lag bucket from 0 to 1 day. 0 day is included,
  // 1 day is not.
  | "ADJUSTMENT_LESS_THAN_ONE_DAY"
  // Conversion adjustment lag bucket from 1 to 2 days. 1 day is included,
  // 2 days is not.
  | "ADJUSTMENT_ONE_TO_TWO_DAYS"
  // Conversion adjustment lag bucket from 2 to 3 days. 2 days is included,
  // 3 days is not.
  | "ADJUSTMENT_TWO_TO_THREE_DAYS"
  // Conversion adjustment lag bucket from 3 to 4 days. 3 days is included,
  // 4 days is not.
  | "ADJUSTMENT_THREE_TO_FOUR_DAYS"
  // Conversion adjustment lag bucket from 4 to 5 days. 4 days is included,
  // 5 days is not.
  | "ADJUSTMENT_FOUR_TO_FIVE_DAYS"
  // Conversion adjustment lag bucket from 5 to 6 days. 5 days is included,
  // 6 days is not.
  | "ADJUSTMENT_FIVE_TO_SIX_DAYS"
  // Conversion adjustment lag bucket from 6 to 7 days. 6 days is included,
  // 7 days is not.
  | "ADJUSTMENT_SIX_TO_SEVEN_DAYS"
  // Conversion adjustment lag bucket from 7 to 8 days. 7 days is included,
  // 8 days is not.
  | "ADJUSTMENT_SEVEN_TO_EIGHT_DAYS"
  // Conversion adjustment lag bucket from 8 to 9 days. 8 days is included,
  // 9 days is not.
  | "ADJUSTMENT_EIGHT_TO_NINE_DAYS"
  // Conversion adjustment lag bucket from 9 to 10 days. 9 days is included,
  // 10 days is not.
  | "ADJUSTMENT_NINE_TO_TEN_DAYS"
  // Conversion adjustment lag bucket from 10 to 11 days. 10 days is included,
  // 11 days is not.
  | "ADJUSTMENT_TEN_TO_ELEVEN_DAYS"
  // Conversion adjustment lag bucket from 11 to 12 days. 11 days is included,
  // 12 days is not.
  | "ADJUSTMENT_ELEVEN_TO_TWELVE_DAYS"
  // Conversion adjustment lag bucket from 12 to 13 days. 12 days is included,
  // 13 days is not.
  | "ADJUSTMENT_TWELVE_TO_THIRTEEN_DAYS"
  // Conversion adjustment lag bucket from 13 to 14 days. 13 days is included,
  // 14 days is not.
  | "ADJUSTMENT_THIRTEEN_TO_FOURTEEN_DAYS"
  // Conversion adjustment lag bucket from 14 to 21 days. 14 days is included,
  // 21 days is not.
  | "ADJUSTMENT_FOURTEEN_TO_TWENTY_ONE_DAYS"
  // Conversion adjustment lag bucket from 21 to 30 days. 21 days is included,
  // 30 days is not.
  | "ADJUSTMENT_TWENTY_ONE_TO_THIRTY_DAYS"
  // Conversion adjustment lag bucket from 30 to 45 days. 30 days is included,
  // 45 days is not.
  | "ADJUSTMENT_THIRTY_TO_FORTY_FIVE_DAYS"
  // Conversion adjustment lag bucket from 45 to 60 days. 45 days is included,
  // 60 days is not.
  | "ADJUSTMENT_FORTY_FIVE_TO_SIXTY_DAYS"
  // Conversion adjustment lag bucket from 60 to 90 days. 60 days is included,
  // 90 days is not.
  | "ADJUSTMENT_SIXTY_TO_NINETY_DAYS"
  // Conversion adjustment lag bucket from 90 to 145 days. 90 days is
  // included, 145 days is not.
  | "ADJUSTMENT_NINETY_TO_ONE_HUNDRED_AND_FORTY_FIVE_DAYS"
  // Conversion lag bucket UNKNOWN. This is for dates before conversion lag
  // bucket was available in Google Ads.
  | "CONVERSION_UNKNOWN"
  // Conversion adjustment lag bucket UNKNOWN. This is for dates before
  // conversion adjustment lag bucket was available in Google Ads.
  | "ADJUSTMENT_UNKNOWN";
// The external conversion source that is associated with a ConversionAction.
export type googleadsgoogleadsv9enums_ExternalConversionSourceEnum_ExternalConversionSource =
  // Not specified.
  | "UNSPECIFIED"
  // Represents value unknown in this version.
  | "UNKNOWN"
  // Conversion that occurs when a user navigates to a particular webpage
  // after viewing an ad; Displayed in Google Ads UI as 'Website'.
  | "WEBPAGE"
  // Conversion that comes from linked Google Analytics goal or transaction;
  // Displayed in Google Ads UI as 'Analytics'.
  | "ANALYTICS"
  // Website conversion that is uploaded through ConversionUploadService;
  // Displayed in Google Ads UI as 'Import from clicks'.
  | "UPLOAD"
  // Conversion that occurs when a user clicks on a call extension directly on
  // an ad; Displayed in Google Ads UI as 'Calls from ads'.
  | "AD_CALL_METRICS"
  // Conversion that occurs when a user calls a dynamically-generated phone
  // number (by installed javascript) from an advertiser's website after
  // clicking on an ad; Displayed in Google Ads UI as 'Calls from website'.
  | "WEBSITE_CALL_METRICS"
  // Conversion that occurs when a user visits an advertiser's retail store
  // after clicking on a Google ad;
  // Displayed in Google Ads UI as 'Store visits'.
  | "STORE_VISITS"
  // Conversion that occurs when a user takes an in-app action such as a
  // purchase in an Android app;
  // Displayed in Google Ads UI as 'Android in-app action'.
  | "ANDROID_IN_APP"
  // Conversion that occurs when a user takes an in-app action such as a
  // purchase in an iOS app;
  // Displayed in Google Ads UI as 'iOS in-app action'.
  | "IOS_IN_APP"
  // Conversion that occurs when a user opens an iOS app for the first time;
  // Displayed in Google Ads UI as 'iOS app install (first open)'.
  | "IOS_FIRST_OPEN"
  // Legacy app conversions that do not have an AppPlatform provided;
  // Displayed in Google Ads UI as 'Mobile app'.
  | "APP_UNSPECIFIED"
  // Conversion that occurs when a user opens an Android app for the first
  // time; Displayed in Google Ads UI as 'Android app install (first open)'.
  | "ANDROID_FIRST_OPEN"
  // Call conversion that is uploaded through ConversionUploadService;
  // Displayed in Google Ads UI as 'Import from calls'.
  | "UPLOAD_CALLS"
  // Conversion that comes from a linked Firebase event;
  // Displayed in Google Ads UI as 'Firebase'.
  | "FIREBASE"
  // Conversion that occurs when a user clicks on a mobile phone number;
  // Displayed in Google Ads UI as 'Phone number clicks'.
  | "CLICK_TO_CALL"
  // Conversion that comes from Salesforce;
  // Displayed in Google Ads UI as 'Salesforce.com'.
  | "SALESFORCE"
  // Conversion that comes from in-store purchases recorded by CRM;
  // Displayed in Google Ads UI as 'Store sales (data partner)'.
  | "STORE_SALES_CRM"
  // Conversion that comes from in-store purchases from payment network;
  // Displayed in Google Ads UI as 'Store sales (payment network)'.
  | "STORE_SALES_PAYMENT_NETWORK"
  // Codeless Google Play conversion;
  // Displayed in Google Ads UI as 'Google Play'.
  | "GOOGLE_PLAY"
  // Conversion that comes from a linked third-party app analytics event;
  // Displayed in Google Ads UI as 'Third-party app analytics'.
  | "THIRD_PARTY_APP_ANALYTICS"
  // Conversion that is controlled by Google Attribution.
  | "GOOGLE_ATTRIBUTION"
  // Store Sales conversion based on first-party or third-party merchant data
  // uploads. Displayed in Google Ads UI as 'Store sales (direct upload)'.
  | "STORE_SALES_DIRECT_UPLOAD"
  // Store Sales conversion based on first-party or third-party merchant
  // data uploads and/or from in-store purchases using cards from payment
  // networks. Displayed in Google Ads UI as 'Store sales'.
  | "STORE_SALES"
  // Conversions imported from Search Ads 360 Floodlight data.
  | "SEARCH_ADS_360"
  // Conversions that track local actions from Google's products and services
  // after interacting with an ad.
  | "GOOGLE_HOSTED"
  // Conversions reported by Floodlight tags.
  | "FLOODLIGHT"
  // Conversions that come from Google Analytics specifically for Search Ads
  // 360. Displayed in Google Ads UI as Analytics (SA360).
  | "ANALYTICS_SEARCH_ADS_360"
  // Conversion that comes from a linked Firebase event for Search Ads 360.
  | "FIREBASE_SEARCH_ADS_360";
// Enum describing possible hotel rate types.
export type googleadsgoogleadsv9enums_HotelRateTypeEnum_HotelRateType =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Rate type information is unavailable.
  | "UNAVAILABLE"
  // Rates available to everyone.
  | "PUBLIC_RATE"
  // A membership program rate is available and satisfies basic requirements
  // like having a public rate available. UI treatment will strikethrough the
  // public rate and indicate that a discount is available to the user. For
  // more on Qualified Rates, visit
  // https://developers.google.com/hotels/hotel-ads/dev-guide/qualified-rates
  | "QUALIFIED_RATE"
  // Rates available to users that satisfy some eligibility criteria. e.g.
  // all signed-in users, 20% of mobile users, all mobile users in Canada,
  // etc.
  | "PRIVATE_RATE";
// Enum describing possible hotel price buckets.
export type googleadsgoogleadsv9enums_HotelPriceBucketEnum_HotelPriceBucket =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Uniquely lowest price. Partner has the lowest price, and no other
  // partners are within a small variance of that price.
  | "LOWEST_UNIQUE"
  // Tied for lowest price. Partner is within a small variance of the lowest
  // price.
  | "LOWEST_TIED"
  // Not lowest price. Partner is not within a small variance of the lowest
  // price.
  | "NOT_LOWEST"
  // Partner was the only one shown.
  | "ONLY_PARTNER_SHOWN";
// A Keyword criterion segment.
export type googleadsgoogleadsv9common_Keyword = {
  // The AdGroupCriterion resource name.
  adGroupCriterion?: string;
  // Keyword info.
  info: googleadsgoogleadsv9common_KeywordInfo | undefined;
};

// The type of the search engine results page.
export type googleadsgoogleadsv9enums_SearchEngineResultsPageTypeEnum_SearchEngineResultsPageType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Only ads were contained in the search engine results page.
  | "ADS_ONLY"
  // Only organic results were contained in the search engine results page.
  | "ORGANIC_ONLY"
  // Both ads and organic results were contained in the search engine results
  // page.
  | "ADS_AND_ORGANIC";
// Possible match types for a keyword triggering an ad, including variants.
export type googleadsgoogleadsv9enums_SearchTermMatchTypeEnum_SearchTermMatchType =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // Broad match.
  | "BROAD"
  // Exact match.
  | "EXACT"
  // Phrase match.
  | "PHRASE"
  // Exact match (close variant).
  | "NEAR_EXACT"
  // Phrase match (close variant).
  | "NEAR_PHRASE";
// Enumerates possible positions of the Ad.
export type googleadsgoogleadsv9enums_SlotEnum_Slot =
  // Not specified.
  | "UNSPECIFIED"
  // The value is unknown in this version.
  | "UNKNOWN"
  // Google search: Side.
  | "SEARCH_SIDE"
  // Google search: Top.
  | "SEARCH_TOP"
  // Google search: Other.
  | "SEARCH_OTHER"
  // Google Display Network.
  | "CONTENT"
  // Search partners: Top.
  | "SEARCH_PARTNER_TOP"
  // Search partners: Other.
  | "SEARCH_PARTNER_OTHER"
  // Cross-network.
  | "MIXED";
// Identifies the primary dimension for conversion value rule stats.
export type googleadsgoogleadsv9enums_ConversionValueRulePrimaryDimensionEnum_ConversionValueRulePrimaryDimension =
  // Not specified.
  | "UNSPECIFIED"
  // Used for return value only. Represents value unknown in this version.
  | "UNKNOWN"
  // For no-value-rule-applied conversions after value rule is enabled.
  | "NO_RULE_APPLIED"
  // Below are for value-rule-applied conversions:
  // The original stats.
  | "ORIGINAL"
  // When a new or returning customer condition is satisfied.
  | "NEW_VS_RETURNING_USER"
  // When a query-time Geo location condition is satisfied.
  | "GEO_LOCATION"
  // When a query-time browsing device condition is satisfied.
  | "DEVICE"
  // When a query-time audience condition is satisfied.
  | "AUDIENCE"
  // When multiple rules are applied.
  | "MULTIPLE";
// An AssetInteractionTarget segment.
export type googleadsgoogleadsv9common_AssetInteractionTarget = {
  // The asset resource name.
  asset: string | undefined;
  // Only used with CustomerAsset, CampaignAsset and AdGroupAsset metrics.
  // Indicates whether the interaction metrics occurred on the asset itself or a
  // different asset or ad unit.
  interactionOnThisAsset: boolean | undefined;
};

// Request message for [GoogleAdsService.SearchStream][google.ads.googleads.v9.services.GoogleAdsService.SearchStream].
export type SearchGoogleAdsStreamRequest = {
  // Required. The ID of the customer being queried.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The query string.
  //
  // Behaviors: REQUIRED
  query: string | undefined;
  // Determines whether a summary row will be returned. By default, summary row
  // is not returned. If requested, the summary row will be sent in a response
  // by itself after all other query results are returned.
  summaryRowSetting: googleadsgoogleadsv9enums_SummaryRowSettingEnum_SummaryRowSetting | undefined;
};

// Response message for [GoogleAdsService.SearchStream][google.ads.googleads.v9.services.GoogleAdsService.SearchStream].
export type SearchGoogleAdsStreamResponse = {
  // The list of rows that matched the query.
  results: GoogleAdsRow[] | undefined;
  // FieldMask that represents what fields were requested by the user.
  fieldMask: wellKnownFieldMask | undefined;
  // Summary row that contains summary of metrics in results.
  // Summary of metrics means aggregation of metrics across all results,
  // here aggregation could be sum, average, rate, etc.
  summaryRow: GoogleAdsRow | undefined;
  // The unique id of the request that is used for debugging purposes.
  requestId: string | undefined;
};

// Request message for [GoogleAdsService.Mutate][google.ads.googleads.v9.services.GoogleAdsService.Mutate].
export type MutateGoogleAdsRequest = {
  // Required. The ID of the customer whose resources are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual resources.
  //
  // Behaviors: REQUIRED
  mutateOperations: MutateOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation. The mutable
  // resource will only be returned if the resource has the appropriate response
  // field. E.g. MutateCampaignResult.campaign.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for [GoogleAdsService.Mutate][google.ads.googleads.v9.services.GoogleAdsService.Mutate].
export type MutateGoogleAdsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g., auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All responses for the mutate.
  mutateOperationResponses: MutateOperationResponse[] | undefined;
};

// Service to fetch data and metrics across resources.
export interface GoogleAdsService {
  // Returns all rows that match the search query.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ChangeEventError]()
  // [ChangeStatusError]()
  // [ClickViewError]()
  // [HeaderError]()
  // [InternalError]()
  // [QueryError]()
  // [QuotaError]()
  // [RequestError]()
  Search(request: SearchGoogleAdsRequest): Promise<SearchGoogleAdsResponse>;
  // Creates, updates, or removes resources. This method supports atomic
  // transactions with multiple types of resources. For example, you can
  // atomically create a campaign and a campaign budget, or perform up to
  // thousands of mutates atomically.
  // This method is essentially a wrapper around a series of mutate methods. The
  // only features it offers over calling those methods directly are:
  // - Atomic transactions
  // - Temp resource names (described below)
  // - Somewhat reduced latency over making a series of mutate calls
  // Note: Only resources that support atomic transactions are included, so this
  // method can't replace all calls to individual services.
  // ## Atomic Transaction Benefits
  // Atomicity makes error handling much easier. If you're making a series of
  // changes and one fails, it can leave your account in an inconsistent state.
  // With atomicity, you either reach the desired state directly, or the request
  // fails and you can retry.
  // ## Temp Resource Names
  // Temp resource names are a special type of resource name used to create a
  // resource and reference that resource in the same request. For example, if a
  // campaign budget is created with `resource_name` equal to
  // `customers/123/campaignBudgets/-1`, that resource name can be reused in
  // the `Campaign.budget` field in the same request. That way, the two
  // resources are created and linked atomically.
  // To create a temp resource name, put a negative number in the part of the
  // name that the server would normally allocate.
  // Note:
  // - Resources must be created with a temp name before the name can be reused.
  // For example, the previous CampaignBudget+Campaign example would fail if
  // the mutate order was reversed.
  // - Temp names are not remembered across requests.
  // - There's no limit to the number of temp names in a request.
  // - Each temp name must use a unique negative number, even if the resource
  // types differ.
  // ## Latency
  // It's important to group mutates by resource type or the request may time
  // out and fail. Latency is roughly equal to a series of calls to individual
  // mutate methods, where each change in resource type is a new call. For
  // example, mutating 10 campaigns then 10 ad groups is like 2 calls, while
  // mutating 1 campaign, 1 ad group, 1 campaign, 1 ad group is like 4 calls.
  // List of thrown errors:
  // [AdCustomizerError]()
  // [AdError]()
  // [AdGroupAdError]()
  // [AdGroupCriterionError]()
  // [AdGroupError]()
  // [AssetError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BiddingError]()
  // [CampaignBudgetError]()
  // [CampaignCriterionError]()
  // [CampaignError]()
  // [CampaignExperimentError]()
  // [CampaignSharedSetError]()
  // [CollectionSizeError]()
  // [ContextError]()
  // [ConversionActionError]()
  // [CriterionError]()
  // [CustomerFeedError]()
  // [DatabaseError]()
  // [DateError]()
  // [DateRangeError]()
  // [DistinctError]()
  // [ExtensionFeedItemError]()
  // [ExtensionSettingError]()
  // [FeedAttributeReferenceError]()
  // [FeedError]()
  // [FeedItemError]()
  // [FeedItemSetError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [FunctionParsingError]()
  // [HeaderError]()
  // [ImageError]()
  // [InternalError]()
  // [KeywordPlanAdGroupKeywordError]()
  // [KeywordPlanCampaignError]()
  // [KeywordPlanError]()
  // [LabelError]()
  // [ListOperationError]()
  // [MediaUploadError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [PolicyFindingError]()
  // [PolicyViolationError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SettingError]()
  // [SharedSetError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  // [UserListError]()
  // [YoutubeVideoRegistrationError]()
  Mutate(request: MutateGoogleAdsRequest): Promise<MutateGoogleAdsResponse>;
}

export function createGoogleAdsServiceClient(
  handler: RequestHandler
): GoogleAdsService {
  return {
    Search(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/googleAds:search`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SearchGoogleAdsResponse>;
    },
    SearchStream(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/googleAds:searchStream`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SearchGoogleAdsStreamResponse>;
    },
    Mutate(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/googleAds:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateGoogleAdsResponse>;
    },
  };
}
// Request message for [GroupPlacementViewService.GetGroupPlacementView][google.ads.googleads.v9.services.GroupPlacementViewService.GetGroupPlacementView].
export type GetGroupPlacementViewRequest = {
  // Required. The resource name of the Group Placement view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Group Placement views.
export interface GroupPlacementViewService {
  // Returns the requested Group Placement view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetGroupPlacementView(request: GetGroupPlacementViewRequest): Promise<googleadsgoogleadsv9resources_GroupPlacementView>;
}

export function createGroupPlacementViewServiceClient(
  handler: RequestHandler
): GroupPlacementViewService {
  return {
    GetGroupPlacementView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_GroupPlacementView>;
    },
  };
}
// Request message for [AssetGroupAssetService.GetAssetGroupAsset][google.ads.googleads.v9.services.AssetGroupAssetService.GetAssetGroupAsset].
export type GetAssetGroupAssetRequest = {
  // Required. The resource name of the asset group asset to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AssetGroupAssetService.MutateAssetGroupAssets][google.ads.googleads.v9.services.AssetGroupAssetService.MutateAssetGroupAssets].
export type MutateAssetGroupAssetsRequest = {
  // Required. The ID of the customer whose asset group assets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual asset group assets.
  //
  // Behaviors: REQUIRED
  operations: AssetGroupAssetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for an asset group asset mutate.
export type MutateAssetGroupAssetsResponse = {
  // All results for the mutate.
  results: MutateAssetGroupAssetResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage asset group asset.
export interface AssetGroupAssetService {
  // Returns the requested asset group asset in full detail.
  GetAssetGroupAsset(request: GetAssetGroupAssetRequest): Promise<googleadsgoogleadsv9resources_AssetGroupAsset>;
  // Creates, updates or removes asset group assets. Operation statuses are
  // returned.
  MutateAssetGroupAssets(request: MutateAssetGroupAssetsRequest): Promise<MutateAssetGroupAssetsResponse>;
}

export function createAssetGroupAssetServiceClient(
  handler: RequestHandler
): AssetGroupAssetService {
  return {
    GetAssetGroupAsset(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AssetGroupAsset>;
    },
    MutateAssetGroupAssets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/assetGroupAssets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAssetGroupAssetsResponse>;
    },
  };
}
// Request message for [AdGroupCriterionService.GetAdGroupCriterion][google.ads.googleads.v9.services.AdGroupCriterionService.GetAdGroupCriterion].
export type GetAdGroupCriterionRequest = {
  // Required. The resource name of the criterion to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupCriterionService.MutateAdGroupCriteria][google.ads.googleads.v9.services.AdGroupCriterionService.MutateAdGroupCriteria].
export type MutateAdGroupCriteriaRequest = {
  // Required. ID of the customer whose criteria are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual criteria.
  //
  // Behaviors: REQUIRED
  operations: AdGroupCriterionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an ad group criterion mutate.
export type MutateAdGroupCriteriaResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupCriterionResult[] | undefined;
};

// Service to manage ad group criteria.
export interface AdGroupCriterionService {
  // Returns the requested criterion in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupCriterion(request: GetAdGroupCriterionRequest): Promise<googleadsgoogleadsv9resources_AdGroupCriterion>;
  // Creates, updates, or removes criteria. Operation statuses are returned.
  // List of thrown errors:
  // [AdGroupCriterionError]()
  // [AdxError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BiddingError]()
  // [BiddingStrategyError]()
  // [CollectionSizeError]()
  // [ContextError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MultiplierError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [PolicyViolationError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateAdGroupCriteria(request: MutateAdGroupCriteriaRequest): Promise<MutateAdGroupCriteriaResponse>;
}

export function createAdGroupCriterionServiceClient(
  handler: RequestHandler
): AdGroupCriterionService {
  return {
    GetAdGroupCriterion(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupCriterion>;
    },
    MutateAdGroupCriteria(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupCriteria:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupCriteriaResponse>;
    },
  };
}
// Request message for
// [CampaignCustomizerService.MutateCampaignCustomizers][google.ads.googleads.v9.services.CampaignCustomizerService.MutateCampaignCustomizers].
export type MutateCampaignCustomizersRequest = {
  // Required. The ID of the customer whose campaign customizers are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign customizers.
  //
  // Behaviors: REQUIRED
  operations: CampaignCustomizerOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an campaign customizer mutate.
export type MutateCampaignCustomizersResponse = {
  // All results for the mutate.
  results: MutateCampaignCustomizerResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage campaign customizer
export interface CampaignCustomizerService {
  // Creates, updates or removes campaign customizers. Operation statuses are
  // returned.
  MutateCampaignCustomizers(request: MutateCampaignCustomizersRequest): Promise<MutateCampaignCustomizersResponse>;
}

export function createCampaignCustomizerServiceClient(
  handler: RequestHandler
): CampaignCustomizerService {
  return {
    MutateCampaignCustomizers(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignCustomizers:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignCustomizersResponse>;
    },
  };
}
// Request message for [FeedService.GetFeed][google.ads.googleads.v9.services.FeedService.GetFeed].
export type GetFeedRequest = {
  // Required. The resource name of the feed to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [FeedService.MutateFeeds][google.ads.googleads.v9.services.FeedService.MutateFeeds].
export type MutateFeedsRequest = {
  // Required. The ID of the customer whose feeds are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual feeds.
  //
  // Behaviors: REQUIRED
  operations: FeedOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an feed mutate.
export type MutateFeedsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateFeedResult[] | undefined;
};

// Service to manage feeds.
export interface FeedService {
  // Returns the requested feed in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeed(request: GetFeedRequest): Promise<googleadsgoogleadsv9resources_Feed>;
  // Creates, updates, or removes feeds. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FeedError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateFeeds(request: MutateFeedsRequest): Promise<MutateFeedsResponse>;
}

export function createFeedServiceClient(
  handler: RequestHandler
): FeedService {
  return {
    GetFeed(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Feed>;
    },
    MutateFeeds(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/feeds:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateFeedsResponse>;
    },
  };
}
// Request message for [KeywordPlanAdGroupService.GetKeywordPlanAdGroup][google.ads.googleads.v9.services.KeywordPlanAdGroupService.GetKeywordPlanAdGroup].
export type GetKeywordPlanAdGroupRequest = {
  // Required. The resource name of the Keyword Plan ad group to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [KeywordPlanAdGroupService.MutateKeywordPlanAdGroups][google.ads.googleads.v9.services.KeywordPlanAdGroupService.MutateKeywordPlanAdGroups].
export type MutateKeywordPlanAdGroupsRequest = {
  // Required. The ID of the customer whose Keyword Plan ad groups are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual Keyword Plan ad groups.
  //
  // Behaviors: REQUIRED
  operations: KeywordPlanAdGroupOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a Keyword Plan ad group mutate.
export type MutateKeywordPlanAdGroupsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate. The order of the results is determined by the
  // order of the keywords in the original request.
  results: MutateKeywordPlanAdGroupResult[] | undefined;
};

// Service to manage Keyword Plan ad groups.
export interface KeywordPlanAdGroupService {
  // Returns the requested Keyword Plan ad group in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetKeywordPlanAdGroup(request: GetKeywordPlanAdGroupRequest): Promise<googleadsgoogleadsv9resources_KeywordPlanAdGroup>;
  // Creates, updates, or removes Keyword Plan ad groups. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanAdGroupError]()
  // [KeywordPlanError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  MutateKeywordPlanAdGroups(request: MutateKeywordPlanAdGroupsRequest): Promise<MutateKeywordPlanAdGroupsResponse>;
}

export function createKeywordPlanAdGroupServiceClient(
  handler: RequestHandler
): KeywordPlanAdGroupService {
  return {
    GetKeywordPlanAdGroup(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordPlanAdGroup>;
    },
    MutateKeywordPlanAdGroups(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/keywordPlanAdGroups:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateKeywordPlanAdGroupsResponse>;
    },
  };
}
// Request message for [CustomerAssetService.GetCustomerAsset][google.ads.googleads.v9.services.CustomerAssetService.GetCustomerAsset].
export type GetCustomerAssetRequest = {
  // Required. The resource name of the customer asset to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomerAssetService.MutateCustomerAssets][google.ads.googleads.v9.services.CustomerAssetService.MutateCustomerAssets].
export type MutateCustomerAssetsRequest = {
  // Required. The ID of the customer whose customer assets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customer assets.
  //
  // Behaviors: REQUIRED
  operations: CustomerAssetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for a customer asset mutate.
export type MutateCustomerAssetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCustomerAssetResult[] | undefined;
};

// Service to manage customer assets.
export interface CustomerAssetService {
  // Returns the requested customer asset in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerAsset(request: GetCustomerAssetRequest): Promise<googleadsgoogleadsv9resources_CustomerAsset>;
  // Creates, updates, or removes customer assets. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AssetLinkError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerAssets(request: MutateCustomerAssetsRequest): Promise<MutateCustomerAssetsResponse>;
}

export function createCustomerAssetServiceClient(
  handler: RequestHandler
): CustomerAssetService {
  return {
    GetCustomerAsset(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerAsset>;
    },
    MutateCustomerAssets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerAssets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerAssetsResponse>;
    },
  };
}
// Request message for [CombinedAudienceService.GetCombinedAudience][google.ads.googleads.v9.services.CombinedAudienceService.GetCombinedAudience].
export type GetCombinedAudienceRequest = {
  // Required. The resource name of the combined audience to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage combined audiences. This service can be used to list all
// your combined audiences with metadata, but won't show the structure and
// components of the combined audience.
export interface CombinedAudienceService {
  // Returns the requested combined audience in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCombinedAudience(request: GetCombinedAudienceRequest): Promise<googleadsgoogleadsv9resources_CombinedAudience>;
}

export function createCombinedAudienceServiceClient(
  handler: RequestHandler
): CombinedAudienceService {
  return {
    GetCombinedAudience(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CombinedAudience>;
    },
  };
}
// Request message for [RemarketingActionService.GetRemarketingAction][google.ads.googleads.v9.services.RemarketingActionService.GetRemarketingAction].
export type GetRemarketingActionRequest = {
  // Required. The resource name of the remarketing action to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [RemarketingActionService.MutateRemarketingActions][google.ads.googleads.v9.services.RemarketingActionService.MutateRemarketingActions].
export type MutateRemarketingActionsRequest = {
  // Required. The ID of the customer whose remarketing actions are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual remarketing actions.
  //
  // Behaviors: REQUIRED
  operations: RemarketingActionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for remarketing action mutate.
export type MutateRemarketingActionsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateRemarketingActionResult[] | undefined;
};

// Service to manage remarketing actions.
export interface RemarketingActionService {
  // Returns the requested remarketing action in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetRemarketingAction(request: GetRemarketingActionRequest): Promise<googleadsgoogleadsv9resources_RemarketingAction>;
  // Creates or updates remarketing actions. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ConversionActionError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateRemarketingActions(request: MutateRemarketingActionsRequest): Promise<MutateRemarketingActionsResponse>;
}

export function createRemarketingActionServiceClient(
  handler: RequestHandler
): RemarketingActionService {
  return {
    GetRemarketingAction(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_RemarketingAction>;
    },
    MutateRemarketingActions(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/remarketingActions:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateRemarketingActionsResponse>;
    },
  };
}
// Request message for fetching all accessible payments accounts.
export type ListPaymentsAccountsRequest = {
  // Required. The ID of the customer to apply the PaymentsAccount list operation to.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
};

// Response message for [PaymentsAccountService.ListPaymentsAccounts][google.ads.googleads.v9.services.PaymentsAccountService.ListPaymentsAccounts].
export type ListPaymentsAccountsResponse = {
  // The list of accessible payments accounts.
  paymentsAccounts: googleadsgoogleadsv9resources_PaymentsAccount[] | undefined;
};

// A payments account, which can be used to set up billing for an Ads customer.
export type googleadsgoogleadsv9resources_PaymentsAccount = {
  // Output only. The resource name of the payments account.
  // PaymentsAccount resource names have the form:
  // `customers/{customer_id}/paymentsAccounts/{payments_account_id}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. A 16 digit ID used to identify a payments account.
  //
  // Behaviors: OUTPUT_ONLY
  paymentsAccountId?: string;
  // Output only. The name of the payments account.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The currency code of the payments account.
  // A subset of the currency codes derived from the ISO 4217 standard is
  // supported.
  //
  // Behaviors: OUTPUT_ONLY
  currencyCode?: string;
  // Output only. A 12 digit ID used to identify the payments profile associated with the
  // payments account.
  //
  // Behaviors: OUTPUT_ONLY
  paymentsProfileId?: string;
  // Output only. A secondary payments profile ID present in uncommon situations, e.g.
  // when a sequential liability agreement has been arranged.
  //
  // Behaviors: OUTPUT_ONLY
  secondaryPaymentsProfileId?: string;
  // Output only. Paying manager of this payment account.
  //
  // Behaviors: OUTPUT_ONLY
  payingManagerCustomer?: string;
};

// Service to provide payments accounts that can be used to set up consolidated
// billing.
export interface PaymentsAccountService {
  // Returns all payments accounts associated with all managers
  // between the login customer ID and specified serving customer in the
  // hierarchy, inclusive.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [PaymentsAccountError]()
  // [QuotaError]()
  // [RequestError]()
  ListPaymentsAccounts(request: ListPaymentsAccountsRequest): Promise<ListPaymentsAccountsResponse>;
}

export function createPaymentsAccountServiceClient(
  handler: RequestHandler
): PaymentsAccountService {
  return {
    ListPaymentsAccounts(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/paymentsAccounts`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListPaymentsAccountsResponse>;
    },
  };
}
// Request message for [RecommendationService.GetRecommendation][google.ads.googleads.v9.services.RecommendationService.GetRecommendation].
export type GetRecommendationRequest = {
  // Required. The resource name of the recommendation to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [RecommendationService.ApplyRecommendation][google.ads.googleads.v9.services.RecommendationService.ApplyRecommendation].
export type ApplyRecommendationRequest = {
  // Required. The ID of the customer with the recommendation.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to apply recommendations.
  // If partial_failure=false all recommendations should be of the same type
  // There is a limit of 100 operations per request.
  //
  // Behaviors: REQUIRED
  operations: ApplyRecommendationOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, operations will be carried
  // out as a transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
};

// Information about the operation to apply a recommendation and any parameters
// to customize it.
export type ApplyRecommendationOperation = {
  // The resource name of the recommendation to apply.
  resourceName: string | undefined;
  // Optional parameters to use when applying a campaign budget
  // recommendation.
  campaignBudget?: ApplyRecommendationOperation_CampaignBudgetParameters;
  // Optional parameters to use when applying a text ad recommendation.
  textAd?: ApplyRecommendationOperation_TextAdParameters;
  // Optional parameters to use when applying keyword recommendation.
  keyword?: ApplyRecommendationOperation_KeywordParameters;
  // Optional parameters to use when applying target CPA opt-in
  // recommendation.
  targetCpaOptIn?: ApplyRecommendationOperation_TargetCpaOptInParameters;
  // Optional parameters to use when applying target ROAS opt-in
  // recommendation.
  targetRoasOptIn?: ApplyRecommendationOperation_TargetRoasOptInParameters;
  // Parameters to use when applying callout extension recommendation.
  calloutExtension?: ApplyRecommendationOperation_CalloutExtensionParameters;
  // Parameters to use when applying call extension recommendation.
  callExtension?: ApplyRecommendationOperation_CallExtensionParameters;
  // Parameters to use when applying sitelink extension recommendation.
  sitelinkExtension?: ApplyRecommendationOperation_SitelinkExtensionParameters;
  // Parameters to use when applying move unused budget recommendation.
  moveUnusedBudget?: ApplyRecommendationOperation_MoveUnusedBudgetParameters;
  // Parameters to use when applying a responsive search ad recommendation.
  responsiveSearchAd?: ApplyRecommendationOperation_ResponsiveSearchAdParameters;
};

// Parameters to use when applying a campaign budget recommendation.
export type ApplyRecommendationOperation_CampaignBudgetParameters = {
  // New budget amount to set for target budget resource. This is a required
  // field.
  newBudgetAmountMicros?: number;
};

// Parameters to use when applying a text ad recommendation.
export type ApplyRecommendationOperation_TextAdParameters = {
  // New ad to add to recommended ad group. All necessary fields need to be
  // set in this message. This is a required field.
  ad: googleadsgoogleadsv9resources_Ad | undefined;
};

// Parameters to use when applying keyword recommendation.
export type ApplyRecommendationOperation_KeywordParameters = {
  // The ad group resource to add keyword to. This is a required field.
  adGroup?: string;
  // The match type of the keyword. This is a required field.
  matchType: googleadsgoogleadsv9enums_KeywordMatchTypeEnum_KeywordMatchType | undefined;
  // Optional, CPC bid to set for the keyword. If not set, keyword will use
  // bid based on bidding strategy used by target ad group.
  cpcBidMicros?: number;
};

// Parameters to use when applying Target CPA recommendation.
export type ApplyRecommendationOperation_TargetCpaOptInParameters = {
  // Average CPA to use for Target CPA bidding strategy. This is a required
  // field.
  targetCpaMicros?: number;
  // Optional, budget amount to set for the campaign.
  newCampaignBudgetAmountMicros?: number;
};

// Parameters to use when applying a Target ROAS opt-in recommendation.
export type ApplyRecommendationOperation_TargetRoasOptInParameters = {
  // Average ROAS (revenue per unit of spend) to use for Target ROAS bidding
  // strategy. The value is between 0.01 and 1000.0, inclusive. This is a
  // required field, unless new_campaign_budget_amount_micros is set.
  targetRoas?: number;
  // Optional, budget amount to set for the campaign.
  newCampaignBudgetAmountMicros?: number;
};

// Parameters to use when applying callout extension recommendation.
export type ApplyRecommendationOperation_CalloutExtensionParameters = {
  // Callout extensions to be added. This is a required field.
  calloutExtensions: googleadsgoogleadsv9common_CalloutFeedItem[] | undefined;
};

// Parameters to use when applying call extension recommendation.
export type ApplyRecommendationOperation_CallExtensionParameters = {
  // Call extensions to be added. This is a required field.
  callExtensions: googleadsgoogleadsv9common_CallFeedItem[] | undefined;
};

// Parameters to use when applying sitelink extension recommendation.
export type ApplyRecommendationOperation_SitelinkExtensionParameters = {
  // Sitelink extensions to be added. This is a required field.
  sitelinkExtensions: googleadsgoogleadsv9common_SitelinkFeedItem[] | undefined;
};

// Parameters to use when applying move unused budget recommendation.
export type ApplyRecommendationOperation_MoveUnusedBudgetParameters = {
  // Budget amount to move from excess budget to constrained budget. This is
  // a required field.
  budgetMicrosToMove?: number;
};

// Parameters to use when applying a responsive search ad recommendation.
export type ApplyRecommendationOperation_ResponsiveSearchAdParameters = {
  // Required. New ad to add to recommended ad group.
  //
  // Behaviors: REQUIRED
  ad: googleadsgoogleadsv9resources_Ad | undefined;
};

// Response message for [RecommendationService.ApplyRecommendation][google.ads.googleads.v9.services.RecommendationService.ApplyRecommendation].
export type ApplyRecommendationResponse = {
  // Results of operations to apply recommendations.
  results: ApplyRecommendationResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors)
  // we return the RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result of applying a recommendation.
export type ApplyRecommendationResult = {
  // Returned for successful applies.
  resourceName: string | undefined;
};

// Request message for [RecommendationService.DismissRecommendation][google.ads.googleads.v9.services.RecommendationService.DismissRecommendation].
export type DismissRecommendationRequest = {
  // Required. The ID of the customer with the recommendation.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to dismiss recommendations.
  // If partial_failure=false all recommendations should be of the same type
  // There is a limit of 100 operations per request.
  //
  // Behaviors: REQUIRED
  operations: DismissRecommendationRequest_DismissRecommendationOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, operations will be carried in a
  // single transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
};

// Operation to dismiss a single recommendation identified by resource_name.
export type DismissRecommendationRequest_DismissRecommendationOperation = {
  // The resource name of the recommendation to dismiss.
  resourceName: string | undefined;
};

// Response message for [RecommendationService.DismissRecommendation][google.ads.googleads.v9.services.RecommendationService.DismissRecommendation].
export type DismissRecommendationResponse = {
  // Results of operations to dismiss recommendations.
  results: DismissRecommendationResponse_DismissRecommendationResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors)
  // we return the RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// The result of dismissing a recommendation.
export type DismissRecommendationResponse_DismissRecommendationResult = {
  // Returned for successful dismissals.
  resourceName: string | undefined;
};

// Service to manage recommendations.
export interface RecommendationService {
  // Returns the requested recommendation in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetRecommendation(request: GetRecommendationRequest): Promise<googleadsgoogleadsv9resources_Recommendation>;
  // Applies given recommendations with corresponding apply parameters.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RecommendationError]()
  // [RequestError]()
  // [UrlFieldError]()
  ApplyRecommendation(request: ApplyRecommendationRequest): Promise<ApplyRecommendationResponse>;
  // Dismisses given recommendations.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RecommendationError]()
  // [RequestError]()
  DismissRecommendation(request: DismissRecommendationRequest): Promise<DismissRecommendationResponse>;
}

export function createRecommendationServiceClient(
  handler: RequestHandler
): RecommendationService {
  return {
    GetRecommendation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Recommendation>;
    },
    ApplyRecommendation(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/recommendations:apply`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<ApplyRecommendationResponse>;
    },
    DismissRecommendation(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/recommendations:dismiss`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<DismissRecommendationResponse>;
    },
  };
}
// Request message for [GenderViewService.GetGenderView][google.ads.googleads.v9.services.GenderViewService.GetGenderView].
export type GetGenderViewRequest = {
  // Required. The resource name of the gender view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage gender views.
export interface GenderViewService {
  // Returns the requested gender view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetGenderView(request: GetGenderViewRequest): Promise<googleadsgoogleadsv9resources_GenderView>;
}

export function createGenderViewServiceClient(
  handler: RequestHandler
): GenderViewService {
  return {
    GetGenderView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_GenderView>;
    },
  };
}
// Request message for [AssetFieldTypeViewService.GetAssetFieldTypeView][google.ads.googleads.v9.services.AssetFieldTypeViewService.GetAssetFieldTypeView].
export type GetAssetFieldTypeViewRequest = {
  // Required. The resource name of the asset field type view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch asset field type views.
export interface AssetFieldTypeViewService {
  // Returns the requested asset field type view in full detail.
  GetAssetFieldTypeView(request: GetAssetFieldTypeViewRequest): Promise<googleadsgoogleadsv9resources_AssetFieldTypeView>;
}

export function createAssetFieldTypeViewServiceClient(
  handler: RequestHandler
): AssetFieldTypeViewService {
  return {
    GetAssetFieldTypeView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AssetFieldTypeView>;
    },
  };
}
// Request message for
// [SmartCampaignSuggestService.SuggestSmartCampaignBudgets][].
export type SuggestSmartCampaignBudgetOptionsRequest = {
  // Required. The ID of the customer whose budget options are to be suggested.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The resource name of the campaign to get suggestion for.
  //
  // Behaviors: REQUIRED
  campaign?: string;
  // Required. Information needed to get budget options
  //
  // Behaviors: REQUIRED
  suggestionInfo?: SmartCampaignSuggestionInfo;
};

// Information needed to get suggestion for Smart Campaign. More information
// provided will help the system to derive better suggestions.
export type SmartCampaignSuggestionInfo = {
  // Optional. Landing page URL of the campaign.
  //
  // Behaviors: OPTIONAL
  finalUrl: string | undefined;
  // Optional. The two letter advertising language for the Smart campaign to be
  // constructed, default to 'en' if not set.
  //
  // Behaviors: OPTIONAL
  languageCode: string | undefined;
  // Optional. The business ad schedule.
  //
  // Behaviors: OPTIONAL
  adSchedules: googleadsgoogleadsv9common_AdScheduleInfo[] | undefined;
  // Optional. Smart campaign keyword themes. This field may greatly improve suggestion
  // accuracy and we recommend always setting it if possible.
  //
  // Behaviors: OPTIONAL
  keywordThemes: googleadsgoogleadsv9common_KeywordThemeInfo[] | undefined;
  // Optional. Context describing the business to advertise.
  //
  // Behaviors: OPTIONAL
  businessContext?: SmartCampaignSuggestionInfo_BusinessContext;
  // Optional. The ID of the Business Profile location.
  // The location ID can be fetched by Business Profile API with its form:
  // accounts/{accountId}/locations/{locationId}. The last {locationId}
  // component from the Business Profile API represents the
  // business_location_id. See the [Business Profile API]
  // (https://developers.google.com/my-business/reference/rest/v4/accounts.locations)
  //
  // Behaviors: OPTIONAL
  businessLocationId?: number;
  // Optional. The targeting geo location by locations.
  //
  // Behaviors: OPTIONAL
  locationList?: SmartCampaignSuggestionInfo_LocationList;
  // Optional. The targeting geo location by proximity.
  //
  // Behaviors: OPTIONAL
  proximity?: googleadsgoogleadsv9common_ProximityInfo;
};

// A context that describes a business.
export type SmartCampaignSuggestionInfo_BusinessContext = {
  // Optional. The name of the business.
  //
  // Behaviors: OPTIONAL
  businessName: string | undefined;
};

// A list of locations.
export type SmartCampaignSuggestionInfo_LocationList = {
  // Required. Locations.
  //
  // Behaviors: REQUIRED
  locations: googleadsgoogleadsv9common_LocationInfo[] | undefined;
};

// Response message for
// [SmartCampaignSuggestService.SuggestSmartCampaignBudgets][]. Depending on
// whether the system could suggest the options, either all of the options or
// none of them might be returned.
export type SuggestSmartCampaignBudgetOptionsResponse = {
  // Optional. The lowest budget option.
  //
  // Behaviors: OPTIONAL
  low?: SuggestSmartCampaignBudgetOptionsResponse_BudgetOption;
  // Optional. The recommended budget option.
  //
  // Behaviors: OPTIONAL
  recommended?: SuggestSmartCampaignBudgetOptionsResponse_BudgetOption;
  // Optional. The highest budget option.
  //
  // Behaviors: OPTIONAL
  high?: SuggestSmartCampaignBudgetOptionsResponse_BudgetOption;
};

// Smart Campaign budget option.
export type SuggestSmartCampaignBudgetOptionsResponse_BudgetOption = {
  // The amount of the budget, in the local currency for the account.
  // Amount is specified in micros, where one million is equivalent to one
  // currency unit.
  dailyAmountMicros: number | undefined;
  // Metrics pertaining to the suggested budget, could be empty if there is
  // not enough information to derive the estimates.
  metrics: SuggestSmartCampaignBudgetOptionsResponse_Metrics | undefined;
};

// Performance metrics for a given budget option.
export type SuggestSmartCampaignBudgetOptionsResponse_Metrics = {
  // The estimated min daily clicks.
  minDailyClicks: number | undefined;
  // The estimated max daily clicks.
  maxDailyClicks: number | undefined;
};

// Request message for
// [SmartCampaignSuggestService.SuggestSmartCampaignAd][google.ads.googleads.v9.services.SmartCampaignSuggestService.SuggestSmartCampaignAd].
export type SuggestSmartCampaignAdRequest = {
  // Required. The ID of the customer.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. Inputs used to suggest a Smart campaign ad.
  // Required fields: final_url, language_code, keyword_themes.
  // Optional but recommended fields to improve the quality of the suggestion:
  // business_setting and geo_target.
  //
  // Behaviors: REQUIRED
  suggestionInfo: SmartCampaignSuggestionInfo | undefined;
};

// Response message for
// [SmartCampaignSuggestService.SuggestSmartCampaignAd][google.ads.googleads.v9.services.SmartCampaignSuggestService.SuggestSmartCampaignAd].
export type SuggestSmartCampaignAdResponse = {
  // Optional. Ad info includes 3 creative headlines and 2 creative descriptions.
  //
  // Behaviors: OPTIONAL
  adInfo: googleadsgoogleadsv9common_SmartCampaignAdInfo | undefined;
};

// Request message for
// [SmartCampaignSuggestService.SuggestKeywordThemes][google.ads.googleads.v9.services.SmartCampaignSuggestService.SuggestKeywordThemes].
export type SuggestKeywordThemesRequest = {
  // Required. The ID of the customer.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. Information to get keyword theme suggestions.
  // Required fields:
  // * suggestion_info.final_url
  // * suggestion_info.language_code
  // * suggestion_info.geo_target
  // Recommended fields:
  // * suggestion_info.business_setting
  //
  // Behaviors: REQUIRED
  suggestionInfo: SmartCampaignSuggestionInfo | undefined;
};

// Response message for
// [SmartCampaignSuggestService.SuggestKeywordThemes][google.ads.googleads.v9.services.SmartCampaignSuggestService.SuggestKeywordThemes].
export type SuggestKeywordThemesResponse = {
  // Smart campaign keyword theme suggestions.
  keywordThemes: googleadsgoogleadsv9resources_KeywordThemeConstant[] | undefined;
};

// Service to get suggestions for Smart Campaigns.
export interface SmartCampaignSuggestService {
  // Returns BudgetOption suggestions.
  SuggestSmartCampaignBudgetOptions(request: SuggestSmartCampaignBudgetOptionsRequest): Promise<SuggestSmartCampaignBudgetOptionsResponse>;
  // Suggests a Smart campaign ad compatible with the Ad family of resources,
  // based on data points such as targeting and the business to advertise.
  SuggestSmartCampaignAd(request: SuggestSmartCampaignAdRequest): Promise<SuggestSmartCampaignAdResponse>;
  // Suggests keyword themes to advertise on.
  SuggestKeywordThemes(request: SuggestKeywordThemesRequest): Promise<SuggestKeywordThemesResponse>;
}

export function createSmartCampaignSuggestServiceClient(
  handler: RequestHandler
): SmartCampaignSuggestService {
  return {
    SuggestSmartCampaignBudgetOptions(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:suggestSmartCampaignBudgetOptions`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SuggestSmartCampaignBudgetOptionsResponse>;
    },
    SuggestSmartCampaignAd(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:suggestSmartCampaignAd`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SuggestSmartCampaignAdResponse>;
    },
    SuggestKeywordThemes(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:suggestKeywordThemes`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SuggestKeywordThemesResponse>;
    },
  };
}
// Request message for [SmartCampaignSettingService.GetSmartCampaignSetting][google.ads.googleads.v9.services.SmartCampaignSettingService.GetSmartCampaignSetting].
export type GetSmartCampaignSettingRequest = {
  // Required. The resource name of the Smart campaign setting to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [SmartCampaignSettingService.MutateSmartCampaignSetting][].
export type MutateSmartCampaignSettingsRequest = {
  // Required. The ID of the customer whose Smart campaign settings are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual Smart campaign settings.
  //
  // Behaviors: REQUIRED
  operations: SmartCampaignSettingOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for campaign mutate.
export type MutateSmartCampaignSettingsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateSmartCampaignSettingResult[] | undefined;
};

// Service to manage Smart campaign settings.
export interface SmartCampaignSettingService {
  // Returns the requested Smart campaign setting in full detail.
  GetSmartCampaignSetting(request: GetSmartCampaignSettingRequest): Promise<googleadsgoogleadsv9resources_SmartCampaignSetting>;
  // Updates Smart campaign settings for campaigns.
  MutateSmartCampaignSettings(request: MutateSmartCampaignSettingsRequest): Promise<MutateSmartCampaignSettingsResponse>;
}

export function createSmartCampaignSettingServiceClient(
  handler: RequestHandler
): SmartCampaignSettingService {
  return {
    GetSmartCampaignSetting(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_SmartCampaignSetting>;
    },
    MutateSmartCampaignSettings(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/smartCampaignSettings:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateSmartCampaignSettingsResponse>;
    },
  };
}
// Request message for [AdParameterService.GetAdParameter][google.ads.googleads.v9.services.AdParameterService.GetAdParameter]
export type GetAdParameterRequest = {
  // Required. The resource name of the ad parameter to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdParameterService.MutateAdParameters][google.ads.googleads.v9.services.AdParameterService.MutateAdParameters]
export type MutateAdParametersRequest = {
  // Required. The ID of the customer whose ad parameters are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad parameters.
  //
  // Behaviors: REQUIRED
  operations: AdParameterOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an ad parameter mutate.
export type MutateAdParametersResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdParameterResult[] | undefined;
};

// Service to manage ad parameters.
export interface AdParameterService {
  // Returns the requested ad parameter in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdParameter(request: GetAdParameterRequest): Promise<googleadsgoogleadsv9resources_AdParameter>;
  // Creates, updates, or removes ad parameters. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AdParameterError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ContextError]()
  // [DatabaseError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateAdParameters(request: MutateAdParametersRequest): Promise<MutateAdParametersResponse>;
}

export function createAdParameterServiceClient(
  handler: RequestHandler
): AdParameterService {
  return {
    GetAdParameter(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdParameter>;
    },
    MutateAdParameters(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adParameters:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdParametersResponse>;
    },
  };
}
// Request message for [ParentalStatusViewService.GetParentalStatusView][google.ads.googleads.v9.services.ParentalStatusViewService.GetParentalStatusView].
export type GetParentalStatusViewRequest = {
  // Required. The resource name of the parental status view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage parental status views.
export interface ParentalStatusViewService {
  // Returns the requested parental status view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetParentalStatusView(request: GetParentalStatusViewRequest): Promise<googleadsgoogleadsv9resources_ParentalStatusView>;
}

export function createParentalStatusViewServiceClient(
  handler: RequestHandler
): ParentalStatusViewService {
  return {
    GetParentalStatusView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ParentalStatusView>;
    },
  };
}
// Request message for [GeoTargetConstantService.GetGeoTargetConstant][google.ads.googleads.v9.services.GeoTargetConstantService.GetGeoTargetConstant].
export type GetGeoTargetConstantRequest = {
  // Required. The resource name of the geo target constant to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [GeoTargetConstantService.SuggestGeoTargetConstants][google.ads.googleads.v9.services.GeoTargetConstantService.SuggestGeoTargetConstants].
export type SuggestGeoTargetConstantsRequest = {
  // If possible, returned geo targets are translated using this locale. If not,
  // en is used by default. This is also used as a hint for returned geo
  // targets.
  locale?: string;
  // Returned geo targets are restricted to this country code.
  countryCode?: string;
  // The location names to search by. At most 25 names can be set.
  locationNames?: SuggestGeoTargetConstantsRequest_LocationNames;
  // The geo target constant resource names to filter by.
  geoTargets?: SuggestGeoTargetConstantsRequest_GeoTargets;
};

// A list of location names.
export type SuggestGeoTargetConstantsRequest_LocationNames = {
  // A list of location names.
  names: string[] | undefined;
};

// A list of geo target constant resource names.
export type SuggestGeoTargetConstantsRequest_GeoTargets = {
  // A list of geo target constant resource names.
  geoTargetConstants: string[] | undefined;
};

// Response message for [GeoTargetConstantService.SuggestGeoTargetConstants][google.ads.googleads.v9.services.GeoTargetConstantService.SuggestGeoTargetConstants].
export type SuggestGeoTargetConstantsResponse = {
  // Geo target constant suggestions.
  geoTargetConstantSuggestions: GeoTargetConstantSuggestion[] | undefined;
};

// A geo target constant suggestion.
export type GeoTargetConstantSuggestion = {
  // The language this GeoTargetConstantSuggestion is currently translated to.
  // It affects the name of geo target fields. For example, if locale=en, then
  // name=Spain. If locale=es, then name=España. The default locale will be
  // returned if no translation exists for the locale in the request.
  locale?: string;
  // Approximate user population that will be targeted, rounded to the
  // nearest 100.
  reach?: number;
  // If the request searched by location name, this is the location name that
  // matched the geo target.
  searchTerm?: string;
  // The GeoTargetConstant result.
  geoTargetConstant: googleadsgoogleadsv9resources_GeoTargetConstant | undefined;
  // The list of parents of the geo target constant.
  geoTargetConstantParents: googleadsgoogleadsv9resources_GeoTargetConstant[] | undefined;
};

// Service to fetch geo target constants.
export interface GeoTargetConstantService {
  // Returns the requested geo target constant in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetGeoTargetConstant(request: GetGeoTargetConstantRequest): Promise<googleadsgoogleadsv9resources_GeoTargetConstant>;
  // Returns GeoTargetConstant suggestions by location name or by resource name.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [GeoTargetConstantSuggestionError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  SuggestGeoTargetConstants(request: SuggestGeoTargetConstantsRequest): Promise<SuggestGeoTargetConstantsResponse>;
}

export function createGeoTargetConstantServiceClient(
  handler: RequestHandler
): GeoTargetConstantService {
  return {
    GetGeoTargetConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_GeoTargetConstant>;
    },
    SuggestGeoTargetConstants(request) {
      const path = `v9/geoTargetConstants:suggest`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SuggestGeoTargetConstantsResponse>;
    },
  };
}
// Request message for [CampaignBidModifierService.GetCampaignBidModifier][google.ads.googleads.v9.services.CampaignBidModifierService.GetCampaignBidModifier].
export type GetCampaignBidModifierRequest = {
  // Required. The resource name of the campaign bid modifier to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [CampaignBidModifierService.MutateCampaignBidModifiers][google.ads.googleads.v9.services.CampaignBidModifierService.MutateCampaignBidModifiers].
export type MutateCampaignBidModifiersRequest = {
  // Required. ID of the customer whose campaign bid modifiers are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign bid modifiers.
  //
  // Behaviors: REQUIRED
  operations: CampaignBidModifierOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for campaign bid modifiers mutate.
export type MutateCampaignBidModifiersResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignBidModifierResult[] | undefined;
};

// Service to manage campaign bid modifiers.
export interface CampaignBidModifierService {
  // Returns the requested campaign bid modifier in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignBidModifier(request: GetCampaignBidModifierRequest): Promise<googleadsgoogleadsv9resources_CampaignBidModifier>;
  // Creates, updates, or removes campaign bid modifiers.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ContextError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateCampaignBidModifiers(request: MutateCampaignBidModifiersRequest): Promise<MutateCampaignBidModifiersResponse>;
}

export function createCampaignBidModifierServiceClient(
  handler: RequestHandler
): CampaignBidModifierService {
  return {
    GetCampaignBidModifier(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignBidModifier>;
    },
    MutateCampaignBidModifiers(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignBidModifiers:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignBidModifiersResponse>;
    },
  };
}
// Request message for [CurrencyConstantService.GetCurrencyConstant][google.ads.googleads.v9.services.CurrencyConstantService.GetCurrencyConstant].
export type GetCurrencyConstantRequest = {
  // Required. Resource name of the currency constant to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch currency constants.
export interface CurrencyConstantService {
  // Returns the requested currency constant.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCurrencyConstant(request: GetCurrencyConstantRequest): Promise<googleadsgoogleadsv9resources_CurrencyConstant>;
}

export function createCurrencyConstantServiceClient(
  handler: RequestHandler
): CurrencyConstantService {
  return {
    GetCurrencyConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CurrencyConstant>;
    },
  };
}
// Request message for
// [PaidOrganicSearchTermViewService.GetPaidOrganicSearchTermView][google.ads.googleads.v9.services.PaidOrganicSearchTermViewService.GetPaidOrganicSearchTermView].
export type GetPaidOrganicSearchTermViewRequest = {
  // Required. The resource name of the paid organic search term view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch paid organic search term views.
export interface PaidOrganicSearchTermViewService {
  // Returns the requested paid organic search term view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetPaidOrganicSearchTermView(request: GetPaidOrganicSearchTermViewRequest): Promise<googleadsgoogleadsv9resources_PaidOrganicSearchTermView>;
}

export function createPaidOrganicSearchTermViewServiceClient(
  handler: RequestHandler
): PaidOrganicSearchTermViewService {
  return {
    GetPaidOrganicSearchTermView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_PaidOrganicSearchTermView>;
    },
  };
}
// Request message for
// [CustomerUserAccessService.GetCustomerUserAccess][google.ads.googleads.v9.services.CustomerUserAccessService.GetCustomerUserAccess].
export type GetCustomerUserAccessRequest = {
  // Required. Resource name of the customer user access.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Mutate Request for
// [CustomerUserAccessService.MutateCustomerUserAccess][google.ads.googleads.v9.services.CustomerUserAccessService.MutateCustomerUserAccess].
export type MutateCustomerUserAccessRequest = {
  // Required. The ID of the customer being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on the customer
  //
  // Behaviors: REQUIRED
  operation: CustomerUserAccessOperation | undefined;
};

// A single operation (update, remove) on customer user access.
export type CustomerUserAccessOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Update operation: The customer user access is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CustomerUserAccess;
  // Remove operation: A resource name for the removed access is
  // expected, in this format:
  // `customers/{customer_id}/customerUserAccesses/{CustomerUserAccess.user_id}`
  remove?: string;
};

// Response message for customer user access mutate.
export type MutateCustomerUserAccessResponse = {
  // Result for the mutate.
  result: MutateCustomerUserAccessResult | undefined;
};

// The result for the customer user access mutate.
export type MutateCustomerUserAccessResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// This service manages the permissions of a user on a given customer.
export interface CustomerUserAccessService {
  // Returns the CustomerUserAccess in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerUserAccess(request: GetCustomerUserAccessRequest): Promise<googleadsgoogleadsv9resources_CustomerUserAccess>;
  // Updates, removes permission of a user on a given customer. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CustomerUserAccessError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerUserAccess(request: MutateCustomerUserAccessRequest): Promise<MutateCustomerUserAccessResponse>;
}

export function createCustomerUserAccessServiceClient(
  handler: RequestHandler
): CustomerUserAccessService {
  return {
    GetCustomerUserAccess(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerUserAccess>;
    },
    MutateCustomerUserAccess(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerUserAccesses:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerUserAccessResponse>;
    },
  };
}
// Request message for
// [OperatingSystemVersionConstantService.GetOperatingSystemVersionConstant][google.ads.googleads.v9.services.OperatingSystemVersionConstantService.GetOperatingSystemVersionConstant].
export type GetOperatingSystemVersionConstantRequest = {
  // Required. Resource name of the OS version to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Operating System Version constants.
export interface OperatingSystemVersionConstantService {
  // Returns the requested OS version constant in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetOperatingSystemVersionConstant(request: GetOperatingSystemVersionConstantRequest): Promise<googleadsgoogleadsv9resources_OperatingSystemVersionConstant>;
}

export function createOperatingSystemVersionConstantServiceClient(
  handler: RequestHandler
): OperatingSystemVersionConstantService {
  return {
    GetOperatingSystemVersionConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_OperatingSystemVersionConstant>;
    },
  };
}
// Request message for [UserLocationViewService.GetUserLocationView][google.ads.googleads.v9.services.UserLocationViewService.GetUserLocationView].
export type GetUserLocationViewRequest = {
  // Required. The resource name of the user location view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage user location views.
export interface UserLocationViewService {
  // Returns the requested user location view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetUserLocationView(request: GetUserLocationViewRequest): Promise<googleadsgoogleadsv9resources_UserLocationView>;
}

export function createUserLocationViewServiceClient(
  handler: RequestHandler
): UserLocationViewService {
  return {
    GetUserLocationView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_UserLocationView>;
    },
  };
}
// Request message for [CampaignDraftService.GetCampaignDraft][google.ads.googleads.v9.services.CampaignDraftService.GetCampaignDraft].
export type GetCampaignDraftRequest = {
  // Required. The resource name of the campaign draft to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignDraftService.MutateCampaignDrafts][google.ads.googleads.v9.services.CampaignDraftService.MutateCampaignDrafts].
export type MutateCampaignDraftsRequest = {
  // Required. The ID of the customer whose campaign drafts are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign drafts.
  //
  // Behaviors: REQUIRED
  operations: CampaignDraftOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Request message for [CampaignDraftService.PromoteCampaignDraft][google.ads.googleads.v9.services.CampaignDraftService.PromoteCampaignDraft].
export type PromoteCampaignDraftRequest = {
  // Required. The resource name of the campaign draft to promote.
  //
  // Behaviors: REQUIRED
  campaignDraft: string | undefined;
  // If true, the request is validated but no Long Running Operation is created.
  // Only errors are returned.
  validateOnly: boolean | undefined;
};

// Response message for campaign draft mutate.
export type MutateCampaignDraftsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignDraftResult[] | undefined;
};

// Request message for [CampaignDraftService.ListCampaignDraftAsyncErrors][google.ads.googleads.v9.services.CampaignDraftService.ListCampaignDraftAsyncErrors].
export type ListCampaignDraftAsyncErrorsRequest = {
  // Required. The name of the campaign draft from which to retrieve the async errors.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  pageToken: string | undefined;
  // Number of elements to retrieve in a single page.
  // When a page request is too large, the server may decide to
  // further limit the number of returned resources.
  pageSize: number | undefined;
};

// Response message for [CampaignDraftService.ListCampaignDraftAsyncErrors][google.ads.googleads.v9.services.CampaignDraftService.ListCampaignDraftAsyncErrors].
export type ListCampaignDraftAsyncErrorsResponse = {
  // Details of the errors when performing the asynchronous operation.
  errors: googlerpc_Status[] | undefined;
  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  nextPageToken: string | undefined;
};

// Service to manage campaign drafts.
export interface CampaignDraftService {
  // Returns the requested campaign draft in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignDraft(request: GetCampaignDraftRequest): Promise<googleadsgoogleadsv9resources_CampaignDraft>;
  // Creates, updates, or removes campaign drafts. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignDraftError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCampaignDrafts(request: MutateCampaignDraftsRequest): Promise<MutateCampaignDraftsResponse>;
  // Promotes the changes in a draft back to the base campaign.
  // This method returns a Long Running Operation (LRO) indicating if the
  // Promote is done. Use [Operations.GetOperation] to poll the LRO until it
  // is done. Only a done status is returned in the response. See the status
  // in the Campaign Draft resource to determine if the promotion was
  // successful. If the LRO failed, use
  // [CampaignDraftService.ListCampaignDraftAsyncErrors][google.ads.googleads.v9.services.CampaignDraftService.ListCampaignDraftAsyncErrors] to view the list of
  // error reasons.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignDraftError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  PromoteCampaignDraft(request: PromoteCampaignDraftRequest): Promise<googlelongrunning_Operation>;
  // Returns all errors that occurred during CampaignDraft promote. Throws an
  // error if called before campaign draft is promoted.
  // Supports standard list paging.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  ListCampaignDraftAsyncErrors(request: ListCampaignDraftAsyncErrorsRequest): Promise<ListCampaignDraftAsyncErrorsResponse>;
}

export function createCampaignDraftServiceClient(
  handler: RequestHandler
): CampaignDraftService {
  return {
    GetCampaignDraft(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignDraft>;
    },
    MutateCampaignDrafts(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignDrafts:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignDraftsResponse>;
    },
    PromoteCampaignDraft(request) {
      if (!request.campaignDraft) {
        throw new Error("missing required field request.campaign_draft");
      }
      const path = `v9/${request.campaignDraft}:promote`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<googlelongrunning_Operation>;
    },
    ListCampaignDraftAsyncErrors(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:listAsyncErrors`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      if (request.pageToken) {
        queryParams.push("pageToken=" + encodeURIComponent(request.pageToken.toString()));
      }
      if (request.pageSize) {
        queryParams.push("pageSize=" + encodeURIComponent(request.pageSize.toString()));
      }
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<ListCampaignDraftAsyncErrorsResponse>;
    },
  };
}
// Request message for [UserListService.GetUserList][google.ads.googleads.v9.services.UserListService.GetUserList].
export type GetUserListRequest = {
  // Required. The resource name of the user list to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [UserListService.MutateUserLists][google.ads.googleads.v9.services.UserListService.MutateUserLists].
export type MutateUserListsRequest = {
  // Required. The ID of the customer whose user lists are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual user lists.
  //
  // Behaviors: REQUIRED
  operations: UserListOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for user list mutate.
export type MutateUserListsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateUserListResult[] | undefined;
};

// Service to manage user lists.
export interface UserListService {
  // Returns the requested user list.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetUserList(request: GetUserListRequest): Promise<googleadsgoogleadsv9resources_UserList>;
  // Creates or updates user lists. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotAllowlistedError]()
  // [NotEmptyError]()
  // [OperationAccessDeniedError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UserListError]()
  MutateUserLists(request: MutateUserListsRequest): Promise<MutateUserListsResponse>;
}

export function createUserListServiceClient(
  handler: RequestHandler
): UserListService {
  return {
    GetUserList(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_UserList>;
    },
    MutateUserLists(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/userLists:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateUserListsResponse>;
    },
  };
}
// Request message for [ClickViewService.GetClickView][google.ads.googleads.v9.services.ClickViewService.GetClickView].
export type GetClickViewRequest = {
  // Required. The resource name of the click view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch click views.
export interface ClickViewService {
  // Returns the requested click view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetClickView(request: GetClickViewRequest): Promise<googleadsgoogleadsv9resources_ClickView>;
}

export function createClickViewServiceClient(
  handler: RequestHandler
): ClickViewService {
  return {
    GetClickView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ClickView>;
    },
  };
}
// Request message for [DistanceViewService.GetDistanceView][google.ads.googleads.v9.services.DistanceViewService.GetDistanceView].
export type GetDistanceViewRequest = {
  // Required. The resource name of the distance view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch distance views.
export interface DistanceViewService {
  // Returns the attributes of the requested distance view.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetDistanceView(request: GetDistanceViewRequest): Promise<googleadsgoogleadsv9resources_DistanceView>;
}

export function createDistanceViewServiceClient(
  handler: RequestHandler
): DistanceViewService {
  return {
    GetDistanceView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_DistanceView>;
    },
  };
}
// Request message for
// [CustomerExtensionSettingService.GetCustomerExtensionSetting][google.ads.googleads.v9.services.CustomerExtensionSettingService.GetCustomerExtensionSetting].
export type GetCustomerExtensionSettingRequest = {
  // Required. The resource name of the customer extension setting to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [CustomerExtensionSettingService.MutateCustomerExtensionSettings][google.ads.googleads.v9.services.CustomerExtensionSettingService.MutateCustomerExtensionSettings].
export type MutateCustomerExtensionSettingsRequest = {
  // Required. The ID of the customer whose customer extension settings are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual customer extension
  // settings.
  //
  // Behaviors: REQUIRED
  operations: CustomerExtensionSettingOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for a customer extension setting mutate.
export type MutateCustomerExtensionSettingsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCustomerExtensionSettingResult[] | undefined;
};

// Service to manage customer extension settings.
export interface CustomerExtensionSettingService {
  // Returns the requested customer extension setting in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerExtensionSetting(request: GetCustomerExtensionSettingRequest): Promise<googleadsgoogleadsv9resources_CustomerExtensionSetting>;
  // Creates, updates, or removes customer extension settings. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [ExtensionSettingError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateCustomerExtensionSettings(request: MutateCustomerExtensionSettingsRequest): Promise<MutateCustomerExtensionSettingsResponse>;
}

export function createCustomerExtensionSettingServiceClient(
  handler: RequestHandler
): CustomerExtensionSettingService {
  return {
    GetCustomerExtensionSetting(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerExtensionSetting>;
    },
    MutateCustomerExtensionSettings(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerExtensionSettings:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerExtensionSettingsResponse>;
    },
  };
}
// Request message for [LandingPageViewService.GetLandingPageView][google.ads.googleads.v9.services.LandingPageViewService.GetLandingPageView].
export type GetLandingPageViewRequest = {
  // Required. The resource name of the landing page view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch landing page views.
export interface LandingPageViewService {
  // Returns the requested landing page view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetLandingPageView(request: GetLandingPageViewRequest): Promise<googleadsgoogleadsv9resources_LandingPageView>;
}

export function createLandingPageViewServiceClient(
  handler: RequestHandler
): LandingPageViewService {
  return {
    GetLandingPageView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_LandingPageView>;
    },
  };
}
// Request message for [AdGroupLabelService.GetAdGroupLabel][google.ads.googleads.v9.services.AdGroupLabelService.GetAdGroupLabel].
export type GetAdGroupLabelRequest = {
  // Required. The resource name of the ad group label to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupLabelService.MutateAdGroupLabels][google.ads.googleads.v9.services.AdGroupLabelService.MutateAdGroupLabels].
export type MutateAdGroupLabelsRequest = {
  // Required. ID of the customer whose ad group labels are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on ad group labels.
  //
  // Behaviors: REQUIRED
  operations: AdGroupLabelOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for an ad group labels mutate.
export type MutateAdGroupLabelsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupLabelResult[] | undefined;
};

// Service to manage labels on ad groups.
export interface AdGroupLabelService {
  // Returns the requested ad group label in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupLabel(request: GetAdGroupLabelRequest): Promise<googleadsgoogleadsv9resources_AdGroupLabel>;
  // Creates and removes ad group labels.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [LabelError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RequestError]()
  MutateAdGroupLabels(request: MutateAdGroupLabelsRequest): Promise<MutateAdGroupLabelsResponse>;
}

export function createAdGroupLabelServiceClient(
  handler: RequestHandler
): AdGroupLabelService {
  return {
    GetAdGroupLabel(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupLabel>;
    },
    MutateAdGroupLabels(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupLabels:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupLabelsResponse>;
    },
  };
}
// Request message for [FeedItemTargetService.GetFeedItemTarget][google.ads.googleads.v9.services.FeedItemTargetService.GetFeedItemTarget].
export type GetFeedItemTargetRequest = {
  // Required. The resource name of the feed item targets to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [FeedItemTargetService.MutateFeedItemTargets][google.ads.googleads.v9.services.FeedItemTargetService.MutateFeedItemTargets].
export type MutateFeedItemTargetsRequest = {
  // Required. The ID of the customer whose feed item targets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual feed item targets.
  //
  // Behaviors: REQUIRED
  operations: FeedItemTargetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for an feed item target mutate.
export type MutateFeedItemTargetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateFeedItemTargetResult[] | undefined;
};

// Service to manage feed item targets.
export interface FeedItemTargetService {
  // Returns the requested feed item targets in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeedItemTarget(request: GetFeedItemTargetRequest): Promise<googleadsgoogleadsv9resources_FeedItemTarget>;
  // Creates or removes feed item targets. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FeedItemTargetError]()
  // [FieldError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateFeedItemTargets(request: MutateFeedItemTargetsRequest): Promise<MutateFeedItemTargetsResponse>;
}

export function createFeedItemTargetServiceClient(
  handler: RequestHandler
): FeedItemTargetService {
  return {
    GetFeedItemTarget(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_FeedItemTarget>;
    },
    MutateFeedItemTargets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/feedItemTargets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateFeedItemTargetsResponse>;
    },
  };
}
// Request message for [DisplayKeywordViewService.GetDisplayKeywordView][google.ads.googleads.v9.services.DisplayKeywordViewService.GetDisplayKeywordView].
export type GetDisplayKeywordViewRequest = {
  // Required. The resource name of the display keyword view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage display keyword views.
export interface DisplayKeywordViewService {
  // Returns the requested display keyword view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetDisplayKeywordView(request: GetDisplayKeywordViewRequest): Promise<googleadsgoogleadsv9resources_DisplayKeywordView>;
}

export function createDisplayKeywordViewServiceClient(
  handler: RequestHandler
): DisplayKeywordViewService {
  return {
    GetDisplayKeywordView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_DisplayKeywordView>;
    },
  };
}
// Request message for [LifeEventService.GetLifeEvent][google.ads.googleads.v9.services.LifeEventService.GetLifeEvent].
export type GetLifeEventRequest = {
  // Required. Resource name of the LifeEvent to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Google Ads Life Events.
export interface LifeEventService {
  // Returns the requested life event in full detail.
  GetLifeEvent(request: GetLifeEventRequest): Promise<googleadsgoogleadsv9resources_LifeEvent>;
}

export function createLifeEventServiceClient(
  handler: RequestHandler
): LifeEventService {
  return {
    GetLifeEvent(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_LifeEvent>;
    },
  };
}
// Request message for
// [ConversionCustomVariableService.GetConversionCustomVariable][google.ads.googleads.v9.services.ConversionCustomVariableService.GetConversionCustomVariable].
export type GetConversionCustomVariableRequest = {
  // Required. The resource name of the conversion custom variable to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [ConversionCustomVariableService.MutateConversionCustomVariables][google.ads.googleads.v9.services.ConversionCustomVariableService.MutateConversionCustomVariables].
export type MutateConversionCustomVariablesRequest = {
  // Required. The ID of the customer whose conversion custom variables are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual conversion custom
  // variables.
  //
  // Behaviors: REQUIRED
  operations: ConversionCustomVariableOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for
// [ConversionCustomVariableService.MutateConversionCustomVariables][google.ads.googleads.v9.services.ConversionCustomVariableService.MutateConversionCustomVariables].
export type MutateConversionCustomVariablesResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateConversionCustomVariableResult[] | undefined;
};

// Service to manage conversion custom variables.
export interface ConversionCustomVariableService {
  // Returns the requested conversion custom variable.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetConversionCustomVariable(request: GetConversionCustomVariableRequest): Promise<googleadsgoogleadsv9resources_ConversionCustomVariable>;
  // Creates or updates conversion custom variables. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ConversionCustomVariableError]()
  // [DatabaseError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateConversionCustomVariables(request: MutateConversionCustomVariablesRequest): Promise<MutateConversionCustomVariablesResponse>;
}

export function createConversionCustomVariableServiceClient(
  handler: RequestHandler
): ConversionCustomVariableService {
  return {
    GetConversionCustomVariable(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ConversionCustomVariable>;
    },
    MutateConversionCustomVariables(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/conversionCustomVariables:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateConversionCustomVariablesResponse>;
    },
  };
}
// Request message for [AdGroupBidModifierService.GetAdGroupBidModifier][google.ads.googleads.v9.services.AdGroupBidModifierService.GetAdGroupBidModifier].
export type GetAdGroupBidModifierRequest = {
  // Required. The resource name of the ad group bid modifier to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupBidModifierService.MutateAdGroupBidModifiers][google.ads.googleads.v9.services.AdGroupBidModifierService.MutateAdGroupBidModifiers].
export type MutateAdGroupBidModifiersRequest = {
  // Required. ID of the customer whose ad group bid modifiers are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad group bid modifiers.
  //
  // Behaviors: REQUIRED
  operations: AdGroupBidModifierOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for ad group bid modifiers mutate.
export type MutateAdGroupBidModifiersResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupBidModifierResult[] | undefined;
};

// Service to manage ad group bid modifiers.
export interface AdGroupBidModifierService {
  // Returns the requested ad group bid modifier in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupBidModifier(request: GetAdGroupBidModifierRequest): Promise<googleadsgoogleadsv9resources_AdGroupBidModifier>;
  // Creates, updates, or removes ad group bid modifiers.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AdGroupBidModifierError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ContextError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateAdGroupBidModifiers(request: MutateAdGroupBidModifiersRequest): Promise<MutateAdGroupBidModifiersResponse>;
}

export function createAdGroupBidModifierServiceClient(
  handler: RequestHandler
): AdGroupBidModifierService {
  return {
    GetAdGroupBidModifier(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupBidModifier>;
    },
    MutateAdGroupBidModifiers(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupBidModifiers:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupBidModifiersResponse>;
    },
  };
}
// Request message for [LanguageConstantService.GetLanguageConstant][google.ads.googleads.v9.services.LanguageConstantService.GetLanguageConstant].
export type GetLanguageConstantRequest = {
  // Required. Resource name of the language constant to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch language constants.
export interface LanguageConstantService {
  // Returns the requested language constant.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetLanguageConstant(request: GetLanguageConstantRequest): Promise<googleadsgoogleadsv9resources_LanguageConstant>;
}

export function createLanguageConstantServiceClient(
  handler: RequestHandler
): LanguageConstantService {
  return {
    GetLanguageConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_LanguageConstant>;
    },
  };
}
// Request message for [UserInterestService.GetUserInterest][google.ads.googleads.v9.services.UserInterestService.GetUserInterest].
export type GetUserInterestRequest = {
  // Required. Resource name of the UserInterest to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch Google Ads User Interest.
export interface UserInterestService {
  // Returns the requested user interest in full detail
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetUserInterest(request: GetUserInterestRequest): Promise<googleadsgoogleadsv9resources_UserInterest>;
}

export function createUserInterestServiceClient(
  handler: RequestHandler
): UserInterestService {
  return {
    GetUserInterest(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_UserInterest>;
    },
  };
}
// Request message for [AssetSetService.MutateAssetSets][google.ads.googleads.v9.services.AssetSetService.MutateAssetSets].
export type MutateAssetSetsRequest = {
  // Required. The ID of the customer whose asset sets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual asset sets.
  //
  // Behaviors: REQUIRED
  operations: AssetSetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an asset set mutate.
export type MutateAssetSetsResponse = {
  // All results for the mutate.
  results: MutateAssetSetResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage asset set
export interface AssetSetService {
  // Creates, updates or removes asset sets. Operation statuses are
  // returned.
  MutateAssetSets(request: MutateAssetSetsRequest): Promise<MutateAssetSetsResponse>;
}

export function createAssetSetServiceClient(
  handler: RequestHandler
): AssetSetService {
  return {
    MutateAssetSets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/assetSets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAssetSetsResponse>;
    },
  };
}
// Request message for
// [AdGroupExtensionSettingService.GetAdGroupExtensionSetting][google.ads.googleads.v9.services.AdGroupExtensionSettingService.GetAdGroupExtensionSetting].
export type GetAdGroupExtensionSettingRequest = {
  // Required. The resource name of the ad group extension setting to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [AdGroupExtensionSettingService.MutateAdGroupExtensionSettings][google.ads.googleads.v9.services.AdGroupExtensionSettingService.MutateAdGroupExtensionSettings].
export type MutateAdGroupExtensionSettingsRequest = {
  // Required. The ID of the customer whose ad group extension settings are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ad group extension
  // settings.
  //
  // Behaviors: REQUIRED
  operations: AdGroupExtensionSettingOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for an ad group extension setting mutate.
export type MutateAdGroupExtensionSettingsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupExtensionSettingResult[] | undefined;
};

// Service to manage ad group extension settings.
export interface AdGroupExtensionSettingService {
  // Returns the requested ad group extension setting in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupExtensionSetting(request: GetAdGroupExtensionSettingRequest): Promise<googleadsgoogleadsv9resources_AdGroupExtensionSetting>;
  // Creates, updates, or removes ad group extension settings. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [ExtensionSettingError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateAdGroupExtensionSettings(request: MutateAdGroupExtensionSettingsRequest): Promise<MutateAdGroupExtensionSettingsResponse>;
}

export function createAdGroupExtensionSettingServiceClient(
  handler: RequestHandler
): AdGroupExtensionSettingService {
  return {
    GetAdGroupExtensionSetting(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupExtensionSetting>;
    },
    MutateAdGroupExtensionSettings(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupExtensionSettings:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupExtensionSettingsResponse>;
    },
  };
}
// Request message for [FeedPlaceholderViewService.GetFeedPlaceholderView][google.ads.googleads.v9.services.FeedPlaceholderViewService.GetFeedPlaceholderView].
export type GetFeedPlaceholderViewRequest = {
  // Required. The resource name of the feed placeholder view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch feed placeholder views.
export interface FeedPlaceholderViewService {
  // Returns the requested feed placeholder view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeedPlaceholderView(request: GetFeedPlaceholderViewRequest): Promise<googleadsgoogleadsv9resources_FeedPlaceholderView>;
}

export function createFeedPlaceholderViewServiceClient(
  handler: RequestHandler
): FeedPlaceholderViewService {
  return {
    GetFeedPlaceholderView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_FeedPlaceholderView>;
    },
  };
}
// Request message for [WebpageViewService.GetWebpageView][google.ads.googleads.v9.services.WebpageViewService.GetWebpageView].
export type GetWebpageViewRequest = {
  // Required. The resource name of the webpage view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage webpage views.
export interface WebpageViewService {
  // Returns the requested webpage view in full detail.
  GetWebpageView(request: GetWebpageViewRequest): Promise<googleadsgoogleadsv9resources_WebpageView>;
}

export function createWebpageViewServiceClient(
  handler: RequestHandler
): WebpageViewService {
  return {
    GetWebpageView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_WebpageView>;
    },
  };
}
// Request message for
// [KeywordPlanAdGroupKeywordService.GetKeywordPlanAdGroupKeyword][google.ads.googleads.v9.services.KeywordPlanAdGroupKeywordService.GetKeywordPlanAdGroupKeyword].
export type GetKeywordPlanAdGroupKeywordRequest = {
  // Required. The resource name of the ad group keyword to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [KeywordPlanAdGroupKeywordService.MutateKeywordPlanAdGroupKeywords][google.ads.googleads.v9.services.KeywordPlanAdGroupKeywordService.MutateKeywordPlanAdGroupKeywords].
export type MutateKeywordPlanAdGroupKeywordsRequest = {
  // Required. The ID of the customer whose Keyword Plan ad group keywords are being
  // modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual Keyword Plan ad group
  // keywords.
  //
  // Behaviors: REQUIRED
  operations: KeywordPlanAdGroupKeywordOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a Keyword Plan ad group keyword mutate.
export type MutateKeywordPlanAdGroupKeywordsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateKeywordPlanAdGroupKeywordResult[] | undefined;
};

// Service to manage Keyword Plan ad group keywords. KeywordPlanAdGroup is
// required to add ad group keywords. Positive and negative keywords are
// supported. A maximum of 10,000 positive keywords are allowed per keyword
// plan. A maximum of 1,000 negative keywords are allower per keyword plan. This
// includes campaign negative keywords and ad group negative keywords.
export interface KeywordPlanAdGroupKeywordService {
  // Returns the requested Keyword Plan ad group keyword in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetKeywordPlanAdGroupKeyword(request: GetKeywordPlanAdGroupKeywordRequest): Promise<googleadsgoogleadsv9resources_KeywordPlanAdGroupKeyword>;
  // Creates, updates, or removes Keyword Plan ad group keywords. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanAdGroupKeywordError]()
  // [KeywordPlanError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  MutateKeywordPlanAdGroupKeywords(request: MutateKeywordPlanAdGroupKeywordsRequest): Promise<MutateKeywordPlanAdGroupKeywordsResponse>;
}

export function createKeywordPlanAdGroupKeywordServiceClient(
  handler: RequestHandler
): KeywordPlanAdGroupKeywordService {
  return {
    GetKeywordPlanAdGroupKeyword(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordPlanAdGroupKeyword>;
    },
    MutateKeywordPlanAdGroupKeywords(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/keywordPlanAdGroupKeywords:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateKeywordPlanAdGroupKeywordsResponse>;
    },
  };
}
// Request message for [CustomAudienceService.GetCustomAudience][google.ads.googleads.v9.services.CustomAudienceService.GetCustomAudience].
export type GetCustomAudienceRequest = {
  // Required. The resource name of the custom audience to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CustomAudienceService.MutateCustomAudiences][google.ads.googleads.v9.services.CustomAudienceService.MutateCustomAudiences].
export type MutateCustomAudiencesRequest = {
  // Required. The ID of the customer whose custom audiences are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual custom audiences.
  //
  // Behaviors: REQUIRED
  operations: CustomAudienceOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation (create, update) on a custom audience.
export type CustomAudienceOperation = {
  // FieldMask that determines which resource fields are modified in an update.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: No resource name is expected for the new custom
  // audience.
  create?: googleadsgoogleadsv9resources_CustomAudience;
  // Update operation: The custom audience is expected to have a valid
  // resource name.
  update?: googleadsgoogleadsv9resources_CustomAudience;
  // Remove operation: A resource name for the removed custom audience is
  // expected, in this format:
  // `customers/{customer_id}/customAudiences/{custom_audience_id}`
  remove?: string;
};

// Response message for custom audience mutate.
export type MutateCustomAudiencesResponse = {
  // All results for the mutate.
  results: MutateCustomAudienceResult[] | undefined;
};

// The result for the custom audience mutate.
export type MutateCustomAudienceResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// Service to manage custom audiences.
export interface CustomAudienceService {
  // Returns the requested custom audience in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomAudience(request: GetCustomAudienceRequest): Promise<googleadsgoogleadsv9resources_CustomAudience>;
  // Creates or updates custom audiences. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CustomAudienceError]()
  // [CustomInterestError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [OperationAccessDeniedError]()
  // [PolicyViolationError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomAudiences(request: MutateCustomAudiencesRequest): Promise<MutateCustomAudiencesResponse>;
}

export function createCustomAudienceServiceClient(
  handler: RequestHandler
): CustomAudienceService {
  return {
    GetCustomAudience(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomAudience>;
    },
    MutateCustomAudiences(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customAudiences:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomAudiencesResponse>;
    },
  };
}
// Request message for
// [ThirdPartyAppAnalyticsLinkService.GetThirdPartyAppAnalyticsLink][google.ads.googleads.v9.services.ThirdPartyAppAnalyticsLinkService.GetThirdPartyAppAnalyticsLink].
export type GetThirdPartyAppAnalyticsLinkRequest = {
  // Resource name of the third party app analytics link.
  resourceName: string | undefined;
};

// Request message for
// [ThirdPartyAppAnalyticsLinkService.RegenerateShareableLinkId][google.ads.googleads.v9.services.ThirdPartyAppAnalyticsLinkService.RegenerateShareableLinkId].
export type RegenerateShareableLinkIdRequest = {
  // Resource name of the third party app analytics link.
  resourceName: string | undefined;
};

// Response message for
// [ThirdPartyAppAnalyticsLinkService.RegenerateShareableLinkId][google.ads.googleads.v9.services.ThirdPartyAppAnalyticsLinkService.RegenerateShareableLinkId].
export type RegenerateShareableLinkIdResponse = {
};

// This service allows management of links between Google Ads and third party
// app analytics.
export interface ThirdPartyAppAnalyticsLinkService {
  // Returns the third party app analytics link in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetThirdPartyAppAnalyticsLink(request: GetThirdPartyAppAnalyticsLinkRequest): Promise<googleadsgoogleadsv9resources_ThirdPartyAppAnalyticsLink>;
  // Regenerate ThirdPartyAppAnalyticsLink.shareable_link_id that should be
  // provided to the third party when setting up app analytics.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  RegenerateShareableLinkId(request: RegenerateShareableLinkIdRequest): Promise<RegenerateShareableLinkIdResponse>;
}

export function createThirdPartyAppAnalyticsLinkServiceClient(
  handler: RequestHandler
): ThirdPartyAppAnalyticsLinkService {
  return {
    GetThirdPartyAppAnalyticsLink(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ThirdPartyAppAnalyticsLink>;
    },
    RegenerateShareableLinkId(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}:regenerateShareableLinkId`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<RegenerateShareableLinkIdResponse>;
    },
  };
}
// Request message for [GoogleAdsFieldService.GetGoogleAdsField][google.ads.googleads.v9.services.GoogleAdsFieldService.GetGoogleAdsField].
export type GetGoogleAdsFieldRequest = {
  // Required. The resource name of the field to get.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [GoogleAdsFieldService.SearchGoogleAdsFields][google.ads.googleads.v9.services.GoogleAdsFieldService.SearchGoogleAdsFields].
export type SearchGoogleAdsFieldsRequest = {
  // Required. The query string.
  //
  // Behaviors: REQUIRED
  query: string | undefined;
  // Token of the page to retrieve. If not specified, the first page of
  // results will be returned. Use the value obtained from `next_page_token`
  // in the previous response in order to request the next page of results.
  pageToken: string | undefined;
  // Number of elements to retrieve in a single page.
  // When too large a page is requested, the server may decide to further
  // limit the number of returned resources.
  pageSize: number | undefined;
};

// Response message for [GoogleAdsFieldService.SearchGoogleAdsFields][google.ads.googleads.v9.services.GoogleAdsFieldService.SearchGoogleAdsFields].
export type SearchGoogleAdsFieldsResponse = {
  // The list of fields that matched the query.
  results: googleadsgoogleadsv9resources_GoogleAdsField[] | undefined;
  // Pagination token used to retrieve the next page of results. Pass the
  // content of this string as the `page_token` attribute of the next request.
  // `next_page_token` is not returned for the last page.
  nextPageToken: string | undefined;
  // Total number of results that match the query ignoring the LIMIT clause.
  totalResultsCount: number | undefined;
};

// A field or resource (artifact) used by GoogleAdsService.
export type googleadsgoogleadsv9resources_GoogleAdsField = {
  // Output only. The resource name of the artifact.
  // Artifact resource names have the form:
  // `googleAdsFields/{name}`
  //
  // Behaviors: OUTPUT_ONLY
  resourceName: string | undefined;
  // Output only. The name of the artifact.
  //
  // Behaviors: OUTPUT_ONLY
  name?: string;
  // Output only. The category of the artifact.
  //
  // Behaviors: OUTPUT_ONLY
  category: googleadsgoogleadsv9enums_GoogleAdsFieldCategoryEnum_GoogleAdsFieldCategory | undefined;
  // Output only. Whether the artifact can be used in a SELECT clause in search
  // queries.
  //
  // Behaviors: OUTPUT_ONLY
  selectable?: boolean;
  // Output only. Whether the artifact can be used in a WHERE clause in search
  // queries.
  //
  // Behaviors: OUTPUT_ONLY
  filterable?: boolean;
  // Output only. Whether the artifact can be used in a ORDER BY clause in search
  // queries.
  //
  // Behaviors: OUTPUT_ONLY
  sortable?: boolean;
  // Output only. The names of all resources, segments, and metrics that are selectable with
  // the described artifact.
  //
  // Behaviors: OUTPUT_ONLY
  selectableWith: string[] | undefined;
  // Output only. The names of all resources that are selectable with the described
  // artifact. Fields from these resources do not segment metrics when included
  // in search queries.
  // This field is only set for artifacts whose category is RESOURCE.
  //
  // Behaviors: OUTPUT_ONLY
  attributeResources: string[] | undefined;
  // Output only. This field lists the names of all metrics that are selectable with the
  // described artifact when it is used in the FROM clause.
  // It is only set for artifacts whose category is RESOURCE.
  //
  // Behaviors: OUTPUT_ONLY
  metrics: string[] | undefined;
  // Output only. This field lists the names of all artifacts, whether a segment or another
  // resource, that segment metrics when included in search queries and when the
  // described artifact is used in the FROM clause. It is only set for artifacts
  // whose category is RESOURCE.
  //
  // Behaviors: OUTPUT_ONLY
  segments: string[] | undefined;
  // Output only. Values the artifact can assume if it is a field of type ENUM.
  // This field is only set for artifacts of category SEGMENT or ATTRIBUTE.
  //
  // Behaviors: OUTPUT_ONLY
  enumValues: string[] | undefined;
  // Output only. This field determines the operators that can be used with the artifact
  // in WHERE clauses.
  //
  // Behaviors: OUTPUT_ONLY
  dataType: googleadsgoogleadsv9enums_GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType | undefined;
  // Output only. The URL of proto describing the artifact's data type.
  //
  // Behaviors: OUTPUT_ONLY
  typeUrl?: string;
  // Output only. Whether the field artifact is repeated.
  //
  // Behaviors: OUTPUT_ONLY
  isRepeated?: boolean;
};

// The category of the artifact.
export type googleadsgoogleadsv9enums_GoogleAdsFieldCategoryEnum_GoogleAdsFieldCategory =
  // Unspecified
  | "UNSPECIFIED"
  // Unknown
  | "UNKNOWN"
  // The described artifact is a resource.
  | "RESOURCE"
  // The described artifact is a field and is an attribute of a resource.
  // Including a resource attribute field in a query may segment the query if
  // the resource to which it is attributed segments the resource found in
  // the FROM clause.
  | "ATTRIBUTE"
  // The described artifact is a field and always segments search queries.
  | "SEGMENT"
  // The described artifact is a field and is a metric. It never segments
  // search queries.
  | "METRIC";
// These are the various types a GoogleAdsService artifact may take on.
export type googleadsgoogleadsv9enums_GoogleAdsFieldDataTypeEnum_GoogleAdsFieldDataType =
  // Unspecified
  | "UNSPECIFIED"
  // Unknown
  | "UNKNOWN"
  // Maps to google.protobuf.BoolValue
  // Applicable operators:  =, !=
  | "BOOLEAN"
  // Maps to google.protobuf.StringValue. It can be compared using the set of
  // operators specific to dates however.
  // Applicable operators:  =, <, >, <=, >=, BETWEEN, DURING, and IN
  | "DATE"
  // Maps to google.protobuf.DoubleValue
  // Applicable operators:  =, !=, <, >, IN, NOT IN
  | "DOUBLE"
  // Maps to an enum. It's specific definition can be found at type_url.
  // Applicable operators:  =, !=, IN, NOT IN
  | "ENUM"
  // Maps to google.protobuf.FloatValue
  // Applicable operators:  =, !=, <, >, IN, NOT IN
  | "FLOAT"
  // Maps to google.protobuf.Int32Value
  // Applicable operators:  =, !=, <, >, <=, >=, BETWEEN, IN, NOT IN
  | "INT32"
  // Maps to google.protobuf.Int64Value
  // Applicable operators:  =, !=, <, >, <=, >=, BETWEEN, IN, NOT IN
  | "INT64"
  // Maps to a protocol buffer message type. The data type's details can be
  // found in type_url.
  // No operators work with MESSAGE fields.
  | "MESSAGE"
  // Maps to google.protobuf.StringValue. Represents the resource name
  // (unique id) of a resource or one of its foreign keys.
  // No operators work with RESOURCE_NAME fields.
  | "RESOURCE_NAME"
  // Maps to google.protobuf.StringValue.
  // Applicable operators:  =, !=, LIKE, NOT LIKE, IN, NOT IN
  | "STRING"
  // Maps to google.protobuf.UInt64Value
  // Applicable operators:  =, !=, <, >, <=, >=, BETWEEN, IN, NOT IN
  | "UINT64";
// Service to fetch Google Ads API fields.
export interface GoogleAdsFieldService {
  // Returns just the requested field.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetGoogleAdsField(request: GetGoogleAdsFieldRequest): Promise<googleadsgoogleadsv9resources_GoogleAdsField>;
  // Returns all fields that match the search query.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QueryError]()
  // [QuotaError]()
  // [RequestError]()
  SearchGoogleAdsFields(request: SearchGoogleAdsFieldsRequest): Promise<SearchGoogleAdsFieldsResponse>;
}

export function createGoogleAdsFieldServiceClient(
  handler: RequestHandler
): GoogleAdsFieldService {
  return {
    GetGoogleAdsField(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_GoogleAdsField>;
    },
    SearchGoogleAdsFields(request) {
      const path = `v9/googleAdsFields:search`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<SearchGoogleAdsFieldsResponse>;
    },
  };
}
// Request message for [CampaignAssetService.GetCampaignAsset][google.ads.googleads.v9.services.CampaignAssetService.GetCampaignAsset].
export type GetCampaignAssetRequest = {
  // Required. The resource name of the campaign asset to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignAssetService.MutateCampaignAssets][google.ads.googleads.v9.services.CampaignAssetService.MutateCampaignAssets].
export type MutateCampaignAssetsRequest = {
  // Required. The ID of the customer whose campaign assets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign assets.
  //
  // Behaviors: REQUIRED
  operations: CampaignAssetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for a campaign asset mutate.
export type MutateCampaignAssetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignAssetResult[] | undefined;
};

// Service to manage campaign assets.
export interface CampaignAssetService {
  // Returns the requested campaign asset in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignAsset(request: GetCampaignAssetRequest): Promise<googleadsgoogleadsv9resources_CampaignAsset>;
  // Creates, updates, or removes campaign assets. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AssetLinkError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [ContextError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [NotAllowlistedError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCampaignAssets(request: MutateCampaignAssetsRequest): Promise<MutateCampaignAssetsResponse>;
}

export function createCampaignAssetServiceClient(
  handler: RequestHandler
): CampaignAssetService {
  return {
    GetCampaignAsset(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignAsset>;
    },
    MutateCampaignAssets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignAssets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignAssetsResponse>;
    },
  };
}
// Request message for [KeywordPlanService.GetKeywordPlan][google.ads.googleads.v9.services.KeywordPlanService.GetKeywordPlan].
export type GetKeywordPlanRequest = {
  // Required. The resource name of the plan to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [KeywordPlanService.MutateKeywordPlans][google.ads.googleads.v9.services.KeywordPlanService.MutateKeywordPlans].
export type MutateKeywordPlansRequest = {
  // Required. The ID of the customer whose keyword plans are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual keyword plans.
  //
  // Behaviors: REQUIRED
  operations: KeywordPlanOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a keyword plan mutate.
export type MutateKeywordPlansResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateKeywordPlansResult[] | undefined;
};

// Request message for [KeywordPlanService.GenerateForecastCurve][google.ads.googleads.v9.services.KeywordPlanService.GenerateForecastCurve].
export type GenerateForecastCurveRequest = {
  // Required. The resource name of the keyword plan to be forecasted.
  //
  // Behaviors: REQUIRED
  keywordPlan: string | undefined;
};

// Response message for [KeywordPlanService.GenerateForecastCurve][google.ads.googleads.v9.services.KeywordPlanService.GenerateForecastCurve].
export type GenerateForecastCurveResponse = {
  // List of forecast curves for the keyword plan campaign.
  // One maximum.
  campaignForecastCurves: KeywordPlanCampaignForecastCurve[] | undefined;
};

// The forecast curve for the campaign.
export type KeywordPlanCampaignForecastCurve = {
  // The resource name of the Keyword Plan campaign related to the forecast.
  // `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}`
  keywordPlanCampaign?: string;
  // The max cpc bid forecast curve for the campaign.
  maxCpcBidForecastCurve: KeywordPlanMaxCpcBidForecastCurve | undefined;
};

// The max cpc bid forecast curve.
export type KeywordPlanMaxCpcBidForecastCurve = {
  // The forecasts for the Keyword Plan campaign at different max CPC bids.
  maxCpcBidForecasts: KeywordPlanMaxCpcBidForecast[] | undefined;
};

// The forecast of the campaign at a specific bid.
export type KeywordPlanMaxCpcBidForecast = {
  // The max cpc bid in micros.
  maxCpcBidMicros?: number;
  // The forecast for the Keyword Plan campaign at the specific bid.
  maxCpcBidForecast: ForecastMetrics | undefined;
};

// Forecast metrics.
export type ForecastMetrics = {
  // Impressions
  impressions?: number;
  // Ctr
  ctr?: number;
  // AVG cpc
  averageCpc?: number;
  // Clicks
  clicks?: number;
  // Cost
  costMicros?: number;
};

// Request message for [KeywordPlanService.GenerateForecastTimeSeries][google.ads.googleads.v9.services.KeywordPlanService.GenerateForecastTimeSeries].
export type GenerateForecastTimeSeriesRequest = {
  // Required. The resource name of the keyword plan to be forecasted.
  //
  // Behaviors: REQUIRED
  keywordPlan: string | undefined;
};

// Response message for [KeywordPlanService.GenerateForecastTimeSeries][google.ads.googleads.v9.services.KeywordPlanService.GenerateForecastTimeSeries].
export type GenerateForecastTimeSeriesResponse = {
  // List of weekly time series forecasts for the keyword plan campaign.
  // One maximum.
  weeklyTimeSeriesForecasts: KeywordPlanWeeklyTimeSeriesForecast[] | undefined;
};

// The weekly time series forecast for the keyword plan campaign.
export type KeywordPlanWeeklyTimeSeriesForecast = {
  // The resource name of the Keyword Plan campaign related to the forecast.
  // `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}`
  keywordPlanCampaign?: string;
  // The forecasts for the Keyword Plan campaign at different max CPC bids.
  weeklyForecasts: KeywordPlanWeeklyForecast[] | undefined;
};

// The forecast of the campaign for the week starting start_date.
export type KeywordPlanWeeklyForecast = {
  // The start date, in yyyy-mm-dd format. This date is inclusive.
  startDate?: string;
  // The forecast for the Keyword Plan campaign for the week.
  forecast: ForecastMetrics | undefined;
};

// Request message for [KeywordPlanService.GenerateForecastMetrics][google.ads.googleads.v9.services.KeywordPlanService.GenerateForecastMetrics].
export type GenerateForecastMetricsRequest = {
  // Required. The resource name of the keyword plan to be forecasted.
  //
  // Behaviors: REQUIRED
  keywordPlan: string | undefined;
};

// Response message for [KeywordPlanService.GenerateForecastMetrics][google.ads.googleads.v9.services.KeywordPlanService.GenerateForecastMetrics].
export type GenerateForecastMetricsResponse = {
  // List of campaign forecasts.
  // One maximum.
  campaignForecasts: KeywordPlanCampaignForecast[] | undefined;
  // List of ad group forecasts.
  adGroupForecasts: KeywordPlanAdGroupForecast[] | undefined;
  // List of keyword forecasts.
  keywordForecasts: KeywordPlanKeywordForecast[] | undefined;
};

// A campaign forecast.
export type KeywordPlanCampaignForecast = {
  // The resource name of the Keyword Plan campaign related to the forecast.
  // `customers/{customer_id}/keywordPlanCampaigns/{keyword_plan_campaign_id}`
  keywordPlanCampaign?: string;
  // The forecast for the Keyword Plan campaign.
  campaignForecast: ForecastMetrics | undefined;
};

// An ad group forecast.
export type KeywordPlanAdGroupForecast = {
  // The resource name of the Keyword Plan ad group related to the forecast.
  // `customers/{customer_id}/keywordPlanAdGroups/{keyword_plan_ad_group_id}`
  keywordPlanAdGroup?: string;
  // The forecast for the Keyword Plan ad group.
  adGroupForecast: ForecastMetrics | undefined;
};

// A keyword forecast.
export type KeywordPlanKeywordForecast = {
  // The resource name of the Keyword Plan keyword related to the forecast.
  // `customers/{customer_id}/keywordPlanAdGroupKeywords/{keyword_plan_ad_group_keyword_id}`
  keywordPlanAdGroupKeyword?: string;
  // The forecast for the Keyword Plan keyword.
  keywordForecast: ForecastMetrics | undefined;
};

// Request message for [KeywordPlanService.GenerateHistoricalMetrics][google.ads.googleads.v9.services.KeywordPlanService.GenerateHistoricalMetrics].
export type GenerateHistoricalMetricsRequest = {
  // Required. The resource name of the keyword plan of which historical metrics are
  // requested.
  //
  // Behaviors: REQUIRED
  keywordPlan: string | undefined;
  // The aggregate fields to include in response.
  aggregateMetrics: googleadsgoogleadsv9common_KeywordPlanAggregateMetrics | undefined;
  // The options for historical metrics data.
  historicalMetricsOptions: googleadsgoogleadsv9common_HistoricalMetricsOptions | undefined;
};

// Response message for [KeywordPlanService.GenerateHistoricalMetrics][google.ads.googleads.v9.services.KeywordPlanService.GenerateHistoricalMetrics].
export type GenerateHistoricalMetricsResponse = {
  // List of keyword historical metrics.
  metrics: KeywordPlanKeywordHistoricalMetrics[] | undefined;
  // The aggregate metrics for all the keywords in the keyword planner plan.
  aggregateMetricResults: googleadsgoogleadsv9common_KeywordPlanAggregateMetricResults | undefined;
};

// A keyword historical metrics.
export type KeywordPlanKeywordHistoricalMetrics = {
  // The text of the query associated with one or more ad_group_keywords in the
  // plan.
  // Note that we de-dupe your keywords list, eliminating close variants before
  // returning the plan's keywords as text. For example, if your plan originally
  // contained the keywords 'car' and 'cars', the returned search query will
  // only contain 'cars'.
  // Starting V5, the list of de-duped queries will be included in
  // close_variants field.
  searchQuery?: string;
  // The list of close variant queries for search_query whose search results
  // are combined into the search_query.
  closeVariants: string[] | undefined;
  // The historical metrics for the query associated with one or more
  // ad_group_keywords in the plan.
  keywordMetrics: googleadsgoogleadsv9common_KeywordPlanHistoricalMetrics | undefined;
};

// Service to manage keyword plans.
export interface KeywordPlanService {
  // Returns the requested plan in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetKeywordPlan(request: GetKeywordPlanRequest): Promise<googleadsgoogleadsv9resources_KeywordPlan>;
  // Creates, updates, or removes keyword plans. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [QuotaError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [StringLengthError]()
  MutateKeywordPlans(request: MutateKeywordPlansRequest): Promise<MutateKeywordPlansResponse>;
  // Returns the requested Keyword Plan forecast curve.
  // Only the bidding strategy is considered for generating forecast curve.
  // The bidding strategy value specified in the plan is ignored.
  // To generate a forecast at a value specified in the plan, use
  // KeywordPlanService.GenerateForecastMetrics.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanError]()
  // [QuotaError]()
  // [RequestError]()
  GenerateForecastCurve(request: GenerateForecastCurveRequest): Promise<GenerateForecastCurveResponse>;
  // Returns a forecast in the form of a time series for the Keyword Plan over
  // the next 52 weeks.
  // (1) Forecasts closer to the current date are generally more accurate than
  // further out.
  // (2) The forecast reflects seasonal trends using current and
  // prior traffic patterns. The forecast period of the plan is ignored.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanError]()
  // [QuotaError]()
  // [RequestError]()
  GenerateForecastTimeSeries(request: GenerateForecastTimeSeriesRequest): Promise<GenerateForecastTimeSeriesResponse>;
  // Returns the requested Keyword Plan forecasts.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanError]()
  // [QuotaError]()
  // [RequestError]()
  GenerateForecastMetrics(request: GenerateForecastMetricsRequest): Promise<GenerateForecastMetricsResponse>;
  // Returns the requested Keyword Plan historical metrics.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanError]()
  // [QuotaError]()
  // [RequestError]()
  GenerateHistoricalMetrics(request: GenerateHistoricalMetricsRequest): Promise<GenerateHistoricalMetricsResponse>;
}

export function createKeywordPlanServiceClient(
  handler: RequestHandler
): KeywordPlanService {
  return {
    GetKeywordPlan(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordPlan>;
    },
    MutateKeywordPlans(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/keywordPlans:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateKeywordPlansResponse>;
    },
    GenerateForecastCurve(request) {
      if (!request.keywordPlan) {
        throw new Error("missing required field request.keyword_plan");
      }
      const path = `v9/${request.keywordPlan}:generateForecastCurve`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateForecastCurveResponse>;
    },
    GenerateForecastTimeSeries(request) {
      if (!request.keywordPlan) {
        throw new Error("missing required field request.keyword_plan");
      }
      const path = `v9/${request.keywordPlan}:generateForecastTimeSeries`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateForecastTimeSeriesResponse>;
    },
    GenerateForecastMetrics(request) {
      if (!request.keywordPlan) {
        throw new Error("missing required field request.keyword_plan");
      }
      const path = `v9/${request.keywordPlan}:generateForecastMetrics`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateForecastMetricsResponse>;
    },
    GenerateHistoricalMetrics(request) {
      if (!request.keywordPlan) {
        throw new Error("missing required field request.keyword_plan");
      }
      const path = `v9/${request.keywordPlan}:generateHistoricalMetrics`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<GenerateHistoricalMetricsResponse>;
    },
  };
}
// Request message for [FeedItemService.GetFeedItem][google.ads.googleads.v9.services.FeedItemService.GetFeedItem].
export type GetFeedItemRequest = {
  // Required. The resource name of the feed item to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [FeedItemService.MutateFeedItems][google.ads.googleads.v9.services.FeedItemService.MutateFeedItems].
export type MutateFeedItemsRequest = {
  // Required. The ID of the customer whose feed items are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual feed items.
  //
  // Behaviors: REQUIRED
  operations: FeedItemOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an feed item mutate.
export type MutateFeedItemsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateFeedItemResult[] | undefined;
};

// Service to manage feed items.
export interface FeedItemService {
  // Returns the requested feed item in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetFeedItem(request: GetFeedItemRequest): Promise<googleadsgoogleadsv9resources_FeedItem>;
  // Creates, updates, or removes feed items. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FeedItemError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MutateError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateFeedItems(request: MutateFeedItemsRequest): Promise<MutateFeedItemsResponse>;
}

export function createFeedItemServiceClient(
  handler: RequestHandler
): FeedItemService {
  return {
    GetFeedItem(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_FeedItem>;
    },
    MutateFeedItems(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/feedItems:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateFeedItemsResponse>;
    },
  };
}
// Request message for
// [SmartCampaignSearchTermViewService.GetSmartCampaignSearchTermView][google.ads.googleads.v9.services.SmartCampaignSearchTermViewService.GetSmartCampaignSearchTermView].
export type GetSmartCampaignSearchTermViewRequest = {
  // Required. The resource name of the Smart campaign search term view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage Smart campaign search term views.
export interface SmartCampaignSearchTermViewService {
  // Returns the attributes of the requested Smart campaign search term view.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetSmartCampaignSearchTermView(request: GetSmartCampaignSearchTermViewRequest): Promise<googleadsgoogleadsv9resources_SmartCampaignSearchTermView>;
}

export function createSmartCampaignSearchTermViewServiceClient(
  handler: RequestHandler
): SmartCampaignSearchTermViewService {
  return {
    GetSmartCampaignSearchTermView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_SmartCampaignSearchTermView>;
    },
  };
}
// Request message for [AdGroupAdService.GetAdGroupAd][google.ads.googleads.v9.services.AdGroupAdService.GetAdGroupAd].
export type GetAdGroupAdRequest = {
  // Required. The resource name of the ad to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [AdGroupAdService.MutateAdGroupAds][google.ads.googleads.v9.services.AdGroupAdService.MutateAdGroupAds].
export type MutateAdGroupAdsRequest = {
  // Required. The ID of the customer whose ads are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual ads.
  //
  // Behaviors: REQUIRED
  operations: AdGroupAdOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for an ad group ad mutate.
export type MutateAdGroupAdsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupAdResult[] | undefined;
};

// Service to manage ads in an ad group.
export interface AdGroupAdService {
  // Returns the requested ad in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupAd(request: GetAdGroupAdRequest): Promise<googleadsgoogleadsv9resources_AdGroupAd>;
  // Creates, updates, or removes ads. Operation statuses are returned.
  // List of thrown errors:
  // [AdCustomizerError]()
  // [AdError]()
  // [AdGroupAdError]()
  // [AdSharingError]()
  // [AdxError]()
  // [AssetError]()
  // [AssetLinkError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CollectionSizeError]()
  // [ContextError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FeedAttributeReferenceError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [FunctionError]()
  // [FunctionParsingError]()
  // [HeaderError]()
  // [IdError]()
  // [ImageError]()
  // [InternalError]()
  // [ListOperationError]()
  // [MediaBundleError]()
  // [MediaFileError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [PolicyFindingError]()
  // [PolicyValidationParameterError]()
  // [PolicyViolationError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  // [UrlFieldError]()
  MutateAdGroupAds(request: MutateAdGroupAdsRequest): Promise<MutateAdGroupAdsResponse>;
}

export function createAdGroupAdServiceClient(
  handler: RequestHandler
): AdGroupAdService {
  return {
    GetAdGroupAd(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupAd>;
    },
    MutateAdGroupAds(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupAds:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupAdsResponse>;
    },
  };
}
// Request message for
// [MobileAppCategoryConstantService.GetMobileAppCategoryConstant][google.ads.googleads.v9.services.MobileAppCategoryConstantService.GetMobileAppCategoryConstant].
export type GetMobileAppCategoryConstantRequest = {
  // Required. Resource name of the mobile app category constant to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch mobile app category constants.
export interface MobileAppCategoryConstantService {
  // Returns the requested mobile app category constant.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetMobileAppCategoryConstant(request: GetMobileAppCategoryConstantRequest): Promise<googleadsgoogleadsv9resources_MobileAppCategoryConstant>;
}

export function createMobileAppCategoryConstantServiceClient(
  handler: RequestHandler
): MobileAppCategoryConstantService {
  return {
    GetMobileAppCategoryConstant(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_MobileAppCategoryConstant>;
    },
  };
}
// Request message for
// [CustomerNegativeCriterionService.GetCustomerNegativeCriterion][google.ads.googleads.v9.services.CustomerNegativeCriterionService.GetCustomerNegativeCriterion].
export type GetCustomerNegativeCriterionRequest = {
  // Required. The resource name of the criterion to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [CustomerNegativeCriterionService.MutateCustomerNegativeCriteria][google.ads.googleads.v9.services.CustomerNegativeCriterionService.MutateCustomerNegativeCriteria].
export type MutateCustomerNegativeCriteriaRequest = {
  // Required. The ID of the customer whose criteria are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual criteria.
  //
  // Behaviors: REQUIRED
  operations: CustomerNegativeCriterionOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for customer negative criterion mutate.
export type MutateCustomerNegativeCriteriaResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCustomerNegativeCriteriaResult[] | undefined;
};

// Service to manage customer negative criteria.
export interface CustomerNegativeCriterionService {
  // Returns the requested criterion in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCustomerNegativeCriterion(request: GetCustomerNegativeCriterionRequest): Promise<googleadsgoogleadsv9resources_CustomerNegativeCriterion>;
  // Creates or removes criteria. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CriterionError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  MutateCustomerNegativeCriteria(request: MutateCustomerNegativeCriteriaRequest): Promise<MutateCustomerNegativeCriteriaResponse>;
}

export function createCustomerNegativeCriterionServiceClient(
  handler: RequestHandler
): CustomerNegativeCriterionService {
  return {
    GetCustomerNegativeCriterion(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CustomerNegativeCriterion>;
    },
    MutateCustomerNegativeCriteria(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/customerNegativeCriteria:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCustomerNegativeCriteriaResponse>;
    },
  };
}
// Request message for
// [AccountBudgetProposalService.GetAccountBudgetProposal][google.ads.googleads.v9.services.AccountBudgetProposalService.GetAccountBudgetProposal].
export type GetAccountBudgetProposalRequest = {
  // Required. The resource name of the account-level budget proposal to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [AccountBudgetProposalService.MutateAccountBudgetProposal][google.ads.googleads.v9.services.AccountBudgetProposalService.MutateAccountBudgetProposal].
export type MutateAccountBudgetProposalRequest = {
  // Required. The ID of the customer.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The operation to perform on an individual account-level budget proposal.
  //
  // Behaviors: REQUIRED
  operation: AccountBudgetProposalOperation | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A single operation to propose the creation of a new account-level budget or
// edit/end/remove an existing one.
export type AccountBudgetProposalOperation = {
  // FieldMask that determines which budget fields are modified.  While budgets
  // may be modified, proposals that propose such modifications are final.
  // Therefore, update operations are not supported for proposals.
  // Proposals that modify budgets have the 'update' proposal type.  Specifying
  // a mask for any other proposal type is considered an error.
  updateMask: wellKnownFieldMask | undefined;
  // Create operation: A new proposal to create a new budget, edit an
  // existing budget, end an actively running budget, or remove an approved
  // budget scheduled to start in the future.
  // No resource name is expected for the new proposal.
  create?: googleadsgoogleadsv9resources_AccountBudgetProposal;
  // Remove operation: A resource name for the removed proposal is expected,
  // in this format:
  // `customers/{customer_id}/accountBudgetProposals/{account_budget_proposal_id}`
  // A request may be cancelled iff it is pending.
  remove?: string;
};

// Response message for account-level budget mutate operations.
export type MutateAccountBudgetProposalResponse = {
  // The result of the mutate.
  result: MutateAccountBudgetProposalResult | undefined;
};

// The result for the account budget proposal mutate.
export type MutateAccountBudgetProposalResult = {
  // Returned for successful operations.
  resourceName: string | undefined;
};

// A service for managing account-level budgets via proposals.
// A proposal is a request to create a new budget or make changes to an
// existing one.
// Reads for account-level budgets managed by these proposals will be
// supported in a future version. Until then, please use the
// BudgetOrderService from the AdWords API. Learn more at
// https://developers.google.com/adwords/api/docs/guides/budget-order
// Mutates:
// The CREATE operation creates a new proposal.
// UPDATE operations aren't supported.
// The REMOVE operation cancels a pending proposal.
export interface AccountBudgetProposalService {
  // Returns an account-level budget proposal in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAccountBudgetProposal(request: GetAccountBudgetProposalRequest): Promise<googleadsgoogleadsv9resources_AccountBudgetProposal>;
  // Creates, updates, or removes account budget proposals.  Operation statuses
  // are returned.
  // List of thrown errors:
  // [AccountBudgetProposalError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [DateError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [QuotaError]()
  // [RequestError]()
  // [StringLengthError]()
  MutateAccountBudgetProposal(request: MutateAccountBudgetProposalRequest): Promise<MutateAccountBudgetProposalResponse>;
}

export function createAccountBudgetProposalServiceClient(
  handler: RequestHandler
): AccountBudgetProposalService {
  return {
    GetAccountBudgetProposal(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AccountBudgetProposal>;
    },
    MutateAccountBudgetProposal(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/accountBudgetProposals:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAccountBudgetProposalResponse>;
    },
  };
}
// Request message for [BiddingStrategyService.GetBiddingStrategy][google.ads.googleads.v9.services.BiddingStrategyService.GetBiddingStrategy].
export type GetBiddingStrategyRequest = {
  // Required. The resource name of the bidding strategy to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [BiddingStrategyService.MutateBiddingStrategies][google.ads.googleads.v9.services.BiddingStrategyService.MutateBiddingStrategies].
export type MutateBiddingStrategiesRequest = {
  // Required. The ID of the customer whose bidding strategies are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual bidding strategies.
  //
  // Behaviors: REQUIRED
  operations: BiddingStrategyOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for bidding strategy mutate.
export type MutateBiddingStrategiesResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateBiddingStrategyResult[] | undefined;
};

// Service to manage bidding strategies.
export interface BiddingStrategyService {
  // Returns the requested bidding strategy in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetBiddingStrategy(request: GetBiddingStrategyRequest): Promise<googleadsgoogleadsv9resources_BiddingStrategy>;
  // Creates, updates, or removes bidding strategies. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AdxError]()
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [BiddingError]()
  // [BiddingStrategyError]()
  // [ContextError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperationAccessDeniedError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateBiddingStrategies(request: MutateBiddingStrategiesRequest): Promise<MutateBiddingStrategiesResponse>;
}

export function createBiddingStrategyServiceClient(
  handler: RequestHandler
): BiddingStrategyService {
  return {
    GetBiddingStrategy(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_BiddingStrategy>;
    },
    MutateBiddingStrategies(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/biddingStrategies:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateBiddingStrategiesResponse>;
    },
  };
}
// Request message for [CampaignBudgetService.GetCampaignBudget][google.ads.googleads.v9.services.CampaignBudgetService.GetCampaignBudget].
export type GetCampaignBudgetRequest = {
  // Required. The resource name of the campaign budget to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [CampaignBudgetService.MutateCampaignBudgets][google.ads.googleads.v9.services.CampaignBudgetService.MutateCampaignBudgets].
export type MutateCampaignBudgetsRequest = {
  // Required. The ID of the customer whose campaign budgets are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign budgets.
  //
  // Behaviors: REQUIRED
  operations: CampaignBudgetOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for campaign budget mutate.
export type MutateCampaignBudgetsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateCampaignBudgetResult[] | undefined;
};

// Service to manage campaign budgets.
export interface CampaignBudgetService {
  // Returns the requested Campaign Budget in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetCampaignBudget(request: GetCampaignBudgetRequest): Promise<googleadsgoogleadsv9resources_CampaignBudget>;
  // Creates, updates, or removes campaign budgets. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [CampaignBudgetError]()
  // [DatabaseError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [OperationAccessDeniedError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [StringLengthError]()
  MutateCampaignBudgets(request: MutateCampaignBudgetsRequest): Promise<MutateCampaignBudgetsResponse>;
}

export function createCampaignBudgetServiceClient(
  handler: RequestHandler
): CampaignBudgetService {
  return {
    GetCampaignBudget(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignBudget>;
    },
    MutateCampaignBudgets(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignBudgets:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignBudgetsResponse>;
    },
  };
}
// Request message for [AdGroupAudienceViewService.GetAdGroupAudienceView][google.ads.googleads.v9.services.AdGroupAudienceViewService.GetAdGroupAudienceView].
export type GetAdGroupAudienceViewRequest = {
  // Required. The resource name of the ad group audience view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage ad group audience views.
export interface AdGroupAudienceViewService {
  // Returns the requested ad group audience view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupAudienceView(request: GetAdGroupAudienceViewRequest): Promise<googleadsgoogleadsv9resources_AdGroupAudienceView>;
}

export function createAdGroupAudienceViewServiceClient(
  handler: RequestHandler
): AdGroupAudienceViewService {
  return {
    GetAdGroupAudienceView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupAudienceView>;
    },
  };
}
// Request message for
// [AdGroupCriterionLabelService.GetAdGroupCriterionLabel][google.ads.googleads.v9.services.AdGroupCriterionLabelService.GetAdGroupCriterionLabel].
export type GetAdGroupCriterionLabelRequest = {
  // Required. The resource name of the ad group criterion label to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [AdGroupCriterionLabelService.MutateAdGroupCriterionLabels][google.ads.googleads.v9.services.AdGroupCriterionLabelService.MutateAdGroupCriterionLabels].
export type MutateAdGroupCriterionLabelsRequest = {
  // Required. ID of the customer whose ad group criterion labels are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on ad group criterion labels.
  //
  // Behaviors: REQUIRED
  operations: AdGroupCriterionLabelOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for an ad group criterion labels mutate.
export type MutateAdGroupCriterionLabelsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateAdGroupCriterionLabelResult[] | undefined;
};

// Service to manage labels on ad group criteria.
export interface AdGroupCriterionLabelService {
  // Returns the requested ad group criterion label in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupCriterionLabel(request: GetAdGroupCriterionLabelRequest): Promise<googleadsgoogleadsv9resources_AdGroupCriterionLabel>;
  // Creates and removes ad group criterion labels.
  // Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  MutateAdGroupCriterionLabels(request: MutateAdGroupCriterionLabelsRequest): Promise<MutateAdGroupCriterionLabelsResponse>;
}

export function createAdGroupCriterionLabelServiceClient(
  handler: RequestHandler
): AdGroupCriterionLabelService {
  return {
    GetAdGroupCriterionLabel(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupCriterionLabel>;
    },
    MutateAdGroupCriterionLabels(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/adGroupCriterionLabels:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateAdGroupCriterionLabelsResponse>;
    },
  };
}
// Request message for [SearchTermViewService.GetSearchTermView][google.ads.googleads.v9.services.SearchTermViewService.GetSearchTermView].
export type GetSearchTermViewRequest = {
  // Required. The resource name of the search term view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to manage search term views.
export interface SearchTermViewService {
  // Returns the attributes of the requested search term view.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetSearchTermView(request: GetSearchTermViewRequest): Promise<googleadsgoogleadsv9resources_SearchTermView>;
}

export function createSearchTermViewServiceClient(
  handler: RequestHandler
): SearchTermViewService {
  return {
    GetSearchTermView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_SearchTermView>;
    },
  };
}
// Request message for
// [CampaignConversionGoalService.MutateCampaignConversionGoals][google.ads.googleads.v9.services.CampaignConversionGoalService.MutateCampaignConversionGoals].
export type MutateCampaignConversionGoalsRequest = {
  // Required. The ID of the customer whose campaign conversion goals are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual campaign conversion goal.
  //
  // Behaviors: REQUIRED
  operations: CampaignConversionGoalOperation[] | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a campaign conversion goal mutate.
export type MutateCampaignConversionGoalsResponse = {
  // All results for the mutate.
  results: MutateCampaignConversionGoalResult[] | undefined;
};

// Service to manage campaign conversion goal.
export interface CampaignConversionGoalService {
  // Creates, updates or removes campaign conversion goals. Operation statuses
  // are returned.
  MutateCampaignConversionGoals(request: MutateCampaignConversionGoalsRequest): Promise<MutateCampaignConversionGoalsResponse>;
}

export function createCampaignConversionGoalServiceClient(
  handler: RequestHandler
): CampaignConversionGoalService {
  return {
    MutateCampaignConversionGoals(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/campaignConversionGoals:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateCampaignConversionGoalsResponse>;
    },
  };
}
// Request message for
// [ConversionValueRuleService.GetConversionValueRule][google.ads.googleads.v9.services.ConversionValueRuleService.GetConversionValueRule].
export type GetConversionValueRuleRequest = {
  // Required. The resource name of the conversion value rule to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [ConversionValueRuleService.MutateConversionValueRules][google.ads.googleads.v9.services.ConversionValueRuleService.MutateConversionValueRules].
export type MutateConversionValueRulesRequest = {
  // Required. The ID of the customer whose conversion value rules are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual conversion value rules.
  //
  // Behaviors: REQUIRED
  operations: ConversionValueRuleOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for
// [ConversionValueRuleService.MutateConversionValueRules][google.ads.googleads.v9.services.ConversionValueRuleService.MutateConversionValueRules].
export type MutateConversionValueRulesResponse = {
  // All results for the mutate.
  results: MutateConversionValueRuleResult[] | undefined;
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
};

// Service to manage conversion value rules.
export interface ConversionValueRuleService {
  // Returns the requested conversion value rule.
  GetConversionValueRule(request: GetConversionValueRuleRequest): Promise<googleadsgoogleadsv9resources_ConversionValueRule>;
  // Creates, updates, or removes conversion value rules. Operation statuses are
  // returned.
  MutateConversionValueRules(request: MutateConversionValueRulesRequest): Promise<MutateConversionValueRulesResponse>;
}

export function createConversionValueRuleServiceClient(
  handler: RequestHandler
): ConversionValueRuleService {
  return {
    GetConversionValueRule(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_ConversionValueRule>;
    },
    MutateConversionValueRules(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/conversionValueRules:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateConversionValueRulesResponse>;
    },
  };
}
// Request message for
// [KeywordPlanCampaignKeywordService.GetKeywordPlanCampaignKeyword][google.ads.googleads.v9.services.KeywordPlanCampaignKeywordService.GetKeywordPlanCampaignKeyword].
export type GetKeywordPlanCampaignKeywordRequest = {
  // Required. The resource name of the plan to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [KeywordPlanCampaignKeywordService.MutateKeywordPlanCampaignKeywords][google.ads.googleads.v9.services.KeywordPlanCampaignKeywordService.MutateKeywordPlanCampaignKeywords].
export type MutateKeywordPlanCampaignKeywordsRequest = {
  // Required. The ID of the customer whose campaign keywords are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual Keyword Plan campaign
  // keywords.
  //
  // Behaviors: REQUIRED
  operations: KeywordPlanCampaignKeywordOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a Keyword Plan campaign keyword mutate.
export type MutateKeywordPlanCampaignKeywordsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateKeywordPlanCampaignKeywordResult[] | undefined;
};

// Service to manage Keyword Plan campaign keywords. KeywordPlanCampaign is
// required to add the campaign keywords. Only negative keywords are supported.
// A maximum of 1000 negative keywords are allowed per plan. This includes both
// campaign negative keywords and ad group negative keywords.
export interface KeywordPlanCampaignKeywordService {
  // Returns the requested plan in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetKeywordPlanCampaignKeyword(request: GetKeywordPlanCampaignKeywordRequest): Promise<googleadsgoogleadsv9resources_KeywordPlanCampaignKeyword>;
  // Creates, updates, or removes Keyword Plan campaign keywords. Operation
  // statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanAdGroupKeywordError]()
  // [KeywordPlanCampaignKeywordError]()
  // [QuotaError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  MutateKeywordPlanCampaignKeywords(request: MutateKeywordPlanCampaignKeywordsRequest): Promise<MutateKeywordPlanCampaignKeywordsResponse>;
}

export function createKeywordPlanCampaignKeywordServiceClient(
  handler: RequestHandler
): KeywordPlanCampaignKeywordService {
  return {
    GetKeywordPlanCampaignKeyword(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordPlanCampaignKeyword>;
    },
    MutateKeywordPlanCampaignKeywords(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/keywordPlanCampaignKeywords:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateKeywordPlanCampaignKeywordsResponse>;
    },
  };
}
// Request message for
// [ConversionAdjustmentUploadService.UploadConversionAdjustments][google.ads.googleads.v9.services.ConversionAdjustmentUploadService.UploadConversionAdjustments].
export type UploadConversionAdjustmentsRequest = {
  // Required. The ID of the customer performing the upload.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The conversion adjustments that are being uploaded.
  //
  // Behaviors: REQUIRED
  conversionAdjustments: ConversionAdjustment[] | undefined;
  // Required. If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried out
  // in one transaction if and only if they are all valid. This should always be
  // set to true.
  // See
  // https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
  // for more information about partial failure.
  //
  // Behaviors: REQUIRED
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// A conversion adjustment.
export type ConversionAdjustment = {
  // For adjustments, uniquely identifies a conversion that was reported
  // without an order ID specified. If the adjustment_type is ENHANCEMENT, this
  // value is optional but may be set in addition to the order_id.
  gclidDateTimePair: GclidDateTimePair | undefined;
  // The order ID of the conversion to be adjusted. If the conversion was
  // reported with an order ID specified, that order ID must be used as the
  // identifier here. The order ID is required for enhancements.
  orderId?: string;
  // Resource name of the conversion action associated with this conversion
  // adjustment. Note: Although this resource name consists of a customer id and
  // a conversion action id, validation will ignore the customer id and use the
  // conversion action id as the sole identifier of the conversion action.
  conversionAction?: string;
  // The date time at which the adjustment occurred. Must be after the
  // conversion_date_time. The timezone must be specified. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  adjustmentDateTime?: string;
  // The adjustment type.
  adjustmentType: googleadsgoogleadsv9enums_ConversionAdjustmentTypeEnum_ConversionAdjustmentType | undefined;
  // Information needed to restate the conversion's value.
  // Required for restatements. Should not be supplied for retractions. An error
  // will be returned if provided for a retraction.
  // NOTE: If you want to upload a second restatement with a different adjusted
  // value, it must have a new, more recent, adjustment occurrence time.
  // Otherwise, it will be treated as a duplicate of the previous restatement
  // and ignored.
  restatementValue: RestatementValue | undefined;
  // The user identifiers to enhance the original conversion.
  // ConversionAdjustmentUploadService only accepts user identifiers in
  // enhancements. The maximum number of user identifiers for each
  // enhancement is 5.
  userIdentifiers: googleadsgoogleadsv9common_UserIdentifier[] | undefined;
  // The user agent to enhance the original conversion. This can be found in
  // your user's HTTP request header when they convert on your web page.
  // Example, "Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X)". User
  // agent can only be specified in enhancements with user identifiers. This
  // should match the user agent of the request that sent the original
  // conversion so the conversion and its enhancement are either both attributed
  // as same-device or both attributed as cross-device.
  userAgent?: string;
};

// Uniquely identifies a conversion that was reported without an order ID
// specified.
export type GclidDateTimePair = {
  // Google click ID (gclid) associated with the original conversion for this
  // adjustment.
  gclid?: string;
  // The date time at which the original conversion for this adjustment
  // occurred. The timezone must be specified. The format is "yyyy-mm-dd
  // hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  conversionDateTime?: string;
};

// The different actions advertisers can take to adjust the conversions that
// they already reported. Retractions negate a conversion. Restatements change
// the value of a conversion.
export type googleadsgoogleadsv9enums_ConversionAdjustmentTypeEnum_ConversionAdjustmentType =
  // Not specified.
  | "UNSPECIFIED"
  // Represents value unknown in this version.
  | "UNKNOWN"
  // Negates a conversion so that its total value and count are both zero.
  | "RETRACTION"
  // Changes the value of a conversion.
  | "RESTATEMENT"
  // Supplements an existing conversion with provided user identifiers and
  // user agent, which can be used by Google to enhance the conversion count.
  | "ENHANCEMENT";
// Contains information needed to restate a conversion's value.
export type RestatementValue = {
  // The restated conversion value. This is the value of the conversion after
  // restatement. For example, to change the value of a conversion from 100 to
  // 70, an adjusted value of 70 should be reported.
  // NOTE: If you want to upload a second restatement with a different adjusted
  // value, it must have a new, more recent, adjustment occurrence time.
  // Otherwise, it will be treated as a duplicate of the previous restatement
  // and ignored.
  adjustedValue?: number;
  // The currency of the restated value. If not provided, then the default
  // currency from the conversion action is used, and if that is not set then
  // the account currency is used. This is the ISO 4217 3-character currency
  // code e.g. USD or EUR.
  currencyCode?: string;
};

// Response message for
// [ConversionAdjustmentUploadService.UploadConversionAdjustments][google.ads.googleads.v9.services.ConversionAdjustmentUploadService.UploadConversionAdjustments].
export type UploadConversionAdjustmentsResponse = {
  // Errors that pertain to conversion adjustment failures in the partial
  // failure mode. Returned when all errors occur inside the adjustments. If any
  // errors occur outside the adjustments (e.g. auth errors), we return an RPC
  // level error.
  // See
  // https://developers.google.com/google-ads/api/docs/best-practices/partial-failures
  // for more information about partial failure.
  partialFailureError: googlerpc_Status | undefined;
  // Returned for successfully processed conversion adjustments. Proto will be
  // empty for rows that received an error. Results are not returned when
  // validate_only is true.
  results: ConversionAdjustmentResult[] | undefined;
};

// Information identifying a successfully processed ConversionAdjustment.
export type ConversionAdjustmentResult = {
  // The gclid and conversion date time of the conversion.
  gclidDateTimePair: GclidDateTimePair | undefined;
  // The order ID of the conversion to be adjusted.
  orderId: string | undefined;
  // Resource name of the conversion action associated with this conversion
  // adjustment.
  conversionAction?: string;
  // The date time at which the adjustment occurred. The format is
  // "yyyy-mm-dd hh:mm:ss+|-hh:mm", e.g. "2019-01-01 12:32:45-08:00".
  adjustmentDateTime?: string;
  // The adjustment type.
  adjustmentType: googleadsgoogleadsv9enums_ConversionAdjustmentTypeEnum_ConversionAdjustmentType | undefined;
};

// Service to upload conversion adjustments.
export interface ConversionAdjustmentUploadService {
  // Processes the given conversion adjustments.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [PartialFailureError]()
  // [QuotaError]()
  // [RequestError]()
  UploadConversionAdjustments(request: UploadConversionAdjustmentsRequest): Promise<UploadConversionAdjustmentsResponse>;
}

export function createConversionAdjustmentUploadServiceClient(
  handler: RequestHandler
): ConversionAdjustmentUploadService {
  return {
    UploadConversionAdjustments(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}:uploadConversionAdjustments`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<UploadConversionAdjustmentsResponse>;
    },
  };
}
// Request message for [LabelService.GetLabel][google.ads.googleads.v9.services.LabelService.GetLabel].
export type GetLabelRequest = {
  // Required. The resource name of the label to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for [LabelService.MutateLabels][google.ads.googleads.v9.services.LabelService.MutateLabels].
export type MutateLabelsRequest = {
  // Required. ID of the customer whose labels are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on labels.
  //
  // Behaviors: REQUIRED
  operations: LabelOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
  // The response content type setting. Determines whether the mutable resource
  // or just the resource name should be returned post mutation.
  responseContentType: googleadsgoogleadsv9enums_ResponseContentTypeEnum_ResponseContentType | undefined;
};

// Response message for a labels mutate.
export type MutateLabelsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateLabelResult[] | undefined;
};

// Service to manage labels.
export interface LabelService {
  // Returns the requested label in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetLabel(request: GetLabelRequest): Promise<googleadsgoogleadsv9resources_Label>;
  // Creates, updates, or removes labels. Operation statuses are returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [DateError]()
  // [DistinctError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [IdError]()
  // [InternalError]()
  // [LabelError]()
  // [MutateError]()
  // [NewResourceCreationError]()
  // [NotEmptyError]()
  // [NullError]()
  // [OperatorError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  // [SizeLimitError]()
  // [StringFormatError]()
  // [StringLengthError]()
  MutateLabels(request: MutateLabelsRequest): Promise<MutateLabelsResponse>;
}

export function createLabelServiceClient(
  handler: RequestHandler
): LabelService {
  return {
    GetLabel(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_Label>;
    },
    MutateLabels(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/labels:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateLabelsResponse>;
    },
  };
}
// Request message for [KeywordPlanCampaignService.GetKeywordPlanCampaign][google.ads.googleads.v9.services.KeywordPlanCampaignService.GetKeywordPlanCampaign].
export type GetKeywordPlanCampaignRequest = {
  // Required. The resource name of the Keyword Plan campaign to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Request message for
// [KeywordPlanCampaignService.MutateKeywordPlanCampaigns][google.ads.googleads.v9.services.KeywordPlanCampaignService.MutateKeywordPlanCampaigns].
export type MutateKeywordPlanCampaignsRequest = {
  // Required. The ID of the customer whose Keyword Plan campaigns are being modified.
  //
  // Behaviors: REQUIRED
  customerId: string | undefined;
  // Required. The list of operations to perform on individual Keyword Plan campaigns.
  //
  // Behaviors: REQUIRED
  operations: KeywordPlanCampaignOperation[] | undefined;
  // If true, successful operations will be carried out and invalid
  // operations will return errors. If false, all operations will be carried
  // out in one transaction if and only if they are all valid.
  // Default is false.
  partialFailure: boolean | undefined;
  // If true, the request is validated but not executed. Only errors are
  // returned, not results.
  validateOnly: boolean | undefined;
};

// Response message for a Keyword Plan campaign mutate.
export type MutateKeywordPlanCampaignsResponse = {
  // Errors that pertain to operation failures in the partial failure mode.
  // Returned only when partial_failure = true and all errors occur inside the
  // operations. If any errors occur outside the operations (e.g. auth errors),
  // we return an RPC level error.
  partialFailureError: googlerpc_Status | undefined;
  // All results for the mutate.
  results: MutateKeywordPlanCampaignResult[] | undefined;
};

// Service to manage Keyword Plan campaigns.
export interface KeywordPlanCampaignService {
  // Returns the requested Keyword Plan campaign in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetKeywordPlanCampaign(request: GetKeywordPlanCampaignRequest): Promise<googleadsgoogleadsv9resources_KeywordPlanCampaign>;
  // Creates, updates, or removes Keyword Plan campaigns. Operation statuses are
  // returned.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [DatabaseError]()
  // [FieldError]()
  // [FieldMaskError]()
  // [HeaderError]()
  // [InternalError]()
  // [KeywordPlanCampaignError]()
  // [KeywordPlanError]()
  // [ListOperationError]()
  // [MutateError]()
  // [QuotaError]()
  // [RangeError]()
  // [RequestError]()
  // [ResourceCountLimitExceededError]()
  MutateKeywordPlanCampaigns(request: MutateKeywordPlanCampaignsRequest): Promise<MutateKeywordPlanCampaignsResponse>;
}

export function createKeywordPlanCampaignServiceClient(
  handler: RequestHandler
): KeywordPlanCampaignService {
  return {
    GetKeywordPlanCampaign(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_KeywordPlanCampaign>;
    },
    MutateKeywordPlanCampaigns(request) {
      if (!request.customerId) {
        throw new Error("missing required field request.customer_id");
      }
      const path = `v9/customers/${request.customerId}/keywordPlanCampaigns:mutate`; // eslint-disable-line quotes
      const body = JSON.stringify(request);
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "POST",
        body,
      }) as Promise<MutateKeywordPlanCampaignsResponse>;
    },
  };
}
// Request message for
// [CampaignSimulationService.GetCampaignSimulation][google.ads.googleads.v9.services.CampaignSimulationService.GetCampaignSimulation].
export type GetCampaignSimulationRequest = {
  // Required. The resource name of the campaign simulation to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch campaign  simulations.
export interface CampaignSimulationService {
  // Returns the requested campaign simulation in full detail.
  GetCampaignSimulation(request: GetCampaignSimulationRequest): Promise<googleadsgoogleadsv9resources_CampaignSimulation>;
}

export function createCampaignSimulationServiceClient(
  handler: RequestHandler
): CampaignSimulationService {
  return {
    GetCampaignSimulation(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_CampaignSimulation>;
    },
  };
}
// Request message for [AdGroupAdAssetViewService.GetAdGroupAdAssetView][google.ads.googleads.v9.services.AdGroupAdAssetViewService.GetAdGroupAdAssetView].
export type GetAdGroupAdAssetViewRequest = {
  // Required. The resource name of the ad group ad asset view to fetch.
  //
  // Behaviors: REQUIRED
  resourceName: string | undefined;
};

// Service to fetch ad group ad asset views.
export interface AdGroupAdAssetViewService {
  // Returns the requested ad group ad asset view in full detail.
  // List of thrown errors:
  // [AuthenticationError]()
  // [AuthorizationError]()
  // [HeaderError]()
  // [InternalError]()
  // [QuotaError]()
  // [RequestError]()
  GetAdGroupAdAssetView(request: GetAdGroupAdAssetViewRequest): Promise<googleadsgoogleadsv9resources_AdGroupAdAssetView>;
}

export function createAdGroupAdAssetViewServiceClient(
  handler: RequestHandler
): AdGroupAdAssetViewService {
  return {
    GetAdGroupAdAssetView(request) {
      if (!request.resourceName) {
        throw new Error("missing required field request.resource_name");
      }
      const path = `v9/${request.resourceName}`; // eslint-disable-line quotes
      const body = null;
      const queryParams: string[] = [];
      let uri = path;
      if (queryParams.length > 0) {
        uri += "?" + queryParams.join("&");
      }
      return handler({
        path: uri,
        method: "GET",
        body,
      }) as Promise<googleadsgoogleadsv9resources_AdGroupAdAssetView>;
    },
  };
}

// @@protoc_insertion_point(typescript-http-eof)
